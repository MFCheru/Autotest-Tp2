import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        java.util.Map map0 = null;
        collections.Factory factory1 = null;
        try {
            java.util.Map map2 = collections.map.DefaultedMap.decorate(map0, factory1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        java.lang.Class class0 = null;
        try {
            collections.Predicate predicate1 = collections.PredicateUtils.instanceofPredicate(class0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        java.util.Map map0 = null;
        collections.Transformer transformer1 = null;
        try {
            java.util.Map map2 = collections.map.DefaultedMap.decorate(map0, transformer1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        collections.Transformer transformer2 = null;
        try {
            java.util.Map map3 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        java.util.Map map0 = null;
        collections.Predicate predicate1 = collections.PredicateUtils.truePredicate();
        collections.Predicate predicate2 = collections.PredicateUtils.truePredicate();
        try {
            java.util.Map map3 = collections.map.PredicatedMap.decorate(map0, predicate1, predicate2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(predicate1);
        org.junit.Assert.assertNotNull(predicate2);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        collections.PredicateUtils predicateUtils8 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils8);
        boolean b10 = defaultedMap1.containsValue((java.lang.Object) predicateUtils8);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertTrue(b10 == false);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b20 = defaultedMap13.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        int i28 = defaultedMap22.size();
        java.util.Set set29 = defaultedMap22.keySet();
        java.lang.Object obj31 = defaultedMap22.get((java.lang.Object) 10.0d);
        java.lang.Object obj32 = defaultedMap1.put((java.lang.Object) defaultedMap13, (java.lang.Object) 10.0d);
        collections.Factory factory33 = null;
        try {
            java.util.Map map34 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap13, factory33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        collections.Transformer transformer25 = null;
        try {
            java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        java.util.Map map0 = null;
        collections.map.DefaultedMap defaultedMap2 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj5 = defaultedMap2.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj7 = defaultedMap2.get((java.lang.Object) '4');
        boolean b8 = defaultedMap2.isEmpty();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj15 = defaultedMap10.get((java.lang.Object) '4');
        boolean b17 = defaultedMap10.containsKey((java.lang.Object) (byte) 0);
        boolean b18 = defaultedMap2.equals((java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        java.lang.Object obj26 = defaultedMap2.get(obj25);
        try {
            java.util.Map map27 = collections.map.DefaultedMap.decorate(map0, obj26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + (short) 1 + "'", obj7.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + 'a' + "'", obj26.equals('a'));
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.util.Map map11 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) (byte) -1);
        collections.Factory factory12 = null;
        try {
            java.util.Map map13 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(map11);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.util.Map map11 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) (byte) -1);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b28 = defaultedMap21.containsKey((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap13.equals((java.lang.Object) defaultedMap21);
        boolean b30 = defaultedMap21.isEmpty();
        defaultedMap21.clear();
        collections.Predicate predicate32 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b40 = defaultedMap34.isEmpty();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        boolean b49 = defaultedMap42.containsKey((java.lang.Object) (byte) 0);
        boolean b50 = defaultedMap34.equals((java.lang.Object) defaultedMap42);
        boolean b51 = defaultedMap42.isEmpty();
        collections.Predicate predicate52 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate53 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map54 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap42, predicate52, predicate53);
        java.util.Map map55 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap21, predicate32, predicate52);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj60 = defaultedMap57.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj62 = defaultedMap57.get((java.lang.Object) '4');
        boolean b63 = defaultedMap57.isEmpty();
        defaultedMap57.clear();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj69 = defaultedMap66.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj71 = defaultedMap66.get((java.lang.Object) '4');
        boolean b72 = defaultedMap66.isEmpty();
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj77 = defaultedMap74.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj79 = defaultedMap74.get((java.lang.Object) '4');
        boolean b81 = defaultedMap74.containsKey((java.lang.Object) (byte) 0);
        boolean b82 = defaultedMap66.equals((java.lang.Object) defaultedMap74);
        boolean b83 = defaultedMap74.isEmpty();
        collections.Predicate predicate84 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate85 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map86 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap74, predicate84, predicate85);
        boolean b87 = defaultedMap57.containsValue((java.lang.Object) predicate84);
        try {
            java.util.Map map88 = collections.map.PredicatedMap.decorate(map11, predicate52, predicate84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(predicate32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(predicate52);
        org.junit.Assert.assertNotNull(predicate53);
        org.junit.Assert.assertNotNull(map54);
        org.junit.Assert.assertNotNull(map55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + obj71 + "' != '" + (short) 1 + "'", obj71.equals((short) 1));
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + obj79 + "' != '" + (short) 1 + "'", obj79.equals((short) 1));
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertNotNull(predicate84);
        org.junit.Assert.assertNotNull(predicate85);
        org.junit.Assert.assertNotNull(map86);
        org.junit.Assert.assertTrue(b87 == false);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        java.util.Map map24 = null;
        try {
            defaultedMap13.putAll(map24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b40 = defaultedMap33.containsKey((java.lang.Object) (byte) 0);
        boolean b41 = defaultedMap25.equals((java.lang.Object) defaultedMap33);
        java.util.Collection collection42 = defaultedMap33.values();
        boolean b43 = defaultedMap13.equals((java.lang.Object) defaultedMap33);
        collections.Transformer transformer44 = null;
        try {
            java.util.Map map45 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap33, transformer44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertTrue(b43 == false);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b19 = defaultedMap9.containsKey((java.lang.Object) 10);
        boolean b21 = defaultedMap9.equals((java.lang.Object) '#');
        collections.Transformer transformer22 = null;
        try {
            java.util.Map map23 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, transformer22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == false);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        java.lang.String str20 = defaultedMap9.toString();
        java.util.Set set21 = defaultedMap9.entrySet();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        int i29 = defaultedMap23.size();
        java.lang.Object obj31 = defaultedMap23.remove((java.lang.Object) 10.0f);
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        boolean b42 = defaultedMap35.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj49 = defaultedMap44.get((java.lang.Object) '4');
        int i50 = defaultedMap44.size();
        java.util.Set set51 = defaultedMap44.keySet();
        java.lang.Object obj53 = defaultedMap44.get((java.lang.Object) 10.0d);
        java.lang.Object obj54 = defaultedMap23.put((java.lang.Object) defaultedMap35, (java.lang.Object) 10.0d);
        java.util.Set set55 = defaultedMap23.keySet();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj60 = defaultedMap57.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj62 = defaultedMap57.get((java.lang.Object) '4');
        int i63 = defaultedMap57.size();
        java.lang.Object obj65 = defaultedMap57.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj70 = defaultedMap67.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj72 = defaultedMap67.get((java.lang.Object) '4');
        boolean b74 = defaultedMap67.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set75 = defaultedMap67.entrySet();
        java.lang.Object obj77 = defaultedMap67.get((java.lang.Object) 0.0d);
        defaultedMap57.putAll((java.util.Map) defaultedMap67);
        collections.Predicate predicate79 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate80 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map81 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap67, predicate79, predicate80);
        java.lang.Object obj82 = defaultedMap9.put((java.lang.Object) set55, (java.lang.Object) predicate79);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "{1=a}" + "'", str20.equals("{1=a}"));
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(i29 == 1);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertTrue(i50 == 1);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
        org.junit.Assert.assertTrue(i63 == 1);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (short) 1 + "'", obj72.equals((short) 1));
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertNotNull(set75);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short) 1 + "'", obj77.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate79);
        org.junit.Assert.assertNotNull(predicate80);
        org.junit.Assert.assertNotNull(map81);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        boolean b12 = defaultedMap3.isEmpty();
        collections.Transformer transformer13 = null;
        try {
            java.util.Map map14 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap3, transformer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue(b12 == true);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.lang.Object obj13 = defaultedMap1.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        java.util.Set set14 = defaultedMap1.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(set14);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b27 = defaultedMap21.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap21.equals((java.lang.Object) defaultedMap29);
        java.util.Collection collection38 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        defaultedMap9.putAll((java.util.Map) defaultedMap39);
        collections.Factory factory41 = null;
        try {
            java.util.Map map42 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, factory41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(collection38);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        int i17 = defaultedMap11.size();
        java.lang.Object obj19 = defaultedMap11.remove((java.lang.Object) 10.0f);
        java.lang.Object obj20 = defaultedMap1.remove((java.lang.Object) defaultedMap11);
        collections.Factory factory21 = null;
        try {
            java.util.Map map22 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap11, factory21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(i17 == 1);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        java.util.Collection collection30 = defaultedMap24.values();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Object obj32 = defaultedMap24.get(obj31);
        collections.PredicateUtils predicateUtils33 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils33);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj41 = defaultedMap36.get((java.lang.Object) '4');
        boolean b42 = defaultedMap36.isEmpty();
        defaultedMap36.clear();
        java.lang.Object obj44 = defaultedMap34.remove((java.lang.Object) defaultedMap36);
        boolean b45 = defaultedMap36.isEmpty();
        java.lang.Object obj46 = defaultedMap24.get((java.lang.Object) defaultedMap36);
        java.util.Map map48 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap36, (java.lang.Object) 1);
        java.lang.Object obj49 = defaultedMap11.remove((java.lang.Object) 1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (short) 1 + "'", obj41.equals((short) 1));
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        boolean b19 = defaultedMap3.equals((java.lang.Object) defaultedMap11);
        boolean b20 = defaultedMap11.isEmpty();
        defaultedMap11.clear();
        collections.Predicate predicate22 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        boolean b30 = defaultedMap24.isEmpty();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        boolean b40 = defaultedMap24.equals((java.lang.Object) defaultedMap32);
        boolean b41 = defaultedMap32.isEmpty();
        collections.Predicate predicate42 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate43 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map44 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap32, predicate42, predicate43);
        java.util.Map map45 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap11, predicate22, predicate42);
        boolean b46 = defaultedMap1.equals((java.lang.Object) predicate22);
        collections.Transformer transformer47 = null;
        try {
            java.util.Map map48 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(predicate22);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(predicate42);
        org.junit.Assert.assertNotNull(predicate43);
        org.junit.Assert.assertNotNull(map44);
        org.junit.Assert.assertNotNull(map45);
        org.junit.Assert.assertTrue(b46 == false);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b20 = defaultedMap13.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        int i28 = defaultedMap22.size();
        java.util.Set set29 = defaultedMap22.keySet();
        java.lang.Object obj31 = defaultedMap22.get((java.lang.Object) 10.0d);
        java.lang.Object obj32 = defaultedMap1.put((java.lang.Object) defaultedMap13, (java.lang.Object) 10.0d);
        java.util.Set set33 = defaultedMap1.keySet();
        collections.PredicateUtils predicateUtils34 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils34);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj42 = defaultedMap37.get((java.lang.Object) '4');
        boolean b43 = defaultedMap37.isEmpty();
        defaultedMap37.clear();
        java.lang.Object obj45 = defaultedMap35.remove((java.lang.Object) defaultedMap37);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap37);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap48.get((java.lang.Object) '4');
        java.lang.Object obj54 = defaultedMap46.get((java.lang.Object) '4');
        java.lang.Object obj55 = defaultedMap1.remove((java.lang.Object) '4');
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (short) 1 + "'", obj42.equals((short) 1));
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.lang.String str18 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        int i26 = defaultedMap20.size();
        java.lang.Object obj28 = defaultedMap20.remove((java.lang.Object) 10.0f);
        java.lang.Object obj30 = defaultedMap20.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap41.get((java.lang.Object) '4');
        int i47 = defaultedMap41.size();
        java.util.Set set48 = defaultedMap41.keySet();
        java.lang.Object obj50 = defaultedMap41.get((java.lang.Object) 10.0d);
        java.lang.Object obj51 = defaultedMap20.put((java.lang.Object) defaultedMap32, (java.lang.Object) 10.0d);
        java.util.Set set52 = defaultedMap20.keySet();
        collections.PredicateUtils predicateUtils53 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils53);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b62 = defaultedMap56.isEmpty();
        defaultedMap56.clear();
        java.lang.Object obj64 = defaultedMap54.remove((java.lang.Object) defaultedMap56);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap56);
        java.lang.Object obj66 = defaultedMap1.put((java.lang.Object) defaultedMap20, (java.lang.Object) defaultedMap65);
        java.lang.String str67 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{1=a}" + "'", str18.equals("{1=a}"));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(i26 == 1);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertTrue(i47 == 1);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "{1=a, {{1=a}=10.0, 1=a}={}}" + "'", str67.equals("{1=a, {{1=a}=10.0, 1=a}={}}"));
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.util.Set set25 = defaultedMap1.keySet();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) 100.0f);
        int i28 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        int i41 = defaultedMap35.size();
        defaultedMap30.putAll((java.util.Map) defaultedMap35);
        boolean b43 = defaultedMap30.isEmpty();
        java.lang.Object obj44 = defaultedMap1.remove((java.lang.Object) b43);
        collections.Predicate predicate45 = collections.PredicateUtils.notNullPredicate();
        boolean b46 = defaultedMap1.equals((java.lang.Object) predicate45);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(i41 == 1);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(predicate45);
        org.junit.Assert.assertTrue(b46 == false);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        defaultedMap1.clear();
        java.util.Set set9 = defaultedMap1.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(set9);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.PredicateUtils predicateUtils23 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils23);
        boolean b25 = defaultedMap1.containsValue((java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        int i33 = defaultedMap27.size();
        java.lang.Object obj35 = defaultedMap27.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj42 = defaultedMap37.get((java.lang.Object) '4');
        int i43 = defaultedMap37.size();
        java.lang.Object obj45 = defaultedMap37.remove((java.lang.Object) 10.0f);
        java.lang.Object obj46 = defaultedMap27.remove((java.lang.Object) defaultedMap37);
        int i47 = defaultedMap27.size();
        java.lang.Object obj48 = defaultedMap1.get((java.lang.Object) i47);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertTrue(i33 == 1);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (short) 1 + "'", obj42.equals((short) 1));
        org.junit.Assert.assertTrue(i43 == 1);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(i47 == 1);
        org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (short) 1 + "'", obj48.equals((short) 1));
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj15 = defaultedMap10.get((java.lang.Object) '4');
        int i16 = defaultedMap10.size();
        java.lang.Object obj18 = defaultedMap10.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        boolean b27 = defaultedMap20.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set28 = defaultedMap20.entrySet();
        java.lang.Object obj30 = defaultedMap20.get((java.lang.Object) 0.0d);
        defaultedMap10.putAll((java.util.Map) defaultedMap20);
        java.lang.Object obj33 = defaultedMap10.remove((java.lang.Object) (short) 100);
        java.util.Set set34 = defaultedMap10.keySet();
        java.lang.Object obj36 = defaultedMap10.remove((java.lang.Object) 100.0f);
        int i37 = defaultedMap10.size();
        java.lang.Object obj38 = defaultedMap8.remove((java.lang.Object) defaultedMap10);
        int i39 = defaultedMap8.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
        org.junit.Assert.assertTrue(i16 == 1);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue(i37 == 1);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(i39 == 0);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        collections.Factory factory2 = null;
        try {
            java.util.Map map3 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        java.util.Collection collection26 = defaultedMap20.values();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Object obj28 = defaultedMap20.get(obj27);
        java.util.Map map29 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, obj27);
        collections.Factory factory30 = null;
        try {
            java.util.Map map31 = collections.map.DefaultedMap.decorate(map29, factory30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertNotNull(map29);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        int i19 = defaultedMap13.size();
        java.lang.Object obj21 = defaultedMap13.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b30 = defaultedMap23.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set31 = defaultedMap23.entrySet();
        java.lang.Object obj33 = defaultedMap23.get((java.lang.Object) 0.0d);
        defaultedMap13.putAll((java.util.Map) defaultedMap23);
        collections.Predicate predicate35 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate36 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map37 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap23, predicate35, predicate36);
        java.lang.Object obj38 = defaultedMap3.remove((java.lang.Object) predicate36);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(i19 == 1);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (short) 1 + "'", obj33.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate35);
        org.junit.Assert.assertNotNull(predicate36);
        org.junit.Assert.assertNotNull(map37);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap6.get((java.lang.Object) '4');
        int i12 = defaultedMap6.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set16 = defaultedMap15.entrySet();
        java.util.Set set17 = defaultedMap15.entrySet();
        java.lang.Object obj19 = defaultedMap6.put((java.lang.Object) set17, (java.lang.Object) (short) 1);
        collections.Factory factory20 = null;
        try {
            java.util.Map map21 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, factory20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertTrue(i12 == 1);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b20 = defaultedMap14.isEmpty();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b29 = defaultedMap22.containsKey((java.lang.Object) (byte) 0);
        boolean b30 = defaultedMap14.equals((java.lang.Object) defaultedMap22);
        java.util.Collection collection31 = defaultedMap22.values();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        java.util.Collection collection39 = defaultedMap33.values();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Object obj41 = defaultedMap33.get(obj40);
        java.util.Map map42 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap22, obj40);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj49 = defaultedMap44.get((java.lang.Object) '4');
        int i50 = defaultedMap44.size();
        java.lang.Object obj52 = defaultedMap44.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b61 = defaultedMap54.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set62 = defaultedMap54.entrySet();
        java.lang.Object obj64 = defaultedMap54.get((java.lang.Object) 0.0d);
        defaultedMap44.putAll((java.util.Map) defaultedMap54);
        java.lang.Object obj67 = defaultedMap44.remove((java.lang.Object) (short) 100);
        java.util.Set set68 = defaultedMap44.keySet();
        java.lang.Object obj70 = defaultedMap44.remove((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj75 = defaultedMap72.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj77 = defaultedMap72.get((java.lang.Object) '4');
        boolean b79 = defaultedMap72.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set80 = defaultedMap72.entrySet();
        java.lang.Object obj82 = defaultedMap72.get((java.lang.Object) 0.0d);
        java.lang.Object obj83 = defaultedMap44.get((java.lang.Object) 0.0d);
        java.lang.Object obj84 = defaultedMap3.put((java.lang.Object) map42, (java.lang.Object) 0.0d);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertNotNull(collection39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (short) 1 + "'", obj41.equals((short) 1));
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertTrue(i50 == 1);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(set62);
        org.junit.Assert.assertTrue("'" + obj64 + "' != '" + (short) 1 + "'", obj64.equals((short) 1));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(set68);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short) 1 + "'", obj77.equals((short) 1));
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertNotNull(set80);
        org.junit.Assert.assertTrue("'" + obj82 + "' != '" + (short) 1 + "'", obj82.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj83 + "' != '" + (short) 1 + "'", obj83.equals((short) 1));
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b19 = defaultedMap9.containsKey((java.lang.Object) 10);
        java.lang.Object obj21 = defaultedMap9.get((java.lang.Object) (byte) 1);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b29 = defaultedMap23.isEmpty();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap23.equals((java.lang.Object) defaultedMap31);
        boolean b40 = defaultedMap31.isEmpty();
        defaultedMap31.clear();
        collections.Predicate predicate42 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj49 = defaultedMap44.get((java.lang.Object) '4');
        boolean b50 = defaultedMap44.isEmpty();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj55 = defaultedMap52.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj57 = defaultedMap52.get((java.lang.Object) '4');
        boolean b59 = defaultedMap52.containsKey((java.lang.Object) (byte) 0);
        boolean b60 = defaultedMap44.equals((java.lang.Object) defaultedMap52);
        boolean b61 = defaultedMap52.isEmpty();
        collections.Predicate predicate62 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate63 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map64 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap52, predicate62, predicate63);
        java.util.Map map65 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap31, predicate42, predicate62);
        java.lang.Object obj66 = defaultedMap9.get((java.lang.Object) defaultedMap31);
        java.lang.String str67 = defaultedMap9.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(predicate42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj57 + "' != '" + (short) 1 + "'", obj57.equals((short) 1));
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(predicate62);
        org.junit.Assert.assertNotNull(predicate63);
        org.junit.Assert.assertNotNull(map64);
        org.junit.Assert.assertNotNull(map65);
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (short) 1 + "'", obj66.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "{1=a}" + "'", str67.equals("{1=a}"));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.util.Map map11 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) (byte) -1);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap1.get(obj12);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj20 = defaultedMap15.get((java.lang.Object) '4');
        int i21 = defaultedMap15.size();
        java.lang.Object obj23 = defaultedMap15.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b32 = defaultedMap25.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set33 = defaultedMap25.entrySet();
        java.lang.Object obj35 = defaultedMap25.get((java.lang.Object) 0.0d);
        defaultedMap15.putAll((java.util.Map) defaultedMap25);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        int i44 = defaultedMap38.size();
        java.lang.Object obj46 = defaultedMap38.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap48.get((java.lang.Object) '4');
        boolean b55 = defaultedMap48.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set56 = defaultedMap48.entrySet();
        java.lang.Object obj58 = defaultedMap48.get((java.lang.Object) 0.0d);
        defaultedMap38.putAll((java.util.Map) defaultedMap48);
        collections.Predicate predicate60 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate61 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map62 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap48, predicate60, predicate61);
        java.lang.Object obj63 = defaultedMap15.get((java.lang.Object) map62);
        collections.PredicateUtils predicateUtils64 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils64);
        boolean b66 = defaultedMap15.containsValue((java.lang.Object) defaultedMap65);
        defaultedMap1.putAll((java.util.Map) defaultedMap65);
        java.lang.String str68 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + (short) 1 + "'", obj13.equals((short) 1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 1 + "'", obj20.equals((short) 1));
        org.junit.Assert.assertTrue(i21 == 1);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertTrue(i44 == 1);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (short) 1 + "'", obj58.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate60);
        org.junit.Assert.assertNotNull(predicate61);
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "{1=a}" + "'", str68.equals("{1=a}"));
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        int i17 = defaultedMap11.size();
        java.lang.Object obj19 = defaultedMap11.remove((java.lang.Object) 10.0f);
        java.lang.Object obj20 = defaultedMap1.remove((java.lang.Object) defaultedMap11);
        java.util.Set set21 = defaultedMap11.entrySet();
        java.util.Set set22 = defaultedMap11.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(i17 == 1);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertNotNull(set22);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        int i19 = defaultedMap13.size();
        java.lang.Object obj21 = defaultedMap13.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b30 = defaultedMap23.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set31 = defaultedMap23.entrySet();
        java.lang.Object obj33 = defaultedMap23.get((java.lang.Object) 0.0d);
        defaultedMap13.putAll((java.util.Map) defaultedMap23);
        java.lang.String str35 = defaultedMap13.toString();
        java.lang.Object obj36 = defaultedMap1.get((java.lang.Object) str35);
        java.lang.String str37 = defaultedMap1.toString();
        int i38 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(i19 == 1);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (short) 1 + "'", obj33.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "{1=a}" + "'", str35.equals("{1=a}"));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "{}" + "'", str37.equals("{}"));
        org.junit.Assert.assertTrue(i38 == 0);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b40 = defaultedMap33.containsKey((java.lang.Object) (byte) 0);
        boolean b41 = defaultedMap25.equals((java.lang.Object) defaultedMap33);
        java.util.Collection collection42 = defaultedMap33.values();
        boolean b43 = defaultedMap13.equals((java.lang.Object) defaultedMap33);
        boolean b45 = defaultedMap13.equals((java.lang.Object) (short) 0);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(b45 == false);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b6 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b19 = defaultedMap9.containsKey((java.lang.Object) 10);
        boolean b21 = defaultedMap9.equals((java.lang.Object) '#');
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        int i29 = defaultedMap23.size();
        java.lang.Object obj31 = defaultedMap23.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b40 = defaultedMap33.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set41 = defaultedMap33.entrySet();
        java.lang.Object obj43 = defaultedMap33.get((java.lang.Object) 0.0d);
        defaultedMap23.putAll((java.util.Map) defaultedMap33);
        java.lang.Object obj46 = defaultedMap23.remove((java.lang.Object) (short) 100);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap48.get((java.lang.Object) '4');
        boolean b54 = defaultedMap48.isEmpty();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b63 = defaultedMap56.containsKey((java.lang.Object) (byte) 0);
        boolean b64 = defaultedMap48.equals((java.lang.Object) defaultedMap56);
        java.lang.Object obj65 = defaultedMap23.get((java.lang.Object) defaultedMap48);
        java.lang.Object obj66 = defaultedMap9.get(obj65);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj71 = defaultedMap68.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj73 = defaultedMap68.get((java.lang.Object) '4');
        boolean b74 = defaultedMap68.isEmpty();
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj79 = defaultedMap76.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj81 = defaultedMap76.get((java.lang.Object) '4');
        boolean b83 = defaultedMap76.containsKey((java.lang.Object) (byte) 0);
        boolean b84 = defaultedMap68.equals((java.lang.Object) defaultedMap76);
        java.util.Collection collection85 = defaultedMap76.values();
        collections.map.DefaultedMap defaultedMap86 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap76);
        boolean b87 = defaultedMap9.equals((java.lang.Object) defaultedMap76);
        defaultedMap76.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(i29 == 1);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + 'a' + "'", obj66.equals('a'));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (short) 1 + "'", obj73.equals((short) 1));
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (short) 1 + "'", obj81.equals((short) 1));
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertNotNull(collection85);
        org.junit.Assert.assertTrue(b87 == true);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.lang.String str18 = defaultedMap1.toString();
        boolean b20 = defaultedMap1.containsValue((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b40 = defaultedMap30.containsKey((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        boolean b48 = defaultedMap42.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b57 = defaultedMap50.containsKey((java.lang.Object) (byte) 0);
        boolean b58 = defaultedMap42.equals((java.lang.Object) defaultedMap50);
        boolean b59 = defaultedMap50.isEmpty();
        collections.Predicate predicate60 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate61 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map62 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap50, predicate60, predicate61);
        java.lang.Object obj63 = defaultedMap1.put((java.lang.Object) 10, (java.lang.Object) predicate60);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) 10);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{1=a}" + "'", str18.equals("{1=a}"));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertNotNull(predicate60);
        org.junit.Assert.assertNotNull(predicate61);
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        java.util.Set set24 = defaultedMap13.keySet();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        boolean b32 = defaultedMap26.isEmpty();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        boolean b42 = defaultedMap26.equals((java.lang.Object) defaultedMap34);
        boolean b44 = defaultedMap34.containsKey((java.lang.Object) 10);
        java.lang.Object obj46 = defaultedMap34.get((java.lang.Object) (byte) 1);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap48.get((java.lang.Object) '4');
        boolean b54 = defaultedMap48.isEmpty();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b63 = defaultedMap56.containsKey((java.lang.Object) (byte) 0);
        boolean b64 = defaultedMap48.equals((java.lang.Object) defaultedMap56);
        boolean b65 = defaultedMap56.isEmpty();
        defaultedMap56.clear();
        collections.Predicate predicate67 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj72 = defaultedMap69.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj74 = defaultedMap69.get((java.lang.Object) '4');
        boolean b75 = defaultedMap69.isEmpty();
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj80 = defaultedMap77.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj82 = defaultedMap77.get((java.lang.Object) '4');
        boolean b84 = defaultedMap77.containsKey((java.lang.Object) (byte) 0);
        boolean b85 = defaultedMap69.equals((java.lang.Object) defaultedMap77);
        boolean b86 = defaultedMap77.isEmpty();
        collections.Predicate predicate87 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate88 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map89 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap77, predicate87, predicate88);
        java.util.Map map90 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap56, predicate67, predicate87);
        java.lang.Object obj91 = defaultedMap34.get((java.lang.Object) defaultedMap56);
        java.lang.Object obj92 = defaultedMap13.get(obj91);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertNotNull(predicate67);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (short) 1 + "'", obj74.equals((short) 1));
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + obj82 + "' != '" + (short) 1 + "'", obj82.equals((short) 1));
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertTrue(b86 == false);
        org.junit.Assert.assertNotNull(predicate87);
        org.junit.Assert.assertNotNull(predicate88);
        org.junit.Assert.assertNotNull(map89);
        org.junit.Assert.assertNotNull(map90);
        org.junit.Assert.assertTrue("'" + obj91 + "' != '" + (short) 1 + "'", obj91.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj92 + "' != '" + (short) 1 + "'", obj92.equals((short) 1));
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj24 = defaultedMap19.get((java.lang.Object) '4');
        int i25 = defaultedMap19.size();
        java.lang.Object obj27 = defaultedMap19.remove((java.lang.Object) 10.0f);
        java.lang.Object obj29 = defaultedMap19.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj45 = defaultedMap40.get((java.lang.Object) '4');
        int i46 = defaultedMap40.size();
        java.util.Set set47 = defaultedMap40.keySet();
        java.lang.Object obj49 = defaultedMap40.get((java.lang.Object) 10.0d);
        java.lang.Object obj50 = defaultedMap19.put((java.lang.Object) defaultedMap31, (java.lang.Object) 10.0d);
        java.util.Set set51 = defaultedMap19.keySet();
        java.lang.Object obj52 = defaultedMap9.get((java.lang.Object) defaultedMap19);
        java.util.Set set53 = defaultedMap9.entrySet();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        java.lang.String str55 = defaultedMap54.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short) 1 + "'", obj24.equals((short) 1));
        org.junit.Assert.assertTrue(i25 == 1);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (short) 1 + "'", obj45.equals((short) 1));
        org.junit.Assert.assertTrue(i46 == 1);
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "{}" + "'", str55.equals("{}"));
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        collections.Predicate predicate20 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap30.isEmpty();
        collections.Predicate predicate40 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate41 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate40, predicate41);
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate20, predicate40);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) map43);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        boolean b52 = defaultedMap46.isEmpty();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b61 = defaultedMap54.containsKey((java.lang.Object) (byte) 0);
        boolean b62 = defaultedMap46.equals((java.lang.Object) defaultedMap54);
        java.lang.String str63 = defaultedMap46.toString();
        boolean b65 = defaultedMap46.containsValue((java.lang.Object) (byte) 100);
        java.lang.Object obj66 = defaultedMap44.remove((java.lang.Object) b65);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(predicate40);
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "{1=a}" + "'", str63.equals("{1=a}"));
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertNull(obj66);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set2 = defaultedMap1.entrySet();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.Transformer transformer4 = null;
        try {
            java.util.Map map5 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set3);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b27 = defaultedMap21.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap21.equals((java.lang.Object) defaultedMap29);
        java.util.Collection collection38 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        defaultedMap9.putAll((java.util.Map) defaultedMap39);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        boolean b48 = defaultedMap42.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b57 = defaultedMap50.containsKey((java.lang.Object) (byte) 0);
        boolean b58 = defaultedMap42.equals((java.lang.Object) defaultedMap50);
        java.util.Collection collection59 = defaultedMap50.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap50);
        boolean b61 = defaultedMap60.isEmpty();
        defaultedMap39.putAll((java.util.Map) defaultedMap60);
        java.util.Set set63 = defaultedMap39.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertNotNull(set63);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.Factory factory10 = null;
        try {
            java.util.Map map11 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.util.Set set25 = defaultedMap1.keySet();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set37 = defaultedMap29.entrySet();
        java.lang.Object obj39 = defaultedMap29.get((java.lang.Object) 0.0d);
        java.lang.Object obj40 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.Predicate predicate41 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj48 = defaultedMap43.get((java.lang.Object) '4');
        boolean b49 = defaultedMap43.isEmpty();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj54 = defaultedMap51.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap51.get((java.lang.Object) '4');
        boolean b58 = defaultedMap51.containsKey((java.lang.Object) (byte) 0);
        boolean b59 = defaultedMap43.equals((java.lang.Object) defaultedMap51);
        boolean b60 = defaultedMap51.isEmpty();
        defaultedMap51.clear();
        collections.Predicate predicate62 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj69 = defaultedMap64.get((java.lang.Object) '4');
        boolean b70 = defaultedMap64.isEmpty();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj75 = defaultedMap72.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj77 = defaultedMap72.get((java.lang.Object) '4');
        boolean b79 = defaultedMap72.containsKey((java.lang.Object) (byte) 0);
        boolean b80 = defaultedMap64.equals((java.lang.Object) defaultedMap72);
        boolean b81 = defaultedMap72.isEmpty();
        collections.Predicate predicate82 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate83 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map84 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap72, predicate82, predicate83);
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap51, predicate62, predicate82);
        java.util.Map map86 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate41, predicate62);
        collections.map.DefaultedMap defaultedMap87 = new collections.map.DefaultedMap((java.lang.Object) map86);
        collections.map.DefaultedMap defaultedMap88 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap87);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (short) 1 + "'", obj48.equals((short) 1));
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (short) 1 + "'", obj56.equals((short) 1));
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNotNull(predicate62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + obj69 + "' != '" + (short) 1 + "'", obj69.equals((short) 1));
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short) 1 + "'", obj77.equals((short) 1));
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertNotNull(predicate82);
        org.junit.Assert.assertNotNull(predicate83);
        org.junit.Assert.assertNotNull(map84);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertNotNull(map86);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.String str23 = defaultedMap1.toString();
        java.util.Collection collection24 = defaultedMap1.values();
        boolean b25 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "{1=a}" + "'", str23.equals("{1=a}"));
        org.junit.Assert.assertNotNull(collection24);
        org.junit.Assert.assertTrue(b25 == false);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.PredicateUtils predicateUtils23 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils23);
        boolean b25 = defaultedMap1.containsValue((java.lang.Object) defaultedMap24);
        java.util.Set set26 = defaultedMap1.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(set26);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.lang.Object obj13 = defaultedMap1.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj20 = defaultedMap15.get((java.lang.Object) '4');
        java.util.Collection collection21 = defaultedMap15.values();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = defaultedMap15.get(obj22);
        collections.PredicateUtils predicateUtils24 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        boolean b33 = defaultedMap27.isEmpty();
        defaultedMap27.clear();
        java.lang.Object obj35 = defaultedMap25.remove((java.lang.Object) defaultedMap27);
        boolean b36 = defaultedMap27.isEmpty();
        java.lang.Object obj37 = defaultedMap15.get((java.lang.Object) defaultedMap27);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj44 = defaultedMap39.get((java.lang.Object) '4');
        boolean b45 = defaultedMap39.isEmpty();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj50 = defaultedMap47.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj52 = defaultedMap47.get((java.lang.Object) '4');
        boolean b54 = defaultedMap47.containsKey((java.lang.Object) (byte) 0);
        boolean b55 = defaultedMap39.equals((java.lang.Object) defaultedMap47);
        java.util.Collection collection56 = defaultedMap47.values();
        boolean b57 = defaultedMap27.equals((java.lang.Object) defaultedMap47);
        boolean b58 = defaultedMap27.isEmpty();
        java.lang.Object obj59 = defaultedMap1.get((java.lang.Object) defaultedMap27);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 1 + "'", obj20.equals((short) 1));
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b19 = defaultedMap9.containsKey((java.lang.Object) 10);
        java.lang.Object obj21 = defaultedMap9.get((java.lang.Object) (byte) 1);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        java.util.Collection collection29 = defaultedMap23.values();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Object obj31 = defaultedMap23.get(obj30);
        boolean b32 = defaultedMap9.equals((java.lang.Object) defaultedMap23);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertNotNull(collection29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(b32 == true);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b27 = defaultedMap21.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap21.equals((java.lang.Object) defaultedMap29);
        java.util.Collection collection38 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        defaultedMap9.putAll((java.util.Map) defaultedMap39);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        boolean b48 = defaultedMap42.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b57 = defaultedMap50.containsKey((java.lang.Object) (byte) 0);
        boolean b58 = defaultedMap42.equals((java.lang.Object) defaultedMap50);
        java.util.Collection collection59 = defaultedMap50.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap50);
        boolean b61 = defaultedMap60.isEmpty();
        defaultedMap39.putAll((java.util.Map) defaultedMap60);
        boolean b63 = defaultedMap39.isEmpty();
        collections.Transformer transformer64 = null;
        try {
            java.util.Map map65 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap39, transformer64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b63 == true);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj24 = defaultedMap19.get((java.lang.Object) '4');
        int i25 = defaultedMap19.size();
        java.lang.Object obj27 = defaultedMap19.remove((java.lang.Object) 10.0f);
        java.lang.Object obj29 = defaultedMap19.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj45 = defaultedMap40.get((java.lang.Object) '4');
        int i46 = defaultedMap40.size();
        java.util.Set set47 = defaultedMap40.keySet();
        java.lang.Object obj49 = defaultedMap40.get((java.lang.Object) 10.0d);
        java.lang.Object obj50 = defaultedMap19.put((java.lang.Object) defaultedMap31, (java.lang.Object) 10.0d);
        java.util.Set set51 = defaultedMap19.keySet();
        java.lang.Object obj52 = defaultedMap9.get((java.lang.Object) defaultedMap19);
        java.util.Set set53 = defaultedMap9.entrySet();
        java.util.Collection collection54 = defaultedMap9.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short) 1 + "'", obj24.equals((short) 1));
        org.junit.Assert.assertTrue(i25 == 1);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (short) 1 + "'", obj45.equals((short) 1));
        org.junit.Assert.assertTrue(i46 == 1);
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertNotNull(collection54);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        java.util.Map map0 = null;
        collections.map.DefaultedMap defaultedMap2 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj5 = defaultedMap2.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj7 = defaultedMap2.get((java.lang.Object) '4');
        int i8 = defaultedMap2.size();
        java.lang.Object obj10 = defaultedMap2.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj17 = defaultedMap12.get((java.lang.Object) '4');
        boolean b19 = defaultedMap12.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap12.entrySet();
        java.lang.Object obj22 = defaultedMap12.get((java.lang.Object) 0.0d);
        defaultedMap2.putAll((java.util.Map) defaultedMap12);
        java.lang.Object obj25 = defaultedMap2.remove((java.lang.Object) (short) 100);
        java.util.Set set26 = defaultedMap2.keySet();
        try {
            java.util.Map map27 = collections.map.DefaultedMap.decorate(map0, (java.lang.Object) defaultedMap2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + (short) 1 + "'", obj7.equals((short) 1));
        org.junit.Assert.assertTrue(i8 == 1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short) 1 + "'", obj17.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue("'" + obj22 + "' != '" + (short) 1 + "'", obj22.equals((short) 1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(set26);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap3);
        java.lang.String str13 = defaultedMap3.toString();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{}" + "'", str13.equals("{}"));
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        java.util.Collection collection26 = defaultedMap20.values();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Object obj28 = defaultedMap20.get(obj27);
        java.util.Map map29 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, obj27);
        collections.Transformer transformer30 = null;
        try {
            java.util.Map map31 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, transformer30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertNotNull(map29);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b20 = defaultedMap13.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        int i28 = defaultedMap22.size();
        java.util.Set set29 = defaultedMap22.keySet();
        java.lang.Object obj31 = defaultedMap22.get((java.lang.Object) 10.0d);
        java.lang.Object obj32 = defaultedMap1.put((java.lang.Object) defaultedMap13, (java.lang.Object) 10.0d);
        java.util.Set set33 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        int i41 = defaultedMap35.size();
        java.lang.Object obj43 = defaultedMap35.remove((java.lang.Object) 10.0f);
        java.lang.Object obj45 = defaultedMap35.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj50 = defaultedMap47.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj52 = defaultedMap47.get((java.lang.Object) '4');
        boolean b54 = defaultedMap47.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        int i62 = defaultedMap56.size();
        java.util.Set set63 = defaultedMap56.keySet();
        java.lang.Object obj65 = defaultedMap56.get((java.lang.Object) 10.0d);
        java.lang.Object obj66 = defaultedMap35.put((java.lang.Object) defaultedMap47, (java.lang.Object) 10.0d);
        java.util.Set set67 = defaultedMap35.keySet();
        java.lang.Object obj68 = defaultedMap1.remove((java.lang.Object) defaultedMap35);
        boolean b69 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(i41 == 1);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(i62 == 1);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue(b69 == false);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap3);
        int i13 = defaultedMap3.size();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue(i13 == 0);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        int i9 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        java.util.Collection collection17 = defaultedMap11.values();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Object obj19 = defaultedMap11.get(obj18);
        collections.PredicateUtils predicateUtils20 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils20);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b29 = defaultedMap23.isEmpty();
        defaultedMap23.clear();
        java.lang.Object obj31 = defaultedMap21.remove((java.lang.Object) defaultedMap23);
        boolean b32 = defaultedMap23.isEmpty();
        java.lang.Object obj33 = defaultedMap11.get((java.lang.Object) defaultedMap23);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj41 = defaultedMap36.get((java.lang.Object) '4');
        int i42 = defaultedMap36.size();
        java.lang.Object obj44 = defaultedMap36.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        int i52 = defaultedMap46.size();
        java.lang.Object obj54 = defaultedMap46.remove((java.lang.Object) 10.0f);
        java.lang.Object obj55 = defaultedMap36.remove((java.lang.Object) defaultedMap46);
        int i56 = defaultedMap36.size();
        java.lang.String str57 = defaultedMap36.toString();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj62 = defaultedMap59.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj64 = defaultedMap59.get((java.lang.Object) '4');
        int i65 = defaultedMap59.size();
        java.lang.Object obj67 = defaultedMap59.remove((java.lang.Object) 10.0f);
        java.lang.Object obj68 = defaultedMap11.put((java.lang.Object) defaultedMap36, obj67);
        java.lang.Object obj70 = defaultedMap1.put(obj68, (java.lang.Object) 100);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertTrue(i9 == 1);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (short) 1 + "'", obj33.equals((short) 1));
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (short) 1 + "'", obj41.equals((short) 1));
        org.junit.Assert.assertTrue(i42 == 1);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(i52 == 1);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue(i56 == 1);
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "{1=a}" + "'", str57.equals("{1=a}"));
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + obj64 + "' != '" + (short) 1 + "'", obj64.equals((short) 1));
        org.junit.Assert.assertTrue(i65 == 1);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.util.Map map11 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) (byte) -1);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap1.get(obj12);
        collections.PredicateUtils predicateUtils14 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils14);
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj20 = defaultedMap17.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj22 = defaultedMap17.get((java.lang.Object) '4');
        boolean b23 = defaultedMap17.isEmpty();
        defaultedMap17.clear();
        java.lang.Object obj25 = defaultedMap15.remove((java.lang.Object) defaultedMap17);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap17);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj31 = defaultedMap28.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj33 = defaultedMap28.get((java.lang.Object) '4');
        boolean b34 = defaultedMap28.isEmpty();
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj41 = defaultedMap36.get((java.lang.Object) '4');
        boolean b43 = defaultedMap36.containsKey((java.lang.Object) (byte) 0);
        boolean b44 = defaultedMap28.equals((java.lang.Object) defaultedMap36);
        boolean b45 = defaultedMap36.isEmpty();
        collections.Predicate predicate46 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate47 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap36, predicate46, predicate47);
        collections.Predicate predicate49 = collections.PredicateUtils.uniquePredicate();
        java.util.Map map50 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate46, predicate49);
        boolean b51 = defaultedMap1.containsKey((java.lang.Object) predicate46);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + (short) 1 + "'", obj13.equals((short) 1));
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + obj22 + "' != '" + (short) 1 + "'", obj22.equals((short) 1));
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (short) 1 + "'", obj33.equals((short) 1));
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (short) 1 + "'", obj41.equals((short) 1));
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertNotNull(predicate46);
        org.junit.Assert.assertNotNull(predicate47);
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertNotNull(predicate49);
        org.junit.Assert.assertNotNull(map50);
        org.junit.Assert.assertTrue(b51 == false);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        defaultedMap6.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj17 = defaultedMap12.get((java.lang.Object) '4');
        java.util.Collection collection18 = defaultedMap12.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap12);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        int i27 = defaultedMap21.size();
        java.lang.Object obj29 = defaultedMap21.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set39 = defaultedMap31.entrySet();
        java.lang.Object obj41 = defaultedMap31.get((java.lang.Object) 0.0d);
        defaultedMap21.putAll((java.util.Map) defaultedMap31);
        collections.Predicate predicate43 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate44 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map45 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap31, predicate43, predicate44);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj50 = defaultedMap47.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj52 = defaultedMap47.get((java.lang.Object) '4');
        boolean b53 = defaultedMap47.isEmpty();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj58 = defaultedMap55.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj60 = defaultedMap55.get((java.lang.Object) '4');
        boolean b62 = defaultedMap55.containsKey((java.lang.Object) (byte) 0);
        boolean b63 = defaultedMap47.equals((java.lang.Object) defaultedMap55);
        boolean b64 = defaultedMap55.isEmpty();
        defaultedMap55.clear();
        collections.Predicate predicate66 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj71 = defaultedMap68.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj73 = defaultedMap68.get((java.lang.Object) '4');
        boolean b74 = defaultedMap68.isEmpty();
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj79 = defaultedMap76.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj81 = defaultedMap76.get((java.lang.Object) '4');
        boolean b83 = defaultedMap76.containsKey((java.lang.Object) (byte) 0);
        boolean b84 = defaultedMap68.equals((java.lang.Object) defaultedMap76);
        boolean b85 = defaultedMap76.isEmpty();
        collections.Predicate predicate86 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate87 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map88 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap76, predicate86, predicate87);
        java.util.Map map89 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap55, predicate66, predicate86);
        java.util.Map map90 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap12, predicate44, predicate66);
        java.lang.Object obj91 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) predicate44);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short) 1 + "'", obj17.equals((short) 1));
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(i27 == 1);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (short) 1 + "'", obj41.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate43);
        org.junit.Assert.assertNotNull(predicate44);
        org.junit.Assert.assertNotNull(map45);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNotNull(predicate66);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (short) 1 + "'", obj73.equals((short) 1));
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (short) 1 + "'", obj81.equals((short) 1));
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertNotNull(predicate86);
        org.junit.Assert.assertNotNull(predicate87);
        org.junit.Assert.assertNotNull(map88);
        org.junit.Assert.assertNotNull(map89);
        org.junit.Assert.assertNotNull(map90);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.Factory factory24 = null;
        try {
            java.util.Map map25 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap23, factory24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        java.lang.Object obj10 = null;
        boolean b11 = defaultedMap1.containsKey(obj10);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue(b11 == false);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        boolean b30 = defaultedMap24.isEmpty();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        boolean b40 = defaultedMap24.equals((java.lang.Object) defaultedMap32);
        java.lang.String str41 = defaultedMap24.toString();
        boolean b43 = defaultedMap24.containsValue((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        boolean b51 = defaultedMap45.isEmpty();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj56 = defaultedMap53.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj58 = defaultedMap53.get((java.lang.Object) '4');
        boolean b60 = defaultedMap53.containsKey((java.lang.Object) (byte) 0);
        boolean b61 = defaultedMap45.equals((java.lang.Object) defaultedMap53);
        boolean b63 = defaultedMap53.containsKey((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj70 = defaultedMap65.get((java.lang.Object) '4');
        boolean b71 = defaultedMap65.isEmpty();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj76 = defaultedMap73.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj78 = defaultedMap73.get((java.lang.Object) '4');
        boolean b80 = defaultedMap73.containsKey((java.lang.Object) (byte) 0);
        boolean b81 = defaultedMap65.equals((java.lang.Object) defaultedMap73);
        boolean b82 = defaultedMap73.isEmpty();
        collections.Predicate predicate83 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate84 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap73, predicate83, predicate84);
        java.lang.Object obj86 = defaultedMap24.put((java.lang.Object) 10, (java.lang.Object) predicate83);
        collections.map.DefaultedMap defaultedMap87 = new collections.map.DefaultedMap((java.lang.Object) predicate83);
        boolean b88 = defaultedMap1.containsValue((java.lang.Object) defaultedMap87);
        collections.map.DefaultedMap defaultedMap90 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj93 = defaultedMap90.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj95 = defaultedMap90.get((java.lang.Object) '4');
        java.util.Collection collection96 = defaultedMap90.values();
        java.lang.Object obj97 = new java.lang.Object();
        java.lang.Object obj98 = defaultedMap90.get(obj97);
        java.lang.Object obj99 = defaultedMap87.get((java.lang.Object) defaultedMap90);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "{1=a}" + "'", str41.equals("{1=a}"));
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (short) 1 + "'", obj58.equals((short) 1));
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (short) 1 + "'", obj78.equals((short) 1));
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNotNull(predicate83);
        org.junit.Assert.assertNotNull(predicate84);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + obj95 + "' != '" + (short) 1 + "'", obj95.equals((short) 1));
        org.junit.Assert.assertNotNull(collection96);
        org.junit.Assert.assertTrue("'" + obj98 + "' != '" + (short) 1 + "'", obj98.equals((short) 1));
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        int i17 = defaultedMap11.size();
        java.lang.Object obj19 = defaultedMap11.remove((java.lang.Object) 10.0f);
        java.lang.Object obj20 = defaultedMap1.remove((java.lang.Object) defaultedMap11);
        int i21 = defaultedMap1.size();
        java.lang.String str22 = defaultedMap1.toString();
        boolean b23 = defaultedMap1.isEmpty();
        defaultedMap1.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(i17 == 1);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue(i21 == 1);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "{1=a}" + "'", str22.equals("{1=a}"));
        org.junit.Assert.assertTrue(b23 == false);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        java.lang.String str20 = defaultedMap9.toString();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap30.isEmpty();
        collections.Predicate predicate40 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate41 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate40, predicate41);
        java.lang.Object obj43 = defaultedMap9.get((java.lang.Object) map42);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        java.util.Collection collection51 = defaultedMap45.values();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Object obj53 = defaultedMap45.get(obj52);
        collections.PredicateUtils predicateUtils54 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils54);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj60 = defaultedMap57.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj62 = defaultedMap57.get((java.lang.Object) '4');
        boolean b63 = defaultedMap57.isEmpty();
        defaultedMap57.clear();
        java.lang.Object obj65 = defaultedMap55.remove((java.lang.Object) defaultedMap57);
        boolean b66 = defaultedMap57.isEmpty();
        java.lang.Object obj67 = defaultedMap45.get((java.lang.Object) defaultedMap57);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap45);
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj73 = defaultedMap70.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj78 = defaultedMap75.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj80 = defaultedMap75.get((java.lang.Object) '4');
        int i81 = defaultedMap75.size();
        defaultedMap70.putAll((java.util.Map) defaultedMap75);
        collections.map.DefaultedMap defaultedMap84 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set85 = defaultedMap84.entrySet();
        java.util.Set set86 = defaultedMap84.entrySet();
        java.lang.Object obj88 = defaultedMap75.put((java.lang.Object) set86, (java.lang.Object) (short) 1);
        java.util.Collection collection89 = defaultedMap75.values();
        java.lang.String str90 = defaultedMap75.toString();
        boolean b91 = defaultedMap68.containsKey((java.lang.Object) defaultedMap75);
        boolean b92 = defaultedMap9.containsKey((java.lang.Object) b91);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "{1=a}" + "'", str20.equals("{1=a}"));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(predicate40);
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (short) 1 + "'", obj67.equals((short) 1));
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + obj80 + "' != '" + (short) 1 + "'", obj80.equals((short) 1));
        org.junit.Assert.assertTrue(i81 == 1);
        org.junit.Assert.assertNotNull(set85);
        org.junit.Assert.assertNotNull(set86);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(collection89);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "{[]=1, 1=a}" + "'", str90.equals("{[]=1, 1=a}"));
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(b92 == false);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        java.util.Map map25 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap13, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        java.util.Collection collection33 = defaultedMap27.values();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap27);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap27);
        boolean b36 = defaultedMap13.containsValue((java.lang.Object) defaultedMap35);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        java.util.Collection collection44 = defaultedMap38.values();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap38);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj50 = defaultedMap47.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj52 = defaultedMap47.get((java.lang.Object) '4');
        int i53 = defaultedMap47.size();
        java.lang.Object obj55 = defaultedMap47.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj60 = defaultedMap57.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj62 = defaultedMap57.get((java.lang.Object) '4');
        boolean b64 = defaultedMap57.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set65 = defaultedMap57.entrySet();
        java.lang.Object obj67 = defaultedMap57.get((java.lang.Object) 0.0d);
        defaultedMap47.putAll((java.util.Map) defaultedMap57);
        java.lang.Object obj70 = defaultedMap47.remove((java.lang.Object) (short) 100);
        java.util.Set set71 = defaultedMap47.keySet();
        java.lang.Object obj73 = defaultedMap47.remove((java.lang.Object) 100.0f);
        int i74 = defaultedMap47.size();
        java.lang.Object obj75 = defaultedMap45.remove((java.lang.Object) defaultedMap47);
        java.util.Set set76 = defaultedMap45.entrySet();
        boolean b77 = defaultedMap13.containsValue((java.lang.Object) set76);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertNotNull(collection33);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertTrue(i53 == 1);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (short) 1 + "'", obj67.equals((short) 1));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(set71);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue(i74 == 1);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(set76);
        org.junit.Assert.assertTrue(b77 == false);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.PredicateUtils predicateUtils23 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils23);
        boolean b25 = defaultedMap1.containsValue((java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        java.util.Collection collection33 = defaultedMap27.values();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap27);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj41 = defaultedMap36.get((java.lang.Object) '4');
        int i42 = defaultedMap36.size();
        java.lang.Object obj44 = defaultedMap36.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        boolean b53 = defaultedMap46.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set54 = defaultedMap46.entrySet();
        java.lang.Object obj56 = defaultedMap46.get((java.lang.Object) 0.0d);
        defaultedMap36.putAll((java.util.Map) defaultedMap46);
        java.lang.Object obj59 = defaultedMap36.remove((java.lang.Object) (short) 100);
        java.util.Set set60 = defaultedMap36.keySet();
        java.lang.Object obj62 = defaultedMap36.remove((java.lang.Object) 100.0f);
        int i63 = defaultedMap36.size();
        java.lang.Object obj64 = defaultedMap34.remove((java.lang.Object) defaultedMap36);
        java.util.Set set65 = defaultedMap34.entrySet();
        java.util.Map map66 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) set65);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertNotNull(collection33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (short) 1 + "'", obj41.equals((short) 1));
        org.junit.Assert.assertTrue(i42 == 1);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (short) 1 + "'", obj56.equals((short) 1));
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue(i63 == 1);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertNotNull(map66);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        java.util.Collection collection26 = defaultedMap20.values();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Object obj28 = defaultedMap20.get(obj27);
        java.util.Map map29 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) map29);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set40 = defaultedMap32.entrySet();
        java.util.Map map42 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap32, (java.lang.Object) (byte) -1);
        java.lang.Object obj43 = null;
        java.lang.Object obj44 = defaultedMap32.get(obj43);
        defaultedMap30.putAll((java.util.Map) defaultedMap32);
        collections.Transformer transformer46 = null;
        try {
            java.util.Map map47 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap32, transformer46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertNotNull(map29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj24 = defaultedMap19.get((java.lang.Object) '4');
        int i25 = defaultedMap19.size();
        java.lang.Object obj27 = defaultedMap19.remove((java.lang.Object) 10.0f);
        java.lang.Object obj29 = defaultedMap19.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj45 = defaultedMap40.get((java.lang.Object) '4');
        int i46 = defaultedMap40.size();
        java.util.Set set47 = defaultedMap40.keySet();
        java.lang.Object obj49 = defaultedMap40.get((java.lang.Object) 10.0d);
        java.lang.Object obj50 = defaultedMap19.put((java.lang.Object) defaultedMap31, (java.lang.Object) 10.0d);
        java.util.Set set51 = defaultedMap19.keySet();
        java.lang.Object obj52 = defaultedMap9.get((java.lang.Object) defaultedMap19);
        java.util.Set set53 = defaultedMap9.entrySet();
        java.util.Set set54 = defaultedMap9.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short) 1 + "'", obj24.equals((short) 1));
        org.junit.Assert.assertTrue(i25 == 1);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (short) 1 + "'", obj45.equals((short) 1));
        org.junit.Assert.assertTrue(i46 == 1);
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertNotNull(set54);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.util.Collection collection11 = defaultedMap1.values();
        collections.Factory factory12 = null;
        try {
            java.util.Map map13 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.Predicate predicate23 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate24 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map25 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap11, predicate23, predicate24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        boolean b33 = defaultedMap27.isEmpty();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        boolean b42 = defaultedMap35.containsKey((java.lang.Object) (byte) 0);
        boolean b43 = defaultedMap27.equals((java.lang.Object) defaultedMap35);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        int i51 = defaultedMap45.size();
        java.lang.Object obj53 = defaultedMap45.remove((java.lang.Object) 10.0f);
        java.lang.Object obj55 = defaultedMap45.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj60 = defaultedMap57.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj62 = defaultedMap57.get((java.lang.Object) '4');
        boolean b64 = defaultedMap57.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj69 = defaultedMap66.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj71 = defaultedMap66.get((java.lang.Object) '4');
        int i72 = defaultedMap66.size();
        java.util.Set set73 = defaultedMap66.keySet();
        java.lang.Object obj75 = defaultedMap66.get((java.lang.Object) 10.0d);
        java.lang.Object obj76 = defaultedMap45.put((java.lang.Object) defaultedMap57, (java.lang.Object) 10.0d);
        java.util.Set set77 = defaultedMap45.keySet();
        java.lang.Object obj78 = defaultedMap35.get((java.lang.Object) defaultedMap45);
        java.util.Set set79 = defaultedMap35.entrySet();
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap35);
        boolean b81 = defaultedMap11.containsValue((java.lang.Object) defaultedMap35);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate23);
        org.junit.Assert.assertNotNull(predicate24);
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(i51 == 1);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + obj71 + "' != '" + (short) 1 + "'", obj71.equals((short) 1));
        org.junit.Assert.assertTrue(i72 == 1);
        org.junit.Assert.assertNotNull(set73);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + (short) 1 + "'", obj75.equals((short) 1));
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(set77);
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (short) 1 + "'", obj78.equals((short) 1));
        org.junit.Assert.assertNotNull(set79);
        org.junit.Assert.assertTrue(b81 == false);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b19 = defaultedMap9.containsKey((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b27 = defaultedMap21.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap21.equals((java.lang.Object) defaultedMap29);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj44 = defaultedMap39.get((java.lang.Object) '4');
        int i45 = defaultedMap39.size();
        java.lang.Object obj47 = defaultedMap39.remove((java.lang.Object) 10.0f);
        java.lang.Object obj49 = defaultedMap39.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj54 = defaultedMap51.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap51.get((java.lang.Object) '4');
        boolean b58 = defaultedMap51.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj63 = defaultedMap60.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj65 = defaultedMap60.get((java.lang.Object) '4');
        int i66 = defaultedMap60.size();
        java.util.Set set67 = defaultedMap60.keySet();
        java.lang.Object obj69 = defaultedMap60.get((java.lang.Object) 10.0d);
        java.lang.Object obj70 = defaultedMap39.put((java.lang.Object) defaultedMap51, (java.lang.Object) 10.0d);
        java.util.Set set71 = defaultedMap39.keySet();
        java.lang.Object obj72 = defaultedMap29.get((java.lang.Object) defaultedMap39);
        java.lang.Object obj73 = defaultedMap9.get(obj72);
        java.util.Set set74 = defaultedMap9.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (short) 1 + "'", obj56.equals((short) 1));
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
        org.junit.Assert.assertTrue(i66 == 1);
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertTrue("'" + obj69 + "' != '" + (short) 1 + "'", obj69.equals((short) 1));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(set71);
        org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (short) 1 + "'", obj72.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + 'a' + "'", obj73.equals('a'));
        org.junit.Assert.assertNotNull(set74);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.lang.String str18 = defaultedMap1.toString();
        boolean b20 = defaultedMap1.containsValue((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b40 = defaultedMap30.containsKey((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        boolean b48 = defaultedMap42.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b57 = defaultedMap50.containsKey((java.lang.Object) (byte) 0);
        boolean b58 = defaultedMap42.equals((java.lang.Object) defaultedMap50);
        boolean b59 = defaultedMap50.isEmpty();
        collections.Predicate predicate60 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate61 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map62 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap50, predicate60, predicate61);
        java.lang.Object obj63 = defaultedMap1.put((java.lang.Object) 10, (java.lang.Object) predicate60);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) predicate60);
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj69 = defaultedMap66.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj71 = defaultedMap66.get((java.lang.Object) '4');
        java.util.Collection collection72 = defaultedMap66.values();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Object obj74 = defaultedMap66.get(obj73);
        java.util.Collection collection75 = defaultedMap66.values();
        java.lang.Object obj76 = defaultedMap64.remove((java.lang.Object) collection75);
        java.lang.String str77 = defaultedMap64.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{1=a}" + "'", str18.equals("{1=a}"));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertNotNull(predicate60);
        org.junit.Assert.assertNotNull(predicate61);
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + obj71 + "' != '" + (short) 1 + "'", obj71.equals((short) 1));
        org.junit.Assert.assertNotNull(collection72);
        org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (short) 1 + "'", obj74.equals((short) 1));
        org.junit.Assert.assertNotNull(collection75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "{}" + "'", str77.equals("{}"));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj24 = defaultedMap19.get((java.lang.Object) '4');
        int i25 = defaultedMap19.size();
        java.lang.Object obj27 = defaultedMap19.remove((java.lang.Object) 10.0f);
        java.lang.Object obj29 = defaultedMap19.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj45 = defaultedMap40.get((java.lang.Object) '4');
        int i46 = defaultedMap40.size();
        java.util.Set set47 = defaultedMap40.keySet();
        java.lang.Object obj49 = defaultedMap40.get((java.lang.Object) 10.0d);
        java.lang.Object obj50 = defaultedMap19.put((java.lang.Object) defaultedMap31, (java.lang.Object) 10.0d);
        java.util.Set set51 = defaultedMap19.keySet();
        java.lang.Object obj52 = defaultedMap9.get((java.lang.Object) defaultedMap19);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b60 = defaultedMap54.isEmpty();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj67 = defaultedMap62.get((java.lang.Object) '4');
        boolean b69 = defaultedMap62.containsKey((java.lang.Object) (byte) 0);
        boolean b70 = defaultedMap54.equals((java.lang.Object) defaultedMap62);
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj75 = defaultedMap72.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj77 = defaultedMap72.get((java.lang.Object) '4');
        java.lang.Object obj78 = defaultedMap54.get(obj77);
        defaultedMap9.putAll((java.util.Map) defaultedMap54);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short) 1 + "'", obj24.equals((short) 1));
        org.junit.Assert.assertTrue(i25 == 1);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (short) 1 + "'", obj45.equals((short) 1));
        org.junit.Assert.assertTrue(i46 == 1);
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (short) 1 + "'", obj67.equals((short) 1));
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short) 1 + "'", obj77.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + 'a' + "'", obj78.equals('a'));
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.PredicateUtils predicateUtils23 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils23);
        boolean b25 = defaultedMap1.containsValue((java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        int i33 = defaultedMap27.size();
        java.lang.Object obj35 = defaultedMap27.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj42 = defaultedMap37.get((java.lang.Object) '4');
        boolean b44 = defaultedMap37.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set45 = defaultedMap37.entrySet();
        java.lang.Object obj47 = defaultedMap37.get((java.lang.Object) 0.0d);
        defaultedMap27.putAll((java.util.Map) defaultedMap37);
        java.lang.Object obj50 = defaultedMap27.remove((java.lang.Object) (short) 100);
        java.util.Set set51 = defaultedMap27.keySet();
        boolean b52 = defaultedMap24.equals((java.lang.Object) set51);
        boolean b53 = defaultedMap24.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertTrue(i33 == 1);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (short) 1 + "'", obj42.equals((short) 1));
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(b53 == true);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set2 = defaultedMap1.entrySet();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj10 = defaultedMap5.get((java.lang.Object) '4');
        java.util.Collection collection11 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b21 = defaultedMap14.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap14.entrySet();
        java.lang.Object obj23 = defaultedMap1.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap14);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) "");
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        java.util.Collection collection33 = defaultedMap27.values();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Object obj35 = defaultedMap27.get(obj34);
        collections.PredicateUtils predicateUtils36 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils36);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj44 = defaultedMap39.get((java.lang.Object) '4');
        boolean b45 = defaultedMap39.isEmpty();
        defaultedMap39.clear();
        java.lang.Object obj47 = defaultedMap37.remove((java.lang.Object) defaultedMap39);
        boolean b48 = defaultedMap39.isEmpty();
        java.lang.Object obj49 = defaultedMap27.get((java.lang.Object) defaultedMap39);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj54 = defaultedMap51.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap51.get((java.lang.Object) '4');
        boolean b57 = defaultedMap51.isEmpty();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj62 = defaultedMap59.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj64 = defaultedMap59.get((java.lang.Object) '4');
        boolean b66 = defaultedMap59.containsKey((java.lang.Object) (byte) 0);
        boolean b67 = defaultedMap51.equals((java.lang.Object) defaultedMap59);
        java.util.Collection collection68 = defaultedMap59.values();
        boolean b69 = defaultedMap39.equals((java.lang.Object) defaultedMap59);
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj74 = defaultedMap71.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj76 = defaultedMap71.get((java.lang.Object) '4');
        java.util.Collection collection77 = defaultedMap71.values();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Object obj79 = defaultedMap71.get(obj78);
        java.lang.Object obj80 = defaultedMap25.put((java.lang.Object) b69, obj78);
        java.lang.Object obj81 = defaultedMap14.remove((java.lang.Object) defaultedMap25);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertNotNull(collection33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (short) 1 + "'", obj56.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + obj64 + "' != '" + (short) 1 + "'", obj64.equals((short) 1));
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertNotNull(collection68);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + obj76 + "' != '" + (short) 1 + "'", obj76.equals((short) 1));
        org.junit.Assert.assertNotNull(collection77);
        org.junit.Assert.assertTrue("'" + obj79 + "' != '" + (short) 1 + "'", obj79.equals((short) 1));
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set4 = defaultedMap3.entrySet();
        java.util.Set set5 = defaultedMap3.entrySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj10 = defaultedMap7.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap7.get((java.lang.Object) '4');
        java.util.Collection collection13 = defaultedMap7.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap7);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj21 = defaultedMap16.get((java.lang.Object) '4');
        boolean b23 = defaultedMap16.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set24 = defaultedMap16.entrySet();
        java.lang.Object obj25 = defaultedMap3.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap16);
        boolean b26 = defaultedMap1.containsKey((java.lang.Object) defaultedMap16);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (short) 1 + "'", obj12.equals((short) 1));
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue(b26 == false);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj15 = defaultedMap10.get((java.lang.Object) '4');
        int i16 = defaultedMap10.size();
        java.lang.Object obj18 = defaultedMap10.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        boolean b27 = defaultedMap20.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set28 = defaultedMap20.entrySet();
        java.lang.Object obj30 = defaultedMap20.get((java.lang.Object) 0.0d);
        defaultedMap10.putAll((java.util.Map) defaultedMap20);
        java.lang.Object obj33 = defaultedMap10.remove((java.lang.Object) (short) 100);
        java.util.Set set34 = defaultedMap10.keySet();
        java.lang.Object obj36 = defaultedMap10.remove((java.lang.Object) 100.0f);
        int i37 = defaultedMap10.size();
        java.lang.Object obj38 = defaultedMap8.remove((java.lang.Object) defaultedMap10);
        java.lang.String str39 = defaultedMap10.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
        org.junit.Assert.assertTrue(i16 == 1);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue(i37 == 1);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "{1=a}" + "'", str39.equals("{1=a}"));
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        collections.Predicate predicate20 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap30.isEmpty();
        collections.Predicate predicate40 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate41 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate40, predicate41);
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate20, predicate40);
        java.util.Collection collection44 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) collection44);
        java.util.Set set46 = defaultedMap45.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(predicate40);
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertNotNull(set46);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap6.get((java.lang.Object) '4');
        int i12 = defaultedMap6.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        boolean b14 = defaultedMap1.isEmpty();
        java.util.Set set15 = defaultedMap1.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertTrue(i12 == 1);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(set15);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.util.Set set25 = defaultedMap1.keySet();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) 100.0f);
        int i28 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        int i41 = defaultedMap35.size();
        defaultedMap30.putAll((java.util.Map) defaultedMap35);
        boolean b43 = defaultedMap30.isEmpty();
        java.lang.Object obj44 = defaultedMap1.remove((java.lang.Object) b43);
        collections.PredicateUtils predicateUtils45 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils45);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap48.get((java.lang.Object) '4');
        boolean b54 = defaultedMap48.isEmpty();
        defaultedMap48.clear();
        java.lang.Object obj56 = defaultedMap46.remove((java.lang.Object) defaultedMap48);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap48);
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj62 = defaultedMap59.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj64 = defaultedMap59.get((java.lang.Object) '4');
        boolean b65 = defaultedMap59.isEmpty();
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj70 = defaultedMap67.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj72 = defaultedMap67.get((java.lang.Object) '4');
        boolean b74 = defaultedMap67.containsKey((java.lang.Object) (byte) 0);
        boolean b75 = defaultedMap59.equals((java.lang.Object) defaultedMap67);
        boolean b76 = defaultedMap67.isEmpty();
        collections.Predicate predicate77 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate78 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map79 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap67, predicate77, predicate78);
        collections.Predicate predicate80 = collections.PredicateUtils.uniquePredicate();
        java.util.Map map81 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap48, predicate77, predicate80);
        collections.Predicate predicate82 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map83 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate80, predicate82);
        java.lang.Object obj85 = defaultedMap1.get((java.lang.Object) '4');
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(i41 == 1);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + obj64 + "' != '" + (short) 1 + "'", obj64.equals((short) 1));
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (short) 1 + "'", obj72.equals((short) 1));
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertNotNull(predicate77);
        org.junit.Assert.assertNotNull(predicate78);
        org.junit.Assert.assertNotNull(map79);
        org.junit.Assert.assertNotNull(predicate80);
        org.junit.Assert.assertNotNull(map81);
        org.junit.Assert.assertNotNull(predicate82);
        org.junit.Assert.assertNotNull(map83);
        org.junit.Assert.assertTrue("'" + obj85 + "' != '" + (short) 1 + "'", obj85.equals((short) 1));
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.Factory factory25 = null;
        try {
            java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        int i30 = defaultedMap24.size();
        java.lang.Object obj32 = defaultedMap24.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap34.entrySet();
        java.lang.Object obj44 = defaultedMap34.get((java.lang.Object) 0.0d);
        defaultedMap24.putAll((java.util.Map) defaultedMap34);
        collections.Predicate predicate46 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate47 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap34, predicate46, predicate47);
        java.lang.Object obj49 = defaultedMap1.get((java.lang.Object) map48);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap(obj49);
        collections.PredicateUtils predicateUtils51 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils51);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b60 = defaultedMap54.isEmpty();
        defaultedMap54.clear();
        java.lang.Object obj62 = defaultedMap52.remove((java.lang.Object) defaultedMap54);
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap54);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj70 = defaultedMap65.get((java.lang.Object) '4');
        boolean b71 = defaultedMap65.isEmpty();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj76 = defaultedMap73.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj78 = defaultedMap73.get((java.lang.Object) '4');
        boolean b80 = defaultedMap73.containsKey((java.lang.Object) (byte) 0);
        boolean b81 = defaultedMap65.equals((java.lang.Object) defaultedMap73);
        boolean b82 = defaultedMap73.isEmpty();
        collections.Predicate predicate83 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate84 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap73, predicate83, predicate84);
        collections.Predicate predicate86 = collections.PredicateUtils.uniquePredicate();
        java.util.Map map87 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap54, predicate83, predicate86);
        boolean b88 = defaultedMap50.equals((java.lang.Object) defaultedMap54);
        java.util.Set set89 = defaultedMap54.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(i30 == 1);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate46);
        org.junit.Assert.assertNotNull(predicate47);
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (short) 1 + "'", obj78.equals((short) 1));
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNotNull(predicate83);
        org.junit.Assert.assertNotNull(predicate84);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertNotNull(predicate86);
        org.junit.Assert.assertNotNull(map87);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertNotNull(set89);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Map map10 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) 2);
        collections.Factory factory11 = null;
        try {
            java.util.Map map12 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(map10);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b27 = defaultedMap21.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap21.equals((java.lang.Object) defaultedMap29);
        java.util.Collection collection38 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        defaultedMap9.putAll((java.util.Map) defaultedMap39);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        boolean b48 = defaultedMap42.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b57 = defaultedMap50.containsKey((java.lang.Object) (byte) 0);
        boolean b58 = defaultedMap42.equals((java.lang.Object) defaultedMap50);
        java.util.Collection collection59 = defaultedMap50.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap50);
        boolean b61 = defaultedMap60.isEmpty();
        defaultedMap39.putAll((java.util.Map) defaultedMap60);
        defaultedMap39.clear();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj70 = defaultedMap65.get((java.lang.Object) '4');
        boolean b71 = defaultedMap65.isEmpty();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj76 = defaultedMap73.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj78 = defaultedMap73.get((java.lang.Object) '4');
        boolean b80 = defaultedMap73.containsKey((java.lang.Object) (byte) 0);
        boolean b81 = defaultedMap65.equals((java.lang.Object) defaultedMap73);
        java.lang.Object obj82 = defaultedMap39.remove((java.lang.Object) defaultedMap73);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (short) 1 + "'", obj78.equals((short) 1));
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.String str23 = defaultedMap1.toString();
        java.util.Collection collection24 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) collection24);
        collections.Transformer transformer26 = null;
        try {
            java.util.Map map27 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap25, transformer26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "{1=a}" + "'", str23.equals("{1=a}"));
        org.junit.Assert.assertNotNull(collection24);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj24 = defaultedMap19.get((java.lang.Object) '4');
        int i25 = defaultedMap19.size();
        java.lang.Object obj27 = defaultedMap19.remove((java.lang.Object) 10.0f);
        java.lang.Object obj29 = defaultedMap19.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj45 = defaultedMap40.get((java.lang.Object) '4');
        int i46 = defaultedMap40.size();
        java.util.Set set47 = defaultedMap40.keySet();
        java.lang.Object obj49 = defaultedMap40.get((java.lang.Object) 10.0d);
        java.lang.Object obj50 = defaultedMap19.put((java.lang.Object) defaultedMap31, (java.lang.Object) 10.0d);
        java.util.Set set51 = defaultedMap19.keySet();
        java.lang.Object obj52 = defaultedMap9.get((java.lang.Object) defaultedMap19);
        java.util.Set set53 = defaultedMap9.entrySet();
        boolean b54 = defaultedMap9.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short) 1 + "'", obj24.equals((short) 1));
        org.junit.Assert.assertTrue(i25 == 1);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (short) 1 + "'", obj45.equals((short) 1));
        org.junit.Assert.assertTrue(i46 == 1);
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue(b54 == false);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = defaultedMap13.get(obj20);
        collections.PredicateUtils predicateUtils22 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) defaultedMap25);
        boolean b34 = defaultedMap25.isEmpty();
        java.lang.Object obj35 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        boolean b36 = defaultedMap1.containsValue((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        java.util.Collection collection44 = defaultedMap38.values();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Object obj46 = defaultedMap38.get(obj45);
        collections.PredicateUtils predicateUtils47 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils47);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b56 = defaultedMap50.isEmpty();
        defaultedMap50.clear();
        java.lang.Object obj58 = defaultedMap48.remove((java.lang.Object) defaultedMap50);
        boolean b59 = defaultedMap50.isEmpty();
        java.lang.Object obj60 = defaultedMap38.get((java.lang.Object) defaultedMap50);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap50, (java.lang.Object) 1);
        java.lang.Object obj63 = defaultedMap1.get((java.lang.Object) map62);
        java.lang.Object obj64 = null;
        java.util.Map map65 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, obj64);
        collections.Transformer transformer66 = null;
        try {
            java.util.Map map67 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertNotNull(map65);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj17 = defaultedMap12.get((java.lang.Object) '4');
        int i18 = defaultedMap12.size();
        java.lang.Object obj20 = defaultedMap12.remove((java.lang.Object) 10.0f);
        java.lang.Object obj22 = defaultedMap12.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        boolean b31 = defaultedMap24.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        int i39 = defaultedMap33.size();
        java.util.Set set40 = defaultedMap33.keySet();
        java.lang.Object obj42 = defaultedMap33.get((java.lang.Object) 10.0d);
        java.lang.Object obj43 = defaultedMap12.put((java.lang.Object) defaultedMap24, (java.lang.Object) 10.0d);
        java.util.Set set44 = defaultedMap12.keySet();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        int i52 = defaultedMap46.size();
        java.lang.Object obj54 = defaultedMap46.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b63 = defaultedMap56.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set64 = defaultedMap56.entrySet();
        java.lang.Object obj66 = defaultedMap56.get((java.lang.Object) 0.0d);
        defaultedMap46.putAll((java.util.Map) defaultedMap56);
        java.lang.Object obj69 = defaultedMap46.remove((java.lang.Object) (short) 100);
        boolean b70 = defaultedMap12.equals((java.lang.Object) (short) 100);
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj75 = defaultedMap72.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj77 = defaultedMap72.get((java.lang.Object) '4');
        int i78 = defaultedMap72.size();
        java.util.Set set79 = defaultedMap72.keySet();
        java.lang.Object obj81 = defaultedMap72.get((java.lang.Object) 10.0d);
        java.util.Collection collection82 = defaultedMap72.values();
        java.lang.Object obj83 = defaultedMap12.remove((java.lang.Object) collection82);
        java.util.Map map84 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, obj83);
        collections.Factory factory85 = null;
        try {
            java.util.Map map86 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short) 1 + "'", obj17.equals((short) 1));
        org.junit.Assert.assertTrue(i18 == 1);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(i39 == 1);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (short) 1 + "'", obj42.equals((short) 1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(i52 == 1);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNotNull(set64);
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (short) 1 + "'", obj66.equals((short) 1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short) 1 + "'", obj77.equals((short) 1));
        org.junit.Assert.assertTrue(i78 == 1);
        org.junit.Assert.assertNotNull(set79);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (short) 1 + "'", obj81.equals((short) 1));
        org.junit.Assert.assertNotNull(collection82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(map84);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.util.Collection collection11 = defaultedMap1.values();
        java.util.Set set12 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        int i20 = defaultedMap14.size();
        java.lang.Object obj22 = defaultedMap14.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        boolean b31 = defaultedMap24.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set32 = defaultedMap24.entrySet();
        java.lang.Object obj34 = defaultedMap24.get((java.lang.Object) 0.0d);
        defaultedMap14.putAll((java.util.Map) defaultedMap24);
        java.lang.String str36 = defaultedMap14.toString();
        java.util.Collection collection37 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj44 = defaultedMap39.get((java.lang.Object) '4');
        int i45 = defaultedMap39.size();
        java.lang.Object obj47 = defaultedMap39.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj52 = defaultedMap49.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj54 = defaultedMap49.get((java.lang.Object) '4');
        boolean b56 = defaultedMap49.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set57 = defaultedMap49.entrySet();
        java.lang.Object obj59 = defaultedMap49.get((java.lang.Object) 0.0d);
        defaultedMap39.putAll((java.util.Map) defaultedMap49);
        java.lang.Object obj62 = defaultedMap39.remove((java.lang.Object) (short) 100);
        java.util.Set set63 = defaultedMap39.keySet();
        boolean b64 = defaultedMap39.isEmpty();
        java.util.Map map65 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap14, (java.lang.Object) b64);
        java.lang.Object obj66 = defaultedMap1.get((java.lang.Object) map65);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj71 = defaultedMap68.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj73 = defaultedMap68.get((java.lang.Object) '4');
        java.util.Collection collection74 = defaultedMap68.values();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Object obj76 = defaultedMap68.get(obj75);
        collections.PredicateUtils predicateUtils77 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils77);
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj83 = defaultedMap80.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj85 = defaultedMap80.get((java.lang.Object) '4');
        boolean b86 = defaultedMap80.isEmpty();
        defaultedMap80.clear();
        java.lang.Object obj88 = defaultedMap78.remove((java.lang.Object) defaultedMap80);
        boolean b89 = defaultedMap80.isEmpty();
        java.lang.Object obj90 = defaultedMap68.get((java.lang.Object) defaultedMap80);
        java.util.Map map92 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap80, (java.lang.Object) 1);
        boolean b93 = defaultedMap1.containsValue((java.lang.Object) map92);
        collections.map.DefaultedMap defaultedMap94 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNotNull(set12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(i20 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "{1=a}" + "'", str36.equals("{1=a}"));
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (short) 1 + "'", obj54.equals((short) 1));
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNotNull(set57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNotNull(map65);
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (short) 1 + "'", obj66.equals((short) 1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (short) 1 + "'", obj73.equals((short) 1));
        org.junit.Assert.assertNotNull(collection74);
        org.junit.Assert.assertTrue("'" + obj76 + "' != '" + (short) 1 + "'", obj76.equals((short) 1));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + obj85 + "' != '" + (short) 1 + "'", obj85.equals((short) 1));
        org.junit.Assert.assertTrue(b86 == false);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertTrue("'" + obj90 + "' != '" + (short) 1 + "'", obj90.equals((short) 1));
        org.junit.Assert.assertNotNull(map92);
        org.junit.Assert.assertTrue(b93 == false);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.lang.String str18 = defaultedMap1.toString();
        boolean b20 = defaultedMap1.containsValue((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b40 = defaultedMap30.containsKey((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        boolean b48 = defaultedMap42.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b57 = defaultedMap50.containsKey((java.lang.Object) (byte) 0);
        boolean b58 = defaultedMap42.equals((java.lang.Object) defaultedMap50);
        boolean b59 = defaultedMap50.isEmpty();
        collections.Predicate predicate60 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate61 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map62 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap50, predicate60, predicate61);
        java.lang.Object obj63 = defaultedMap1.put((java.lang.Object) 10, (java.lang.Object) predicate60);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) predicate60);
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj69 = defaultedMap66.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj71 = defaultedMap66.get((java.lang.Object) '4');
        java.util.Collection collection72 = defaultedMap66.values();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Object obj74 = defaultedMap66.get(obj73);
        java.util.Collection collection75 = defaultedMap66.values();
        java.lang.Object obj76 = defaultedMap64.remove((java.lang.Object) collection75);
        collections.Factory factory77 = null;
        try {
            java.util.Map map78 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap64, factory77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{1=a}" + "'", str18.equals("{1=a}"));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertNotNull(predicate60);
        org.junit.Assert.assertNotNull(predicate61);
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + obj71 + "' != '" + (short) 1 + "'", obj71.equals((short) 1));
        org.junit.Assert.assertNotNull(collection72);
        org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (short) 1 + "'", obj74.equals((short) 1));
        org.junit.Assert.assertNotNull(collection75);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b20 = defaultedMap13.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        int i28 = defaultedMap22.size();
        java.util.Set set29 = defaultedMap22.keySet();
        java.lang.Object obj31 = defaultedMap22.get((java.lang.Object) 10.0d);
        java.lang.Object obj32 = defaultedMap1.put((java.lang.Object) defaultedMap13, (java.lang.Object) 10.0d);
        java.util.Set set33 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        int i41 = defaultedMap35.size();
        java.lang.Object obj43 = defaultedMap35.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        boolean b52 = defaultedMap45.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set53 = defaultedMap45.entrySet();
        java.lang.Object obj55 = defaultedMap45.get((java.lang.Object) 0.0d);
        defaultedMap35.putAll((java.util.Map) defaultedMap45);
        java.lang.Object obj58 = defaultedMap35.remove((java.lang.Object) (short) 100);
        boolean b59 = defaultedMap1.equals((java.lang.Object) (short) 100);
        java.util.Collection collection60 = defaultedMap1.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(i41 == 1);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertNotNull(collection60);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.Transformer transformer13 = null;
        try {
            java.util.Map map14 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.PredicateUtils predicateUtils23 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils23);
        boolean b25 = defaultedMap1.containsValue((java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        boolean b33 = defaultedMap27.isEmpty();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        boolean b42 = defaultedMap35.containsKey((java.lang.Object) (byte) 0);
        boolean b43 = defaultedMap27.equals((java.lang.Object) defaultedMap35);
        boolean b45 = defaultedMap35.containsKey((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj50 = defaultedMap47.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj52 = defaultedMap47.get((java.lang.Object) '4');
        int i53 = defaultedMap47.size();
        java.lang.Object obj55 = defaultedMap47.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj60 = defaultedMap57.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj62 = defaultedMap57.get((java.lang.Object) '4');
        int i63 = defaultedMap57.size();
        java.lang.Object obj65 = defaultedMap57.remove((java.lang.Object) 10.0f);
        java.lang.Object obj66 = defaultedMap47.remove((java.lang.Object) defaultedMap57);
        int i67 = defaultedMap47.size();
        java.lang.String str68 = defaultedMap47.toString();
        boolean b69 = defaultedMap35.containsValue((java.lang.Object) str68);
        boolean b70 = defaultedMap24.containsValue((java.lang.Object) defaultedMap35);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertTrue(i53 == 1);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
        org.junit.Assert.assertTrue(i63 == 1);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue(i67 == 1);
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "{1=a}" + "'", str68.equals("{1=a}"));
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == false);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        java.util.Set set12 = defaultedMap1.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNotNull(set12);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.lang.String str18 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        int i26 = defaultedMap20.size();
        java.lang.Object obj28 = defaultedMap20.remove((java.lang.Object) 10.0f);
        java.lang.Object obj30 = defaultedMap20.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap41.get((java.lang.Object) '4');
        int i47 = defaultedMap41.size();
        java.util.Set set48 = defaultedMap41.keySet();
        java.lang.Object obj50 = defaultedMap41.get((java.lang.Object) 10.0d);
        java.lang.Object obj51 = defaultedMap20.put((java.lang.Object) defaultedMap32, (java.lang.Object) 10.0d);
        java.util.Set set52 = defaultedMap20.keySet();
        collections.PredicateUtils predicateUtils53 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils53);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b62 = defaultedMap56.isEmpty();
        defaultedMap56.clear();
        java.lang.Object obj64 = defaultedMap54.remove((java.lang.Object) defaultedMap56);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap56);
        java.lang.Object obj66 = defaultedMap1.put((java.lang.Object) defaultedMap20, (java.lang.Object) defaultedMap65);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj71 = defaultedMap68.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj73 = defaultedMap68.get((java.lang.Object) '4');
        boolean b75 = defaultedMap68.containsKey((java.lang.Object) (byte) 0);
        java.lang.String str76 = defaultedMap68.toString();
        java.lang.Object obj77 = defaultedMap20.get((java.lang.Object) str76);
        java.lang.String str78 = defaultedMap20.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{1=a}" + "'", str18.equals("{1=a}"));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(i26 == 1);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertTrue(i47 == 1);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (short) 1 + "'", obj73.equals((short) 1));
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "{1=a}" + "'", str76.equals("{1=a}"));
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short) 1 + "'", obj77.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "{{1=a}=10.0, 1=a}" + "'", str78.equals("{{1=a}=10.0, 1=a}"));
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.util.Collection collection8 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj17 = defaultedMap12.get((java.lang.Object) '4');
        boolean b18 = defaultedMap12.isEmpty();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        boolean b27 = defaultedMap20.containsKey((java.lang.Object) (byte) 0);
        boolean b28 = defaultedMap12.equals((java.lang.Object) defaultedMap20);
        boolean b29 = defaultedMap20.isEmpty();
        defaultedMap20.clear();
        collections.Predicate predicate31 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b39 = defaultedMap33.isEmpty();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap41.get((java.lang.Object) '4');
        boolean b48 = defaultedMap41.containsKey((java.lang.Object) (byte) 0);
        boolean b49 = defaultedMap33.equals((java.lang.Object) defaultedMap41);
        boolean b50 = defaultedMap41.isEmpty();
        collections.Predicate predicate51 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate52 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map53 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap41, predicate51, predicate52);
        java.util.Map map54 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap20, predicate31, predicate51);
        boolean b55 = defaultedMap10.equals((java.lang.Object) predicate31);
        java.util.Map map56 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) predicate31);
        java.util.Set set57 = defaultedMap1.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short) 1 + "'", obj17.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(predicate31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(predicate51);
        org.junit.Assert.assertNotNull(predicate52);
        org.junit.Assert.assertNotNull(map53);
        org.junit.Assert.assertNotNull(map54);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(map56);
        org.junit.Assert.assertNotNull(set57);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        defaultedMap9.clear();
        int i21 = defaultedMap9.size();
        int i22 = defaultedMap9.size();
        java.lang.String str23 = defaultedMap9.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "{}" + "'", str23.equals("{}"));
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        boolean b32 = defaultedMap26.isEmpty();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        boolean b42 = defaultedMap26.equals((java.lang.Object) defaultedMap34);
        java.lang.Object obj43 = defaultedMap1.get((java.lang.Object) defaultedMap26);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        boolean b51 = defaultedMap45.isEmpty();
        defaultedMap45.clear();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b60 = defaultedMap54.isEmpty();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj67 = defaultedMap62.get((java.lang.Object) '4');
        boolean b69 = defaultedMap62.containsKey((java.lang.Object) (byte) 0);
        boolean b70 = defaultedMap54.equals((java.lang.Object) defaultedMap62);
        boolean b71 = defaultedMap62.isEmpty();
        collections.Predicate predicate72 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate73 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map74 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap62, predicate72, predicate73);
        boolean b75 = defaultedMap45.containsValue((java.lang.Object) predicate72);
        java.lang.Object obj76 = defaultedMap1.remove((java.lang.Object) defaultedMap45);
        java.util.Set set77 = defaultedMap45.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (short) 1 + "'", obj67.equals((short) 1));
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNotNull(predicate72);
        org.junit.Assert.assertNotNull(predicate73);
        org.junit.Assert.assertNotNull(map74);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(set77);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 100.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) "");
        java.lang.Object obj7 = defaultedMap4.put((java.lang.Object) 100.0f, (java.lang.Object) '#');
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b15 = defaultedMap9.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj20 = defaultedMap17.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj22 = defaultedMap17.get((java.lang.Object) '4');
        boolean b24 = defaultedMap17.containsKey((java.lang.Object) (byte) 0);
        boolean b25 = defaultedMap9.equals((java.lang.Object) defaultedMap17);
        boolean b26 = defaultedMap17.isEmpty();
        collections.Predicate predicate27 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate28 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map29 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate27, predicate28);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b37 = defaultedMap31.isEmpty();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj44 = defaultedMap39.get((java.lang.Object) '4');
        boolean b46 = defaultedMap39.containsKey((java.lang.Object) (byte) 0);
        boolean b47 = defaultedMap31.equals((java.lang.Object) defaultedMap39);
        boolean b48 = defaultedMap17.containsValue((java.lang.Object) b47);
        java.lang.Object obj50 = defaultedMap17.get((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj55 = defaultedMap52.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj57 = defaultedMap52.get((java.lang.Object) '4');
        boolean b58 = defaultedMap52.isEmpty();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj63 = defaultedMap60.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj65 = defaultedMap60.get((java.lang.Object) '4');
        boolean b67 = defaultedMap60.containsKey((java.lang.Object) (byte) 0);
        boolean b68 = defaultedMap52.equals((java.lang.Object) defaultedMap60);
        boolean b69 = defaultedMap60.isEmpty();
        collections.Predicate predicate70 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate71 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map72 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap60, predicate70, predicate71);
        collections.Predicate predicate73 = collections.PredicateUtils.uniquePredicate();
        java.util.Map map74 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate71, predicate73);
        java.lang.Object obj75 = null;
        java.lang.Object obj76 = defaultedMap4.put((java.lang.Object) map74, obj75);
        defaultedMap1.putAll(map74);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + obj22 + "' != '" + (short) 1 + "'", obj22.equals((short) 1));
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(predicate27);
        org.junit.Assert.assertNotNull(predicate28);
        org.junit.Assert.assertNotNull(map29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj57 + "' != '" + (short) 1 + "'", obj57.equals((short) 1));
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNotNull(predicate70);
        org.junit.Assert.assertNotNull(predicate71);
        org.junit.Assert.assertNotNull(map72);
        org.junit.Assert.assertNotNull(predicate73);
        org.junit.Assert.assertNotNull(map74);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj24 = defaultedMap19.get((java.lang.Object) '4');
        int i25 = defaultedMap19.size();
        java.lang.Object obj27 = defaultedMap19.remove((java.lang.Object) 10.0f);
        java.lang.Object obj29 = defaultedMap19.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj45 = defaultedMap40.get((java.lang.Object) '4');
        int i46 = defaultedMap40.size();
        java.util.Set set47 = defaultedMap40.keySet();
        java.lang.Object obj49 = defaultedMap40.get((java.lang.Object) 10.0d);
        java.lang.Object obj50 = defaultedMap19.put((java.lang.Object) defaultedMap31, (java.lang.Object) 10.0d);
        java.util.Set set51 = defaultedMap19.keySet();
        java.lang.Object obj52 = defaultedMap9.get((java.lang.Object) defaultedMap19);
        java.util.Set set53 = defaultedMap9.entrySet();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b62 = defaultedMap56.isEmpty();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj69 = defaultedMap64.get((java.lang.Object) '4');
        boolean b71 = defaultedMap64.containsKey((java.lang.Object) (byte) 0);
        boolean b72 = defaultedMap56.equals((java.lang.Object) defaultedMap64);
        java.util.Collection collection73 = defaultedMap64.values();
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) collection73);
        java.lang.Object obj75 = defaultedMap54.get((java.lang.Object) collection73);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short) 1 + "'", obj24.equals((short) 1));
        org.junit.Assert.assertTrue(i25 == 1);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (short) 1 + "'", obj45.equals((short) 1));
        org.junit.Assert.assertTrue(i46 == 1);
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + obj69 + "' != '" + (short) 1 + "'", obj69.equals((short) 1));
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertNotNull(collection73);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.lang.Object obj13 = defaultedMap1.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj20 = defaultedMap15.get((java.lang.Object) '4');
        int i21 = defaultedMap15.size();
        java.util.Set set22 = defaultedMap15.keySet();
        java.lang.Object obj24 = defaultedMap15.get((java.lang.Object) 10.0d);
        java.lang.Object obj27 = defaultedMap15.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        defaultedMap1.putAll((java.util.Map) defaultedMap15);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        int i36 = defaultedMap30.size();
        java.lang.Object obj38 = defaultedMap30.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj45 = defaultedMap40.get((java.lang.Object) '4');
        boolean b47 = defaultedMap40.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set48 = defaultedMap40.entrySet();
        java.lang.Object obj50 = defaultedMap40.get((java.lang.Object) 0.0d);
        defaultedMap30.putAll((java.util.Map) defaultedMap40);
        collections.Predicate predicate52 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate53 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map54 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap40, predicate52, predicate53);
        collections.Predicate predicate55 = null;
        java.util.Map map56 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap15, predicate53, predicate55);
        defaultedMap15.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 1 + "'", obj20.equals((short) 1));
        org.junit.Assert.assertTrue(i21 == 1);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short) 1 + "'", obj24.equals((short) 1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(i36 == 1);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (short) 1 + "'", obj45.equals((short) 1));
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate52);
        org.junit.Assert.assertNotNull(predicate53);
        org.junit.Assert.assertNotNull(map54);
        org.junit.Assert.assertNotNull(map56);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b20 = defaultedMap14.isEmpty();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b29 = defaultedMap22.containsKey((java.lang.Object) (byte) 0);
        boolean b30 = defaultedMap14.equals((java.lang.Object) defaultedMap22);
        boolean b31 = defaultedMap22.isEmpty();
        defaultedMap22.clear();
        collections.Predicate predicate33 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        boolean b41 = defaultedMap35.isEmpty();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj48 = defaultedMap43.get((java.lang.Object) '4');
        boolean b50 = defaultedMap43.containsKey((java.lang.Object) (byte) 0);
        boolean b51 = defaultedMap35.equals((java.lang.Object) defaultedMap43);
        boolean b52 = defaultedMap43.isEmpty();
        collections.Predicate predicate53 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate54 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map55 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap43, predicate53, predicate54);
        java.util.Map map56 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap22, predicate33, predicate53);
        defaultedMap12.putAll(map56);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(predicate33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (short) 1 + "'", obj48.equals((short) 1));
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(predicate53);
        org.junit.Assert.assertNotNull(predicate54);
        org.junit.Assert.assertNotNull(map55);
        org.junit.Assert.assertNotNull(map56);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b27 = defaultedMap21.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap21.equals((java.lang.Object) defaultedMap29);
        java.util.Collection collection38 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        defaultedMap9.putAll((java.util.Map) defaultedMap39);
        int i41 = defaultedMap39.size();
        java.util.Collection collection42 = defaultedMap39.values();
        java.util.Map map44 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap39, (java.lang.Object) (-1.0d));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertNotNull(map44);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap6.get((java.lang.Object) '4');
        int i12 = defaultedMap6.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set16 = defaultedMap15.entrySet();
        java.util.Set set17 = defaultedMap15.entrySet();
        java.lang.Object obj19 = defaultedMap6.put((java.lang.Object) set17, (java.lang.Object) (short) 1);
        java.util.Collection collection20 = defaultedMap6.values();
        java.util.Set set21 = defaultedMap6.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertTrue(i12 == 1);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(collection20);
        org.junit.Assert.assertNotNull(set21);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        java.util.Collection collection26 = defaultedMap20.values();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Object obj28 = defaultedMap20.get(obj27);
        java.util.Map map29 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) map29);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set40 = defaultedMap32.entrySet();
        java.util.Map map42 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap32, (java.lang.Object) (byte) -1);
        java.lang.Object obj43 = null;
        java.lang.Object obj44 = defaultedMap32.get(obj43);
        defaultedMap30.putAll((java.util.Map) defaultedMap32);
        boolean b46 = defaultedMap30.isEmpty();
        collections.Transformer transformer47 = null;
        try {
            java.util.Map map48 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap30, transformer47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertNotNull(map29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertTrue(b46 == false);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b20 = defaultedMap13.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        int i28 = defaultedMap22.size();
        java.util.Set set29 = defaultedMap22.keySet();
        java.lang.Object obj31 = defaultedMap22.get((java.lang.Object) 10.0d);
        java.lang.Object obj32 = defaultedMap1.put((java.lang.Object) defaultedMap13, (java.lang.Object) 10.0d);
        java.util.Set set33 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) set33);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(set33);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        int i33 = defaultedMap25.size();
        boolean b34 = defaultedMap23.equals((java.lang.Object) i33);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(b34 == false);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) "");
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 100.0f, (java.lang.Object) '#');
        collections.Transformer transformer5 = null;
        try {
            java.util.Map map6 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.lang.String str18 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        int i26 = defaultedMap20.size();
        java.lang.Object obj28 = defaultedMap20.remove((java.lang.Object) 10.0f);
        java.lang.Object obj30 = defaultedMap20.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap41.get((java.lang.Object) '4');
        int i47 = defaultedMap41.size();
        java.util.Set set48 = defaultedMap41.keySet();
        java.lang.Object obj50 = defaultedMap41.get((java.lang.Object) 10.0d);
        java.lang.Object obj51 = defaultedMap20.put((java.lang.Object) defaultedMap32, (java.lang.Object) 10.0d);
        java.util.Set set52 = defaultedMap20.keySet();
        collections.PredicateUtils predicateUtils53 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils53);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b62 = defaultedMap56.isEmpty();
        defaultedMap56.clear();
        java.lang.Object obj64 = defaultedMap54.remove((java.lang.Object) defaultedMap56);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap56);
        java.lang.Object obj66 = defaultedMap1.put((java.lang.Object) defaultedMap20, (java.lang.Object) defaultedMap65);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj71 = defaultedMap68.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj73 = defaultedMap68.get((java.lang.Object) '4');
        boolean b75 = defaultedMap68.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set76 = defaultedMap68.entrySet();
        java.lang.Object obj78 = defaultedMap68.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap68);
        collections.map.DefaultedMap defaultedMap81 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj84 = defaultedMap81.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj86 = defaultedMap81.get((java.lang.Object) '4');
        boolean b88 = defaultedMap81.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set89 = defaultedMap81.entrySet();
        java.util.Map map91 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap81, (java.lang.Object) (byte) -1);
        boolean b92 = defaultedMap68.equals((java.lang.Object) map91);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{1=a}" + "'", str18.equals("{1=a}"));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(i26 == 1);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertTrue(i47 == 1);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (short) 1 + "'", obj73.equals((short) 1));
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertNotNull(set76);
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (short) 1 + "'", obj78.equals((short) 1));
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + obj86 + "' != '" + (short) 1 + "'", obj86.equals((short) 1));
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertNotNull(set89);
        org.junit.Assert.assertNotNull(map91);
        org.junit.Assert.assertTrue(b92 == true);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = defaultedMap13.get(obj20);
        collections.PredicateUtils predicateUtils22 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) defaultedMap25);
        boolean b34 = defaultedMap25.isEmpty();
        java.lang.Object obj35 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        boolean b36 = defaultedMap1.containsValue((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        java.util.Collection collection44 = defaultedMap38.values();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Object obj46 = defaultedMap38.get(obj45);
        collections.PredicateUtils predicateUtils47 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils47);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b56 = defaultedMap50.isEmpty();
        defaultedMap50.clear();
        java.lang.Object obj58 = defaultedMap48.remove((java.lang.Object) defaultedMap50);
        boolean b59 = defaultedMap50.isEmpty();
        java.lang.Object obj60 = defaultedMap38.get((java.lang.Object) defaultedMap50);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap50, (java.lang.Object) 1);
        java.lang.Object obj63 = defaultedMap1.get((java.lang.Object) map62);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj70 = defaultedMap65.get((java.lang.Object) '4');
        int i71 = defaultedMap65.size();
        java.lang.Object obj72 = defaultedMap1.get((java.lang.Object) defaultedMap65);
        collections.Factory factory73 = null;
        try {
            java.util.Map map74 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap65, factory73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertTrue(i71 == 1);
        org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (short) 1 + "'", obj72.equals((short) 1));
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Map map10 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) 2);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj17 = defaultedMap12.get((java.lang.Object) '4');
        int i18 = defaultedMap12.size();
        java.util.Set set19 = defaultedMap12.keySet();
        java.lang.Object obj21 = defaultedMap12.get((java.lang.Object) 10.0d);
        java.lang.Object obj24 = defaultedMap12.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        int i32 = defaultedMap26.size();
        java.util.Set set33 = defaultedMap26.keySet();
        java.lang.Object obj35 = defaultedMap26.get((java.lang.Object) 10.0d);
        java.lang.Object obj38 = defaultedMap26.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        defaultedMap12.putAll((java.util.Map) defaultedMap26);
        boolean b40 = defaultedMap1.equals((java.lang.Object) defaultedMap26);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        int i48 = defaultedMap42.size();
        java.lang.Object obj50 = defaultedMap42.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj55 = defaultedMap52.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj57 = defaultedMap52.get((java.lang.Object) '4');
        int i58 = defaultedMap52.size();
        java.lang.Object obj60 = defaultedMap52.remove((java.lang.Object) 10.0f);
        java.lang.Object obj61 = defaultedMap42.remove((java.lang.Object) defaultedMap52);
        int i62 = defaultedMap42.size();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        defaultedMap64.clear();
        boolean b69 = defaultedMap42.containsValue((java.lang.Object) defaultedMap64);
        java.util.Collection collection70 = defaultedMap64.values();
        java.lang.Object obj71 = defaultedMap26.get((java.lang.Object) collection70);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short) 1 + "'", obj17.equals((short) 1));
        org.junit.Assert.assertTrue(i18 == 1);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(i32 == 1);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(i48 == 1);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj57 + "' != '" + (short) 1 + "'", obj57.equals((short) 1));
        org.junit.Assert.assertTrue(i58 == 1);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue(i62 == 1);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertTrue("'" + obj71 + "' != '" + (short) 1 + "'", obj71.equals((short) 1));
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        collections.Predicate predicate20 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap30.isEmpty();
        collections.Predicate predicate40 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate41 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate40, predicate41);
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate20, predicate40);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        boolean b52 = defaultedMap46.isEmpty();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b61 = defaultedMap54.containsKey((java.lang.Object) (byte) 0);
        boolean b62 = defaultedMap46.equals((java.lang.Object) defaultedMap54);
        boolean b63 = defaultedMap54.isEmpty();
        boolean b64 = defaultedMap9.containsValue((java.lang.Object) defaultedMap54);
        java.util.Set set65 = defaultedMap9.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(predicate40);
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNotNull(set65);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap1.isEmpty();
        java.lang.String str10 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "{1=a}" + "'", str10.equals("{1=a}"));
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap6.get((java.lang.Object) '4');
        int i12 = defaultedMap6.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.Factory factory14 = null;
        try {
            java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertTrue(i12 == 1);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap6.get((java.lang.Object) '4');
        int i12 = defaultedMap6.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set16 = defaultedMap15.entrySet();
        java.util.Set set17 = defaultedMap15.entrySet();
        java.lang.Object obj19 = defaultedMap6.put((java.lang.Object) set17, (java.lang.Object) (short) 1);
        java.util.Collection collection20 = defaultedMap6.values();
        java.lang.String str21 = defaultedMap6.toString();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        int i29 = defaultedMap23.size();
        java.lang.Object obj31 = defaultedMap23.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b40 = defaultedMap33.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set41 = defaultedMap33.entrySet();
        java.lang.Object obj43 = defaultedMap33.get((java.lang.Object) 0.0d);
        defaultedMap23.putAll((java.util.Map) defaultedMap33);
        collections.Predicate predicate45 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate46 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map47 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap33, predicate45, predicate46);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj52 = defaultedMap49.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj54 = defaultedMap49.get((java.lang.Object) '4');
        int i55 = defaultedMap49.size();
        java.util.Set set56 = defaultedMap49.keySet();
        java.lang.Object obj58 = defaultedMap49.get((java.lang.Object) 10.0d);
        java.util.Collection collection59 = defaultedMap49.values();
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj64 = defaultedMap61.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj66 = defaultedMap61.get((java.lang.Object) '4');
        boolean b67 = defaultedMap61.isEmpty();
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj72 = defaultedMap69.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj74 = defaultedMap69.get((java.lang.Object) '4');
        boolean b76 = defaultedMap69.containsKey((java.lang.Object) (byte) 0);
        boolean b77 = defaultedMap61.equals((java.lang.Object) defaultedMap69);
        boolean b78 = defaultedMap69.isEmpty();
        collections.Predicate predicate79 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate80 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map81 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap69, predicate79, predicate80);
        java.util.Map map82 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap49, (java.lang.Object) predicate79);
        try {
            java.util.Map map83 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap6, predicate45, predicate79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertTrue(i12 == 1);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(collection20);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "{[]=1, 1=a}" + "'", str21.equals("{[]=1, 1=a}"));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(i29 == 1);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate45);
        org.junit.Assert.assertNotNull(predicate46);
        org.junit.Assert.assertNotNull(map47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (short) 1 + "'", obj54.equals((short) 1));
        org.junit.Assert.assertTrue(i55 == 1);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (short) 1 + "'", obj58.equals((short) 1));
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (short) 1 + "'", obj66.equals((short) 1));
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (short) 1 + "'", obj74.equals((short) 1));
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertNotNull(predicate79);
        org.junit.Assert.assertNotNull(predicate80);
        org.junit.Assert.assertNotNull(map81);
        org.junit.Assert.assertNotNull(map82);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b27 = defaultedMap21.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap21.equals((java.lang.Object) defaultedMap29);
        java.util.Collection collection38 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        defaultedMap9.putAll((java.util.Map) defaultedMap39);
        java.util.Set set41 = defaultedMap9.keySet();
        collections.Transformer transformer42 = null;
        try {
            java.util.Map map43 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, transformer42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertNotNull(set41);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = defaultedMap13.get(obj20);
        collections.PredicateUtils predicateUtils22 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) defaultedMap25);
        boolean b34 = defaultedMap25.isEmpty();
        java.lang.Object obj35 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        boolean b36 = defaultedMap1.containsValue((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        java.util.Collection collection44 = defaultedMap38.values();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Object obj46 = defaultedMap38.get(obj45);
        collections.PredicateUtils predicateUtils47 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils47);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b56 = defaultedMap50.isEmpty();
        defaultedMap50.clear();
        java.lang.Object obj58 = defaultedMap48.remove((java.lang.Object) defaultedMap50);
        boolean b59 = defaultedMap50.isEmpty();
        java.lang.Object obj60 = defaultedMap38.get((java.lang.Object) defaultedMap50);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap50, (java.lang.Object) 1);
        java.lang.Object obj63 = defaultedMap1.get((java.lang.Object) map62);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj70 = defaultedMap65.get((java.lang.Object) '4');
        int i71 = defaultedMap65.size();
        java.lang.Object obj72 = defaultedMap1.get((java.lang.Object) defaultedMap65);
        java.lang.Object obj73 = null;
        java.lang.Object obj74 = defaultedMap1.get(obj73);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertTrue(i71 == 1);
        org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (short) 1 + "'", obj72.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (short) 1 + "'", obj74.equals((short) 1));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) -1);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap30.isEmpty();
        defaultedMap30.clear();
        collections.Predicate predicate41 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj48 = defaultedMap43.get((java.lang.Object) '4');
        boolean b49 = defaultedMap43.isEmpty();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj54 = defaultedMap51.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap51.get((java.lang.Object) '4');
        boolean b58 = defaultedMap51.containsKey((java.lang.Object) (byte) 0);
        boolean b59 = defaultedMap43.equals((java.lang.Object) defaultedMap51);
        boolean b60 = defaultedMap51.isEmpty();
        collections.Predicate predicate61 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate62 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map63 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap51, predicate61, predicate62);
        java.util.Map map64 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate41, predicate61);
        java.util.Collection collection65 = defaultedMap30.values();
        boolean b66 = defaultedMap20.containsKey((java.lang.Object) collection65);
        java.lang.Object obj67 = defaultedMap1.get((java.lang.Object) defaultedMap20);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (short) 1 + "'", obj48.equals((short) 1));
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (short) 1 + "'", obj56.equals((short) 1));
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNotNull(predicate61);
        org.junit.Assert.assertNotNull(predicate62);
        org.junit.Assert.assertNotNull(map63);
        org.junit.Assert.assertNotNull(map64);
        org.junit.Assert.assertNotNull(collection65);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (short) 1 + "'", obj67.equals((short) 1));
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        int i30 = defaultedMap24.size();
        java.lang.Object obj32 = defaultedMap24.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap34.entrySet();
        java.lang.Object obj44 = defaultedMap34.get((java.lang.Object) 0.0d);
        defaultedMap24.putAll((java.util.Map) defaultedMap34);
        collections.Predicate predicate46 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate47 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap34, predicate46, predicate47);
        java.lang.Object obj49 = defaultedMap1.get((java.lang.Object) map48);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap(obj49);
        collections.PredicateUtils predicateUtils51 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils51);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b60 = defaultedMap54.isEmpty();
        defaultedMap54.clear();
        java.lang.Object obj62 = defaultedMap52.remove((java.lang.Object) defaultedMap54);
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap54);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj70 = defaultedMap65.get((java.lang.Object) '4');
        boolean b71 = defaultedMap65.isEmpty();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj76 = defaultedMap73.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj78 = defaultedMap73.get((java.lang.Object) '4');
        boolean b80 = defaultedMap73.containsKey((java.lang.Object) (byte) 0);
        boolean b81 = defaultedMap65.equals((java.lang.Object) defaultedMap73);
        boolean b82 = defaultedMap73.isEmpty();
        collections.Predicate predicate83 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate84 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap73, predicate83, predicate84);
        collections.Predicate predicate86 = collections.PredicateUtils.uniquePredicate();
        java.util.Map map87 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap54, predicate83, predicate86);
        boolean b88 = defaultedMap50.equals((java.lang.Object) defaultedMap54);
        java.util.Set set89 = defaultedMap50.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(i30 == 1);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate46);
        org.junit.Assert.assertNotNull(predicate47);
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (short) 1 + "'", obj78.equals((short) 1));
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNotNull(predicate83);
        org.junit.Assert.assertNotNull(predicate84);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertNotNull(predicate86);
        org.junit.Assert.assertNotNull(map87);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertNotNull(set89);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b19 = defaultedMap9.containsKey((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        int i27 = defaultedMap21.size();
        java.lang.Object obj29 = defaultedMap21.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        int i37 = defaultedMap31.size();
        java.lang.Object obj39 = defaultedMap31.remove((java.lang.Object) 10.0f);
        java.lang.Object obj40 = defaultedMap21.remove((java.lang.Object) defaultedMap31);
        int i41 = defaultedMap21.size();
        java.lang.String str42 = defaultedMap21.toString();
        boolean b43 = defaultedMap9.containsValue((java.lang.Object) str42);
        java.util.Map map45 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, (java.lang.Object) 10L);
        collections.PredicateUtils predicateUtils46 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils46);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj52 = defaultedMap49.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj54 = defaultedMap49.get((java.lang.Object) '4');
        boolean b55 = defaultedMap49.isEmpty();
        defaultedMap49.clear();
        java.lang.Object obj57 = defaultedMap47.remove((java.lang.Object) defaultedMap49);
        boolean b58 = defaultedMap49.isEmpty();
        java.lang.Object obj59 = defaultedMap9.get((java.lang.Object) b58);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(i27 == 1);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(i37 == 1);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue(i41 == 1);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "{1=a}" + "'", str42.equals("{1=a}"));
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(map45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (short) 1 + "'", obj54.equals((short) 1));
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.PredicateUtils predicateUtils23 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils23);
        boolean b25 = defaultedMap1.containsValue((java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        int i38 = defaultedMap32.size();
        defaultedMap27.putAll((java.util.Map) defaultedMap32);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set42 = defaultedMap41.entrySet();
        java.util.Set set43 = defaultedMap41.entrySet();
        java.lang.Object obj45 = defaultedMap32.put((java.lang.Object) set43, (java.lang.Object) (short) 1);
        java.util.Collection collection46 = defaultedMap32.values();
        java.lang.String str47 = defaultedMap32.toString();
        boolean b48 = defaultedMap32.isEmpty();
        java.lang.Object obj49 = defaultedMap1.get((java.lang.Object) b48);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(i38 == 1);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertNotNull(set43);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(collection46);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "{[]=1, 1=a}" + "'", str47.equals("{[]=1, 1=a}"));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        int i13 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue(i13 == 0);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        boolean b19 = defaultedMap3.equals((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        int i27 = defaultedMap21.size();
        java.lang.Object obj29 = defaultedMap21.remove((java.lang.Object) 10.0f);
        java.lang.Object obj31 = defaultedMap21.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b40 = defaultedMap33.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        int i48 = defaultedMap42.size();
        java.util.Set set49 = defaultedMap42.keySet();
        java.lang.Object obj51 = defaultedMap42.get((java.lang.Object) 10.0d);
        java.lang.Object obj52 = defaultedMap21.put((java.lang.Object) defaultedMap33, (java.lang.Object) 10.0d);
        java.util.Set set53 = defaultedMap21.keySet();
        java.lang.Object obj54 = defaultedMap11.get((java.lang.Object) defaultedMap21);
        java.util.Set set55 = defaultedMap11.entrySet();
        java.lang.Object obj56 = defaultedMap1.get((java.lang.Object) defaultedMap11);
        java.util.Set set57 = defaultedMap11.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(i27 == 1);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(i48 == 1);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (short) 1 + "'", obj54.equals((short) 1));
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + 100.0f + "'", obj56.equals(100.0f));
        org.junit.Assert.assertNotNull(set57);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        int i30 = defaultedMap24.size();
        java.lang.Object obj32 = defaultedMap24.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap34.entrySet();
        java.lang.Object obj44 = defaultedMap34.get((java.lang.Object) 0.0d);
        defaultedMap24.putAll((java.util.Map) defaultedMap34);
        collections.Predicate predicate46 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate47 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap34, predicate46, predicate47);
        java.lang.Object obj49 = defaultedMap1.get((java.lang.Object) map48);
        collections.PredicateUtils predicateUtils50 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils50);
        boolean b52 = defaultedMap1.containsValue((java.lang.Object) defaultedMap51);
        int i53 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(i30 == 1);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate46);
        org.junit.Assert.assertNotNull(predicate47);
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(i53 == 1);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap1.isEmpty();
        java.util.Set set19 = defaultedMap1.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        java.util.Set set8 = defaultedMap1.keySet();
        collections.Factory factory9 = null;
        try {
            java.util.Map map10 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(set8);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.util.Map map11 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) (byte) -1);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.util.Collection collection20 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap13.equals((java.lang.Object) b38);
        boolean b40 = defaultedMap1.containsKey((java.lang.Object) b39);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        int i48 = defaultedMap42.size();
        java.lang.Object obj50 = defaultedMap42.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj55 = defaultedMap52.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj57 = defaultedMap52.get((java.lang.Object) '4');
        boolean b59 = defaultedMap52.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set60 = defaultedMap52.entrySet();
        java.lang.Object obj62 = defaultedMap52.get((java.lang.Object) 0.0d);
        defaultedMap42.putAll((java.util.Map) defaultedMap52);
        boolean b64 = defaultedMap1.containsValue((java.lang.Object) defaultedMap42);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertNotNull(collection20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(i48 == 1);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj57 + "' != '" + (short) 1 + "'", obj57.equals((short) 1));
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
        org.junit.Assert.assertTrue(b64 == false);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.util.Map map11 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) (byte) -1);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap1.get(obj12);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj20 = defaultedMap15.get((java.lang.Object) '4');
        int i21 = defaultedMap15.size();
        java.lang.Object obj23 = defaultedMap15.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b32 = defaultedMap25.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set33 = defaultedMap25.entrySet();
        java.lang.Object obj35 = defaultedMap25.get((java.lang.Object) 0.0d);
        defaultedMap15.putAll((java.util.Map) defaultedMap25);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        int i44 = defaultedMap38.size();
        java.lang.Object obj46 = defaultedMap38.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap48.get((java.lang.Object) '4');
        boolean b55 = defaultedMap48.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set56 = defaultedMap48.entrySet();
        java.lang.Object obj58 = defaultedMap48.get((java.lang.Object) 0.0d);
        defaultedMap38.putAll((java.util.Map) defaultedMap48);
        collections.Predicate predicate60 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate61 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map62 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap48, predicate60, predicate61);
        java.lang.Object obj63 = defaultedMap15.get((java.lang.Object) map62);
        collections.PredicateUtils predicateUtils64 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils64);
        boolean b66 = defaultedMap15.containsValue((java.lang.Object) defaultedMap65);
        defaultedMap1.putAll((java.util.Map) defaultedMap65);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        java.lang.String str69 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + (short) 1 + "'", obj13.equals((short) 1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 1 + "'", obj20.equals((short) 1));
        org.junit.Assert.assertTrue(i21 == 1);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertTrue(i44 == 1);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (short) 1 + "'", obj58.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate60);
        org.junit.Assert.assertNotNull(predicate61);
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "{1=a}" + "'", str69.equals("{1=a}"));
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = defaultedMap13.get(obj20);
        collections.PredicateUtils predicateUtils22 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) defaultedMap25);
        boolean b34 = defaultedMap25.isEmpty();
        java.lang.Object obj35 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        boolean b36 = defaultedMap1.containsValue((java.lang.Object) defaultedMap13);
        defaultedMap1.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.PredicateUtils predicateUtils23 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils23);
        boolean b25 = defaultedMap1.containsValue((java.lang.Object) defaultedMap24);
        boolean b26 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b26 == false);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        collections.Predicate predicate20 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap30.isEmpty();
        collections.Predicate predicate40 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate41 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate40, predicate41);
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate20, predicate40);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        boolean b52 = defaultedMap46.isEmpty();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b61 = defaultedMap54.containsKey((java.lang.Object) (byte) 0);
        boolean b62 = defaultedMap46.equals((java.lang.Object) defaultedMap54);
        boolean b63 = defaultedMap54.isEmpty();
        boolean b64 = defaultedMap9.containsValue((java.lang.Object) defaultedMap54);
        int i65 = defaultedMap54.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(predicate40);
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(i65 == 1);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set2 = defaultedMap1.entrySet();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj10 = defaultedMap5.get((java.lang.Object) '4');
        java.util.Collection collection11 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b21 = defaultedMap14.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap14.entrySet();
        java.lang.Object obj23 = defaultedMap1.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap14);
        java.util.Set set24 = defaultedMap12.entrySet();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        int i32 = defaultedMap26.size();
        java.util.Set set33 = defaultedMap26.keySet();
        java.lang.Object obj35 = defaultedMap26.get((java.lang.Object) 10.0d);
        java.lang.Object obj38 = defaultedMap26.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        int i39 = defaultedMap26.size();
        boolean b40 = defaultedMap12.containsValue((java.lang.Object) i39);
        java.util.Set set41 = defaultedMap12.keySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(i32 == 1);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(set41);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap6.get((java.lang.Object) '4');
        int i12 = defaultedMap6.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set16 = defaultedMap15.entrySet();
        java.util.Set set17 = defaultedMap15.entrySet();
        java.lang.Object obj19 = defaultedMap6.put((java.lang.Object) set17, (java.lang.Object) (short) 1);
        java.util.Collection collection20 = defaultedMap6.values();
        java.lang.String str21 = defaultedMap6.toString();
        boolean b22 = defaultedMap6.isEmpty();
        java.lang.String str23 = defaultedMap6.toString();
        int i24 = defaultedMap6.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertTrue(i12 == 1);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(collection20);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "{[]=1, 1=a}" + "'", str21.equals("{[]=1, 1=a}"));
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "{[]=1, 1=a}" + "'", str23.equals("{[]=1, 1=a}"));
        org.junit.Assert.assertTrue(i24 == 2);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.lang.String str18 = defaultedMap9.toString();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        java.util.Collection collection26 = defaultedMap20.values();
        java.util.Collection collection27 = defaultedMap20.values();
        java.util.Map map28 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, (java.lang.Object) defaultedMap20);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{1=a}" + "'", str18.equals("{1=a}"));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertNotNull(collection27);
        org.junit.Assert.assertNotNull(map28);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        boolean b19 = defaultedMap3.equals((java.lang.Object) defaultedMap11);
        boolean b20 = defaultedMap11.isEmpty();
        defaultedMap11.clear();
        collections.Predicate predicate22 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        boolean b30 = defaultedMap24.isEmpty();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        boolean b40 = defaultedMap24.equals((java.lang.Object) defaultedMap32);
        boolean b41 = defaultedMap32.isEmpty();
        collections.Predicate predicate42 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate43 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map44 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap32, predicate42, predicate43);
        java.util.Map map45 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap11, predicate22, predicate42);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) map45);
        java.lang.Object obj47 = defaultedMap1.get((java.lang.Object) defaultedMap46);
        boolean b48 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(predicate22);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(predicate42);
        org.junit.Assert.assertNotNull(predicate43);
        org.junit.Assert.assertNotNull(map44);
        org.junit.Assert.assertNotNull(map45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == true);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set2 = defaultedMap1.entrySet();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj10 = defaultedMap5.get((java.lang.Object) '4');
        java.util.Collection collection11 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b21 = defaultedMap14.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap14.entrySet();
        java.lang.Object obj23 = defaultedMap1.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap14);
        java.util.Set set24 = defaultedMap12.entrySet();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        int i32 = defaultedMap26.size();
        java.util.Set set33 = defaultedMap26.keySet();
        java.lang.Object obj35 = defaultedMap26.get((java.lang.Object) 10.0d);
        java.lang.Object obj38 = defaultedMap26.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        int i39 = defaultedMap26.size();
        boolean b40 = defaultedMap12.containsValue((java.lang.Object) i39);
        java.lang.Object obj41 = null;
        boolean b42 = defaultedMap12.containsKey(obj41);
        java.util.Set set43 = defaultedMap12.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(i32 == 1);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNotNull(set43);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.PredicateUtils predicateUtils23 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils23);
        boolean b25 = defaultedMap1.containsValue((java.lang.Object) defaultedMap24);
        java.lang.String str26 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "{1=a}" + "'", str26.equals("{1=a}"));
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.util.Collection collection9 = defaultedMap1.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertNotNull(collection9);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        int i12 = defaultedMap3.size();
        java.util.Set set13 = defaultedMap3.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertNotNull(set13);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) "");
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        java.util.Collection collection9 = defaultedMap3.values();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = defaultedMap3.get(obj10);
        collections.PredicateUtils predicateUtils12 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils12);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj20 = defaultedMap15.get((java.lang.Object) '4');
        boolean b21 = defaultedMap15.isEmpty();
        defaultedMap15.clear();
        java.lang.Object obj23 = defaultedMap13.remove((java.lang.Object) defaultedMap15);
        boolean b24 = defaultedMap15.isEmpty();
        java.lang.Object obj25 = defaultedMap3.get((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        boolean b33 = defaultedMap27.isEmpty();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        boolean b42 = defaultedMap35.containsKey((java.lang.Object) (byte) 0);
        boolean b43 = defaultedMap27.equals((java.lang.Object) defaultedMap35);
        java.util.Collection collection44 = defaultedMap35.values();
        boolean b45 = defaultedMap15.equals((java.lang.Object) defaultedMap35);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj50 = defaultedMap47.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj52 = defaultedMap47.get((java.lang.Object) '4');
        java.util.Collection collection53 = defaultedMap47.values();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Object obj55 = defaultedMap47.get(obj54);
        java.lang.Object obj56 = defaultedMap1.put((java.lang.Object) b45, obj54);
        java.lang.String str57 = defaultedMap1.toString();
        java.util.Set set58 = defaultedMap1.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 1 + "'", obj20.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertNotNull(collection53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(set58);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.util.Collection collection11 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b28 = defaultedMap21.containsKey((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap13.equals((java.lang.Object) defaultedMap21);
        boolean b30 = defaultedMap21.isEmpty();
        collections.Predicate predicate31 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate32 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map33 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap21, predicate31, predicate32);
        java.util.Map map34 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) predicate31);
        int i35 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(predicate31);
        org.junit.Assert.assertNotNull(predicate32);
        org.junit.Assert.assertNotNull(map33);
        org.junit.Assert.assertNotNull(map34);
        org.junit.Assert.assertTrue(i35 == 1);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.util.Collection collection8 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj15 = defaultedMap10.get((java.lang.Object) '4');
        boolean b16 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj23 = defaultedMap18.get((java.lang.Object) '4');
        boolean b25 = defaultedMap18.containsKey((java.lang.Object) (byte) 0);
        boolean b26 = defaultedMap10.equals((java.lang.Object) defaultedMap18);
        boolean b27 = defaultedMap1.equals((java.lang.Object) b26);
        java.util.Set set28 = defaultedMap1.entrySet();
        java.util.Set set29 = defaultedMap1.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertNotNull(set29);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        boolean b19 = defaultedMap3.equals((java.lang.Object) defaultedMap11);
        boolean b20 = defaultedMap11.isEmpty();
        defaultedMap11.clear();
        collections.Predicate predicate22 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        boolean b30 = defaultedMap24.isEmpty();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        boolean b40 = defaultedMap24.equals((java.lang.Object) defaultedMap32);
        boolean b41 = defaultedMap32.isEmpty();
        collections.Predicate predicate42 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate43 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map44 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap32, predicate42, predicate43);
        java.util.Map map45 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap11, predicate22, predicate42);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) map45);
        java.lang.Object obj47 = defaultedMap1.get((java.lang.Object) defaultedMap46);
        java.util.Set set48 = defaultedMap1.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(predicate22);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(predicate42);
        org.junit.Assert.assertNotNull(predicate43);
        org.junit.Assert.assertNotNull(map44);
        org.junit.Assert.assertNotNull(map45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertNotNull(set48);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        java.lang.Object obj0 = null;
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap(obj0);
        int i2 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj7 = defaultedMap4.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj9 = defaultedMap4.get((java.lang.Object) '4');
        boolean b10 = defaultedMap4.isEmpty();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj17 = defaultedMap12.get((java.lang.Object) '4');
        boolean b19 = defaultedMap12.containsKey((java.lang.Object) (byte) 0);
        boolean b20 = defaultedMap4.equals((java.lang.Object) defaultedMap12);
        java.lang.String str21 = defaultedMap4.toString();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        int i29 = defaultedMap23.size();
        java.lang.Object obj31 = defaultedMap23.remove((java.lang.Object) 10.0f);
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        boolean b42 = defaultedMap35.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj49 = defaultedMap44.get((java.lang.Object) '4');
        int i50 = defaultedMap44.size();
        java.util.Set set51 = defaultedMap44.keySet();
        java.lang.Object obj53 = defaultedMap44.get((java.lang.Object) 10.0d);
        java.lang.Object obj54 = defaultedMap23.put((java.lang.Object) defaultedMap35, (java.lang.Object) 10.0d);
        java.util.Set set55 = defaultedMap23.keySet();
        collections.PredicateUtils predicateUtils56 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils56);
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj62 = defaultedMap59.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj64 = defaultedMap59.get((java.lang.Object) '4');
        boolean b65 = defaultedMap59.isEmpty();
        defaultedMap59.clear();
        java.lang.Object obj67 = defaultedMap57.remove((java.lang.Object) defaultedMap59);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap59);
        java.lang.Object obj69 = defaultedMap4.put((java.lang.Object) defaultedMap23, (java.lang.Object) defaultedMap68);
        defaultedMap23.clear();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj75 = defaultedMap72.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj77 = defaultedMap72.get((java.lang.Object) '4');
        int i78 = defaultedMap72.size();
        java.lang.Object obj80 = defaultedMap72.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap82 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj85 = defaultedMap82.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj87 = defaultedMap82.get((java.lang.Object) '4');
        boolean b89 = defaultedMap82.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set90 = defaultedMap82.entrySet();
        java.lang.Object obj92 = defaultedMap82.get((java.lang.Object) 0.0d);
        defaultedMap72.putAll((java.util.Map) defaultedMap82);
        java.lang.Object obj95 = defaultedMap72.remove((java.lang.Object) (short) 100);
        java.util.Set set96 = defaultedMap72.keySet();
        java.lang.Object obj98 = defaultedMap72.remove((java.lang.Object) 100.0f);
        java.lang.Object obj99 = defaultedMap1.put((java.lang.Object) defaultedMap23, obj98);
        org.junit.Assert.assertTrue(i2 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short) 1 + "'", obj17.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "{1=a}" + "'", str21.equals("{1=a}"));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(i29 == 1);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertTrue(i50 == 1);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + obj64 + "' != '" + (short) 1 + "'", obj64.equals((short) 1));
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short) 1 + "'", obj77.equals((short) 1));
        org.junit.Assert.assertTrue(i78 == 1);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + obj87 + "' != '" + (short) 1 + "'", obj87.equals((short) 1));
        org.junit.Assert.assertTrue(b89 == false);
        org.junit.Assert.assertNotNull(set90);
        org.junit.Assert.assertTrue("'" + obj92 + "' != '" + (short) 1 + "'", obj92.equals((short) 1));
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(set96);
        org.junit.Assert.assertNull(obj98);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        int i30 = defaultedMap24.size();
        java.lang.Object obj32 = defaultedMap24.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap34.entrySet();
        java.lang.Object obj44 = defaultedMap34.get((java.lang.Object) 0.0d);
        defaultedMap24.putAll((java.util.Map) defaultedMap34);
        collections.Predicate predicate46 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate47 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap34, predicate46, predicate47);
        java.lang.Object obj49 = defaultedMap1.get((java.lang.Object) map48);
        int i50 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(i30 == 1);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate46);
        org.junit.Assert.assertNotNull(predicate47);
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertTrue(i50 == 1);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set2 = defaultedMap1.entrySet();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj10 = defaultedMap5.get((java.lang.Object) '4');
        java.util.Collection collection11 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b21 = defaultedMap14.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap14.entrySet();
        java.lang.Object obj23 = defaultedMap1.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap14);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        int i31 = defaultedMap25.size();
        java.lang.Object obj33 = defaultedMap25.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        boolean b42 = defaultedMap35.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set43 = defaultedMap35.entrySet();
        java.lang.Object obj45 = defaultedMap35.get((java.lang.Object) 0.0d);
        defaultedMap25.putAll((java.util.Map) defaultedMap35);
        java.lang.Object obj48 = defaultedMap25.remove((java.lang.Object) (short) 100);
        java.util.Set set49 = defaultedMap25.keySet();
        java.lang.Object obj51 = defaultedMap25.remove((java.lang.Object) 100.0f);
        java.util.Set set52 = defaultedMap25.entrySet();
        java.lang.Object obj53 = defaultedMap1.remove((java.lang.Object) defaultedMap25);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj58 = defaultedMap55.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj60 = defaultedMap55.get((java.lang.Object) '4');
        boolean b61 = defaultedMap55.isEmpty();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj66 = defaultedMap63.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj68 = defaultedMap63.get((java.lang.Object) '4');
        boolean b70 = defaultedMap63.containsKey((java.lang.Object) (byte) 0);
        boolean b71 = defaultedMap55.equals((java.lang.Object) defaultedMap63);
        boolean b72 = defaultedMap63.isEmpty();
        collections.Predicate predicate73 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate74 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map75 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap63, predicate73, predicate74);
        collections.Predicate predicate76 = null;
        java.util.Map map77 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate74, predicate76);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(i31 == 1);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNotNull(set43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (short) 1 + "'", obj45.equals((short) 1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (short) 1 + "'", obj68.equals((short) 1));
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(predicate73);
        org.junit.Assert.assertNotNull(predicate74);
        org.junit.Assert.assertNotNull(map75);
        org.junit.Assert.assertNotNull(map77);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.PredicateUtils predicateUtils23 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils23);
        boolean b25 = defaultedMap1.containsValue((java.lang.Object) defaultedMap24);
        collections.Transformer transformer26 = null;
        try {
            java.util.Map map27 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b27 = defaultedMap21.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap21.equals((java.lang.Object) defaultedMap29);
        java.util.Collection collection38 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        defaultedMap9.putAll((java.util.Map) defaultedMap39);
        java.lang.Object obj42 = defaultedMap39.get((java.lang.Object) 10L);
        java.util.Set set43 = defaultedMap39.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(set43);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        java.util.Collection collection10 = defaultedMap1.values();
        java.util.Collection collection11 = defaultedMap1.values();
        java.util.Set set12 = defaultedMap1.entrySet();
        defaultedMap1.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNotNull(set12);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        int i20 = defaultedMap9.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(i20 == 1);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.util.Set set25 = defaultedMap1.keySet();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set37 = defaultedMap29.entrySet();
        java.lang.Object obj39 = defaultedMap29.get((java.lang.Object) 0.0d);
        java.lang.Object obj40 = defaultedMap1.get((java.lang.Object) 0.0d);
        java.lang.String str41 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj48 = defaultedMap43.get((java.lang.Object) '4');
        boolean b49 = defaultedMap43.isEmpty();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj54 = defaultedMap51.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap51.get((java.lang.Object) '4');
        boolean b58 = defaultedMap51.containsKey((java.lang.Object) (byte) 0);
        boolean b59 = defaultedMap43.equals((java.lang.Object) defaultedMap51);
        java.lang.String str60 = defaultedMap43.toString();
        boolean b61 = defaultedMap1.containsKey((java.lang.Object) defaultedMap43);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "{1=a}" + "'", str41.equals("{1=a}"));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (short) 1 + "'", obj48.equals((short) 1));
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (short) 1 + "'", obj56.equals((short) 1));
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "{1=a}" + "'", str60.equals("{1=a}"));
        org.junit.Assert.assertTrue(b61 == false);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.util.Collection collection11 = defaultedMap1.values();
        java.util.Set set12 = defaultedMap1.keySet();
        java.util.Set set13 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj20 = defaultedMap15.get((java.lang.Object) '4');
        boolean b21 = defaultedMap15.isEmpty();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b30 = defaultedMap23.containsKey((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap15.equals((java.lang.Object) defaultedMap23);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        int i39 = defaultedMap33.size();
        java.lang.Object obj41 = defaultedMap33.remove((java.lang.Object) 10.0f);
        java.lang.Object obj43 = defaultedMap33.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        boolean b52 = defaultedMap45.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        int i60 = defaultedMap54.size();
        java.util.Set set61 = defaultedMap54.keySet();
        java.lang.Object obj63 = defaultedMap54.get((java.lang.Object) 10.0d);
        java.lang.Object obj64 = defaultedMap33.put((java.lang.Object) defaultedMap45, (java.lang.Object) 10.0d);
        java.util.Set set65 = defaultedMap33.keySet();
        java.lang.Object obj66 = defaultedMap23.get((java.lang.Object) defaultedMap33);
        java.util.Set set67 = defaultedMap23.entrySet();
        java.lang.Object obj68 = defaultedMap1.remove((java.lang.Object) defaultedMap23);
        collections.Transformer transformer69 = null;
        try {
            java.util.Map map70 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNotNull(set12);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 1 + "'", obj20.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(i39 == 1);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(i60 == 1);
        org.junit.Assert.assertNotNull(set61);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (short) 1 + "'", obj66.equals((short) 1));
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        boolean b19 = defaultedMap3.equals((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        int i27 = defaultedMap21.size();
        java.lang.Object obj29 = defaultedMap21.remove((java.lang.Object) 10.0f);
        java.lang.Object obj31 = defaultedMap21.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b40 = defaultedMap33.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        int i48 = defaultedMap42.size();
        java.util.Set set49 = defaultedMap42.keySet();
        java.lang.Object obj51 = defaultedMap42.get((java.lang.Object) 10.0d);
        java.lang.Object obj52 = defaultedMap21.put((java.lang.Object) defaultedMap33, (java.lang.Object) 10.0d);
        java.util.Set set53 = defaultedMap21.keySet();
        java.lang.Object obj54 = defaultedMap11.get((java.lang.Object) defaultedMap21);
        java.util.Set set55 = defaultedMap11.entrySet();
        java.lang.Object obj56 = defaultedMap1.get((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj61 = defaultedMap58.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj63 = defaultedMap58.get((java.lang.Object) '4');
        boolean b64 = defaultedMap58.isEmpty();
        java.lang.Object obj65 = defaultedMap11.remove((java.lang.Object) b64);
        java.util.Set set66 = defaultedMap11.entrySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(i27 == 1);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(i48 == 1);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (short) 1 + "'", obj54.equals((short) 1));
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + 100.0f + "'", obj56.equals(100.0f));
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(set66);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        boolean b19 = defaultedMap3.equals((java.lang.Object) defaultedMap11);
        boolean b20 = defaultedMap11.isEmpty();
        defaultedMap11.clear();
        collections.Predicate predicate22 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        boolean b30 = defaultedMap24.isEmpty();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        boolean b40 = defaultedMap24.equals((java.lang.Object) defaultedMap32);
        boolean b41 = defaultedMap32.isEmpty();
        collections.Predicate predicate42 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate43 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map44 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap32, predicate42, predicate43);
        java.util.Map map45 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap11, predicate22, predicate42);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) map45);
        java.lang.Object obj47 = defaultedMap1.get((java.lang.Object) defaultedMap46);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj52 = defaultedMap49.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj54 = defaultedMap49.get((java.lang.Object) '4');
        int i55 = defaultedMap49.size();
        java.util.Set set56 = defaultedMap49.keySet();
        java.lang.Object obj58 = defaultedMap49.get((java.lang.Object) 10.0d);
        java.lang.Object obj59 = defaultedMap1.remove((java.lang.Object) defaultedMap49);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(predicate22);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(predicate42);
        org.junit.Assert.assertNotNull(predicate43);
        org.junit.Assert.assertNotNull(map44);
        org.junit.Assert.assertNotNull(map45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (short) 1 + "'", obj54.equals((short) 1));
        org.junit.Assert.assertTrue(i55 == 1);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (short) 1 + "'", obj58.equals((short) 1));
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        java.util.Collection collection10 = defaultedMap1.values();
        java.util.Collection collection11 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b20 = defaultedMap13.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set21 = defaultedMap13.entrySet();
        boolean b22 = defaultedMap1.equals((java.lang.Object) set21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        java.util.Collection collection30 = defaultedMap24.values();
        java.util.Collection collection31 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b39 = defaultedMap33.isEmpty();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap41.get((java.lang.Object) '4');
        boolean b48 = defaultedMap41.containsKey((java.lang.Object) (byte) 0);
        boolean b49 = defaultedMap33.equals((java.lang.Object) defaultedMap41);
        boolean b50 = defaultedMap24.equals((java.lang.Object) b49);
        int i51 = defaultedMap24.size();
        int i52 = defaultedMap24.size();
        boolean b53 = defaultedMap1.containsKey((java.lang.Object) defaultedMap24);
        java.util.Collection collection54 = defaultedMap24.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertTrue(i51 == 1);
        org.junit.Assert.assertTrue(i52 == 1);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertNotNull(collection54);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b27 = defaultedMap21.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap21.equals((java.lang.Object) defaultedMap29);
        java.util.Collection collection38 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        defaultedMap9.putAll((java.util.Map) defaultedMap39);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        boolean b48 = defaultedMap42.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b57 = defaultedMap50.containsKey((java.lang.Object) (byte) 0);
        boolean b58 = defaultedMap42.equals((java.lang.Object) defaultedMap50);
        java.util.Collection collection59 = defaultedMap50.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap50);
        boolean b61 = defaultedMap60.isEmpty();
        defaultedMap39.putAll((java.util.Map) defaultedMap60);
        defaultedMap39.clear();
        collections.Transformer transformer64 = null;
        try {
            java.util.Map map65 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap39, transformer64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertTrue(b61 == true);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        java.lang.Object obj20 = defaultedMap12.get((java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        java.util.Collection collection39 = defaultedMap30.values();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap41.get((java.lang.Object) '4');
        java.util.Collection collection47 = defaultedMap41.values();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Object obj49 = defaultedMap41.get(obj48);
        java.util.Map map50 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap30, obj48);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) map50);
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj56 = defaultedMap53.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj58 = defaultedMap53.get((java.lang.Object) '4');
        boolean b60 = defaultedMap53.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set61 = defaultedMap53.entrySet();
        java.util.Map map63 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap53, (java.lang.Object) (byte) -1);
        java.lang.Object obj64 = null;
        java.lang.Object obj65 = defaultedMap53.get(obj64);
        defaultedMap51.putAll((java.util.Map) defaultedMap53);
        defaultedMap12.putAll((java.util.Map) defaultedMap51);
        java.util.Collection collection68 = defaultedMap51.values();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(collection39);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNotNull(map50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (short) 1 + "'", obj58.equals((short) 1));
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNotNull(set61);
        org.junit.Assert.assertNotNull(map63);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
        org.junit.Assert.assertNotNull(collection68);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        collections.Predicate predicate19 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate20 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map21 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate19, predicate20);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b29 = defaultedMap23.isEmpty();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap23.equals((java.lang.Object) defaultedMap31);
        boolean b40 = defaultedMap9.containsValue((java.lang.Object) b39);
        java.lang.Object obj42 = defaultedMap9.get((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj49 = defaultedMap44.get((java.lang.Object) '4');
        boolean b50 = defaultedMap44.isEmpty();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj55 = defaultedMap52.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj57 = defaultedMap52.get((java.lang.Object) '4');
        boolean b59 = defaultedMap52.containsKey((java.lang.Object) (byte) 0);
        boolean b60 = defaultedMap44.equals((java.lang.Object) defaultedMap52);
        boolean b61 = defaultedMap52.isEmpty();
        collections.Predicate predicate62 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate63 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map64 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap52, predicate62, predicate63);
        collections.Predicate predicate65 = collections.PredicateUtils.uniquePredicate();
        java.util.Map map66 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate63, predicate65);
        java.util.Set set67 = defaultedMap9.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate19);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNotNull(map21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (short) 1 + "'", obj42.equals((short) 1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj57 + "' != '" + (short) 1 + "'", obj57.equals((short) 1));
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(predicate62);
        org.junit.Assert.assertNotNull(predicate63);
        org.junit.Assert.assertNotNull(map64);
        org.junit.Assert.assertNotNull(predicate65);
        org.junit.Assert.assertNotNull(map66);
        org.junit.Assert.assertNotNull(set67);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        int i12 = defaultedMap3.size();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        int i20 = defaultedMap14.size();
        java.util.Set set21 = defaultedMap14.keySet();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        int i29 = defaultedMap23.size();
        java.lang.Object obj31 = defaultedMap23.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b40 = defaultedMap33.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set41 = defaultedMap33.entrySet();
        java.lang.Object obj43 = defaultedMap33.get((java.lang.Object) 0.0d);
        defaultedMap23.putAll((java.util.Map) defaultedMap33);
        java.lang.String str45 = defaultedMap23.toString();
        java.util.Collection collection46 = defaultedMap23.values();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) collection46);
        java.lang.Object obj48 = defaultedMap3.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap47);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        int i56 = defaultedMap50.size();
        java.lang.Object obj58 = defaultedMap50.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj63 = defaultedMap60.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj65 = defaultedMap60.get((java.lang.Object) '4');
        int i66 = defaultedMap60.size();
        java.lang.Object obj68 = defaultedMap60.remove((java.lang.Object) 10.0f);
        java.lang.Object obj69 = defaultedMap50.remove((java.lang.Object) defaultedMap60);
        int i70 = defaultedMap50.size();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj75 = defaultedMap72.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        defaultedMap72.clear();
        boolean b77 = defaultedMap50.containsValue((java.lang.Object) defaultedMap72);
        boolean b78 = defaultedMap14.equals((java.lang.Object) b77);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(i20 == 1);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(i29 == 1);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "{1=a}" + "'", str45.equals("{1=a}"));
        org.junit.Assert.assertNotNull(collection46);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(i56 == 1);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
        org.junit.Assert.assertTrue(i66 == 1);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue(i70 == 1);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b78 == false);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b28 = defaultedMap21.containsKey((java.lang.Object) (byte) 0);
        java.lang.String str29 = defaultedMap21.toString();
        java.lang.Object obj30 = defaultedMap19.get((java.lang.Object) str29);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set40 = defaultedMap32.entrySet();
        defaultedMap19.putAll((java.util.Map) defaultedMap32);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "{1=a}" + "'", str29.equals("{1=a}"));
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.util.Set set25 = defaultedMap1.keySet();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set37 = defaultedMap29.entrySet();
        java.lang.Object obj39 = defaultedMap29.get((java.lang.Object) 0.0d);
        java.lang.Object obj40 = defaultedMap1.get((java.lang.Object) 0.0d);
        java.lang.String str41 = defaultedMap1.toString();
        java.util.Set set42 = defaultedMap1.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "{1=a}" + "'", str41.equals("{1=a}"));
        org.junit.Assert.assertNotNull(set42);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = defaultedMap13.get(obj20);
        collections.PredicateUtils predicateUtils22 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) defaultedMap25);
        boolean b34 = defaultedMap25.isEmpty();
        java.lang.Object obj35 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        boolean b36 = defaultedMap1.containsValue((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        java.util.Collection collection44 = defaultedMap38.values();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Object obj46 = defaultedMap38.get(obj45);
        collections.PredicateUtils predicateUtils47 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils47);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b56 = defaultedMap50.isEmpty();
        defaultedMap50.clear();
        java.lang.Object obj58 = defaultedMap48.remove((java.lang.Object) defaultedMap50);
        boolean b59 = defaultedMap50.isEmpty();
        java.lang.Object obj60 = defaultedMap38.get((java.lang.Object) defaultedMap50);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap50, (java.lang.Object) 1);
        java.lang.Object obj63 = defaultedMap1.get((java.lang.Object) map62);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj70 = defaultedMap65.get((java.lang.Object) '4');
        int i71 = defaultedMap65.size();
        java.lang.Object obj72 = defaultedMap1.get((java.lang.Object) defaultedMap65);
        defaultedMap1.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertTrue(i71 == 1);
        org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (short) 1 + "'", obj72.equals((short) 1));
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        int i17 = defaultedMap11.size();
        java.lang.Object obj19 = defaultedMap11.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b28 = defaultedMap21.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set29 = defaultedMap21.entrySet();
        java.lang.Object obj31 = defaultedMap21.get((java.lang.Object) 0.0d);
        defaultedMap11.putAll((java.util.Map) defaultedMap21);
        java.lang.Object obj34 = defaultedMap11.remove((java.lang.Object) (short) 100);
        java.util.Set set35 = defaultedMap11.keySet();
        java.lang.Object obj37 = defaultedMap11.remove((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj44 = defaultedMap39.get((java.lang.Object) '4');
        boolean b46 = defaultedMap39.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set47 = defaultedMap39.entrySet();
        java.lang.Object obj49 = defaultedMap39.get((java.lang.Object) 0.0d);
        java.lang.Object obj50 = defaultedMap11.get((java.lang.Object) 0.0d);
        java.lang.String str51 = defaultedMap11.toString();
        boolean b52 = defaultedMap1.equals((java.lang.Object) defaultedMap11);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(i17 == 1);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "{1=a}" + "'", str51.equals("{1=a}"));
        org.junit.Assert.assertTrue(b52 == true);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        java.util.Collection collection10 = defaultedMap1.values();
        java.util.Collection collection11 = defaultedMap1.values();
        java.lang.String str12 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "{1=a}" + "'", str12.equals("{1=a}"));
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        int i17 = defaultedMap11.size();
        java.lang.Object obj19 = defaultedMap11.remove((java.lang.Object) 10.0f);
        java.lang.Object obj20 = defaultedMap1.remove((java.lang.Object) defaultedMap11);
        int i21 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        defaultedMap23.clear();
        boolean b28 = defaultedMap1.containsValue((java.lang.Object) defaultedMap23);
        java.util.Collection collection29 = defaultedMap23.values();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b37 = defaultedMap31.isEmpty();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj44 = defaultedMap39.get((java.lang.Object) '4');
        boolean b46 = defaultedMap39.containsKey((java.lang.Object) (byte) 0);
        boolean b47 = defaultedMap31.equals((java.lang.Object) defaultedMap39);
        java.util.Collection collection48 = defaultedMap39.values();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap39);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj54 = defaultedMap51.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap51.get((java.lang.Object) '4');
        boolean b57 = defaultedMap51.isEmpty();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj62 = defaultedMap59.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj64 = defaultedMap59.get((java.lang.Object) '4');
        boolean b66 = defaultedMap59.containsKey((java.lang.Object) (byte) 0);
        boolean b67 = defaultedMap51.equals((java.lang.Object) defaultedMap59);
        java.util.Collection collection68 = defaultedMap59.values();
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap59);
        defaultedMap39.putAll((java.util.Map) defaultedMap69);
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj75 = defaultedMap72.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj77 = defaultedMap72.get((java.lang.Object) '4');
        boolean b78 = defaultedMap72.isEmpty();
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj83 = defaultedMap80.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj85 = defaultedMap80.get((java.lang.Object) '4');
        boolean b87 = defaultedMap80.containsKey((java.lang.Object) (byte) 0);
        boolean b88 = defaultedMap72.equals((java.lang.Object) defaultedMap80);
        java.util.Collection collection89 = defaultedMap80.values();
        collections.map.DefaultedMap defaultedMap90 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap80);
        boolean b91 = defaultedMap90.isEmpty();
        defaultedMap69.putAll((java.util.Map) defaultedMap90);
        defaultedMap23.putAll((java.util.Map) defaultedMap69);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(i17 == 1);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue(i21 == 1);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNotNull(collection29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertNotNull(collection48);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (short) 1 + "'", obj56.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + obj64 + "' != '" + (short) 1 + "'", obj64.equals((short) 1));
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertNotNull(collection68);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short) 1 + "'", obj77.equals((short) 1));
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + obj85 + "' != '" + (short) 1 + "'", obj85.equals((short) 1));
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertNotNull(collection89);
        org.junit.Assert.assertTrue(b91 == true);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.lang.String str18 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        int i26 = defaultedMap20.size();
        java.lang.Object obj28 = defaultedMap20.remove((java.lang.Object) 10.0f);
        java.lang.Object obj30 = defaultedMap20.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap41.get((java.lang.Object) '4');
        int i47 = defaultedMap41.size();
        java.util.Set set48 = defaultedMap41.keySet();
        java.lang.Object obj50 = defaultedMap41.get((java.lang.Object) 10.0d);
        java.lang.Object obj51 = defaultedMap20.put((java.lang.Object) defaultedMap32, (java.lang.Object) 10.0d);
        java.util.Set set52 = defaultedMap20.keySet();
        collections.PredicateUtils predicateUtils53 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils53);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b62 = defaultedMap56.isEmpty();
        defaultedMap56.clear();
        java.lang.Object obj64 = defaultedMap54.remove((java.lang.Object) defaultedMap56);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap56);
        java.lang.Object obj66 = defaultedMap1.put((java.lang.Object) defaultedMap20, (java.lang.Object) defaultedMap65);
        java.util.Set set67 = defaultedMap65.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{1=a}" + "'", str18.equals("{1=a}"));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(i26 == 1);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertTrue(i47 == 1);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(set67);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.String str23 = defaultedMap1.toString();
        java.util.Collection collection24 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) collection24);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) collection24);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "{1=a}" + "'", str23.equals("{1=a}"));
        org.junit.Assert.assertNotNull(collection24);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b28 = defaultedMap21.containsKey((java.lang.Object) (byte) 0);
        java.lang.String str29 = defaultedMap21.toString();
        java.lang.Object obj30 = defaultedMap19.get((java.lang.Object) str29);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        java.util.Collection collection38 = defaultedMap32.values();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Object obj40 = defaultedMap32.get(obj39);
        java.util.Collection collection41 = defaultedMap32.values();
        java.util.Collection collection42 = defaultedMap32.values();
        java.util.Set set43 = defaultedMap32.keySet();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        boolean b51 = defaultedMap45.isEmpty();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj56 = defaultedMap53.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj58 = defaultedMap53.get((java.lang.Object) '4');
        boolean b60 = defaultedMap53.containsKey((java.lang.Object) (byte) 0);
        boolean b61 = defaultedMap45.equals((java.lang.Object) defaultedMap53);
        boolean b62 = defaultedMap53.isEmpty();
        defaultedMap53.clear();
        defaultedMap53.clear();
        defaultedMap32.putAll((java.util.Map) defaultedMap53);
        java.lang.Object obj66 = defaultedMap19.remove((java.lang.Object) defaultedMap53);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "{1=a}" + "'", str29.equals("{1=a}"));
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertNotNull(collection41);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertNotNull(set43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (short) 1 + "'", obj58.equals((short) 1));
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNull(obj66);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        boolean b19 = defaultedMap3.equals((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        int i27 = defaultedMap21.size();
        java.lang.Object obj29 = defaultedMap21.remove((java.lang.Object) 10.0f);
        java.lang.Object obj31 = defaultedMap21.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b40 = defaultedMap33.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        int i48 = defaultedMap42.size();
        java.util.Set set49 = defaultedMap42.keySet();
        java.lang.Object obj51 = defaultedMap42.get((java.lang.Object) 10.0d);
        java.lang.Object obj52 = defaultedMap21.put((java.lang.Object) defaultedMap33, (java.lang.Object) 10.0d);
        java.util.Set set53 = defaultedMap21.keySet();
        java.lang.Object obj54 = defaultedMap11.get((java.lang.Object) defaultedMap21);
        java.util.Set set55 = defaultedMap11.entrySet();
        java.lang.Object obj56 = defaultedMap1.get((java.lang.Object) defaultedMap11);
        boolean b57 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(i27 == 1);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(i48 == 1);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (short) 1 + "'", obj54.equals((short) 1));
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + 100.0f + "'", obj56.equals(100.0f));
        org.junit.Assert.assertTrue(b57 == true);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj24 = defaultedMap19.get((java.lang.Object) '4');
        int i25 = defaultedMap19.size();
        java.lang.Object obj27 = defaultedMap19.remove((java.lang.Object) 10.0f);
        java.lang.Object obj29 = defaultedMap19.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj45 = defaultedMap40.get((java.lang.Object) '4');
        int i46 = defaultedMap40.size();
        java.util.Set set47 = defaultedMap40.keySet();
        java.lang.Object obj49 = defaultedMap40.get((java.lang.Object) 10.0d);
        java.lang.Object obj50 = defaultedMap19.put((java.lang.Object) defaultedMap31, (java.lang.Object) 10.0d);
        java.util.Set set51 = defaultedMap19.keySet();
        java.lang.Object obj52 = defaultedMap9.get((java.lang.Object) defaultedMap19);
        java.util.Set set53 = defaultedMap9.entrySet();
        int i54 = defaultedMap9.size();
        int i55 = defaultedMap9.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short) 1 + "'", obj24.equals((short) 1));
        org.junit.Assert.assertTrue(i25 == 1);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (short) 1 + "'", obj45.equals((short) 1));
        org.junit.Assert.assertTrue(i46 == 1);
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue(i54 == 1);
        org.junit.Assert.assertTrue(i55 == 1);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        collections.Predicate predicate20 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap30.isEmpty();
        collections.Predicate predicate40 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate41 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate40, predicate41);
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate20, predicate40);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        int i51 = defaultedMap45.size();
        java.lang.Object obj53 = defaultedMap45.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj58 = defaultedMap55.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj60 = defaultedMap55.get((java.lang.Object) '4');
        boolean b62 = defaultedMap55.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set63 = defaultedMap55.entrySet();
        java.lang.Object obj65 = defaultedMap55.get((java.lang.Object) 0.0d);
        defaultedMap45.putAll((java.util.Map) defaultedMap55);
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap45);
        java.lang.Object obj68 = defaultedMap9.remove((java.lang.Object) defaultedMap45);
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap45);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(predicate40);
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(i51 == 1);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        boolean b32 = defaultedMap26.isEmpty();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        boolean b42 = defaultedMap26.equals((java.lang.Object) defaultedMap34);
        java.lang.Object obj43 = defaultedMap1.get((java.lang.Object) defaultedMap26);
        java.util.Set set44 = defaultedMap1.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNotNull(set44);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.util.Set set25 = defaultedMap1.keySet();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set37 = defaultedMap29.entrySet();
        java.lang.Object obj39 = defaultedMap29.get((java.lang.Object) 0.0d);
        java.lang.Object obj40 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.Factory factory41 = null;
        try {
            java.util.Map map42 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Set set7 = defaultedMap1.keySet();
        java.util.Set set8 = defaultedMap1.entrySet();
        java.util.Collection collection9 = defaultedMap1.values();
        collections.Predicate predicate10 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj17 = defaultedMap12.get((java.lang.Object) '4');
        int i18 = defaultedMap12.size();
        java.lang.Object obj20 = defaultedMap12.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b29 = defaultedMap22.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set30 = defaultedMap22.entrySet();
        java.lang.Object obj32 = defaultedMap22.get((java.lang.Object) 0.0d);
        defaultedMap12.putAll((java.util.Map) defaultedMap22);
        java.lang.Object obj35 = defaultedMap12.remove((java.lang.Object) (short) 100);
        java.util.Set set36 = defaultedMap12.keySet();
        java.lang.Object obj38 = defaultedMap12.remove((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj45 = defaultedMap40.get((java.lang.Object) '4');
        boolean b47 = defaultedMap40.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set48 = defaultedMap40.entrySet();
        java.lang.Object obj50 = defaultedMap40.get((java.lang.Object) 0.0d);
        java.lang.Object obj51 = defaultedMap12.get((java.lang.Object) 0.0d);
        collections.Predicate predicate52 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b60 = defaultedMap54.isEmpty();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj67 = defaultedMap62.get((java.lang.Object) '4');
        boolean b69 = defaultedMap62.containsKey((java.lang.Object) (byte) 0);
        boolean b70 = defaultedMap54.equals((java.lang.Object) defaultedMap62);
        boolean b71 = defaultedMap62.isEmpty();
        defaultedMap62.clear();
        collections.Predicate predicate73 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj78 = defaultedMap75.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj80 = defaultedMap75.get((java.lang.Object) '4');
        boolean b81 = defaultedMap75.isEmpty();
        collections.map.DefaultedMap defaultedMap83 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj86 = defaultedMap83.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj88 = defaultedMap83.get((java.lang.Object) '4');
        boolean b90 = defaultedMap83.containsKey((java.lang.Object) (byte) 0);
        boolean b91 = defaultedMap75.equals((java.lang.Object) defaultedMap83);
        boolean b92 = defaultedMap83.isEmpty();
        collections.Predicate predicate93 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate94 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map95 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap83, predicate93, predicate94);
        java.util.Map map96 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap62, predicate73, predicate93);
        java.util.Map map97 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap12, predicate52, predicate73);
        java.util.Map map98 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate10, predicate52);
        collections.map.DefaultedMap defaultedMap99 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertNotNull(predicate10);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short) 1 + "'", obj17.equals((short) 1));
        org.junit.Assert.assertTrue(i18 == 1);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(set36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (short) 1 + "'", obj45.equals((short) 1));
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate52);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (short) 1 + "'", obj67.equals((short) 1));
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNotNull(predicate73);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + obj80 + "' != '" + (short) 1 + "'", obj80.equals((short) 1));
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + obj88 + "' != '" + (short) 1 + "'", obj88.equals((short) 1));
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(b91 == true);
        org.junit.Assert.assertTrue(b92 == false);
        org.junit.Assert.assertNotNull(predicate93);
        org.junit.Assert.assertNotNull(predicate94);
        org.junit.Assert.assertNotNull(map95);
        org.junit.Assert.assertNotNull(map96);
        org.junit.Assert.assertNotNull(map97);
        org.junit.Assert.assertNotNull(map98);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b20 = defaultedMap13.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        int i28 = defaultedMap22.size();
        java.util.Set set29 = defaultedMap22.keySet();
        java.lang.Object obj31 = defaultedMap22.get((java.lang.Object) 10.0d);
        java.lang.Object obj32 = defaultedMap1.put((java.lang.Object) defaultedMap13, (java.lang.Object) 10.0d);
        java.util.Set set33 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        int i41 = defaultedMap35.size();
        java.lang.Object obj43 = defaultedMap35.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        boolean b52 = defaultedMap45.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set53 = defaultedMap45.entrySet();
        java.lang.Object obj55 = defaultedMap45.get((java.lang.Object) 0.0d);
        defaultedMap35.putAll((java.util.Map) defaultedMap45);
        java.lang.Object obj58 = defaultedMap35.remove((java.lang.Object) (short) 100);
        boolean b59 = defaultedMap1.equals((java.lang.Object) (short) 100);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj64 = defaultedMap61.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj66 = defaultedMap61.get((java.lang.Object) '4');
        int i67 = defaultedMap61.size();
        java.util.Set set68 = defaultedMap61.keySet();
        java.lang.Object obj70 = defaultedMap61.get((java.lang.Object) 10.0d);
        java.util.Collection collection71 = defaultedMap61.values();
        java.lang.Object obj72 = defaultedMap1.remove((java.lang.Object) collection71);
        defaultedMap1.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(i41 == 1);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (short) 1 + "'", obj66.equals((short) 1));
        org.junit.Assert.assertTrue(i67 == 1);
        org.junit.Assert.assertNotNull(set68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertNotNull(collection71);
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b19 = defaultedMap9.containsKey((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        int i27 = defaultedMap21.size();
        java.lang.Object obj29 = defaultedMap21.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        int i37 = defaultedMap31.size();
        java.lang.Object obj39 = defaultedMap31.remove((java.lang.Object) 10.0f);
        java.lang.Object obj40 = defaultedMap21.remove((java.lang.Object) defaultedMap31);
        int i41 = defaultedMap21.size();
        java.lang.String str42 = defaultedMap21.toString();
        boolean b43 = defaultedMap9.containsValue((java.lang.Object) str42);
        java.util.Map map45 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, (java.lang.Object) 10L);
        collections.Factory factory46 = null;
        try {
            java.util.Map map47 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, factory46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(i27 == 1);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(i37 == 1);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue(i41 == 1);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "{1=a}" + "'", str42.equals("{1=a}"));
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(map45);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b20 = defaultedMap13.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        int i28 = defaultedMap22.size();
        java.util.Set set29 = defaultedMap22.keySet();
        java.lang.Object obj31 = defaultedMap22.get((java.lang.Object) 10.0d);
        java.lang.Object obj32 = defaultedMap1.put((java.lang.Object) defaultedMap13, (java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) 10.0d);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        java.util.Collection collection26 = defaultedMap20.values();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Object obj28 = defaultedMap20.get(obj27);
        java.util.Map map29 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) map29);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set40 = defaultedMap32.entrySet();
        java.util.Map map42 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap32, (java.lang.Object) (byte) -1);
        java.lang.Object obj43 = null;
        java.lang.Object obj44 = defaultedMap32.get(obj43);
        defaultedMap30.putAll((java.util.Map) defaultedMap32);
        boolean b46 = defaultedMap30.isEmpty();
        collections.Factory factory47 = null;
        try {
            java.util.Map map48 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap30, factory47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertNotNull(map29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertTrue(b46 == false);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        defaultedMap9.clear();
        int i21 = defaultedMap9.size();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        int i29 = defaultedMap23.size();
        java.lang.Object obj31 = defaultedMap23.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        int i39 = defaultedMap33.size();
        java.lang.Object obj41 = defaultedMap33.remove((java.lang.Object) 10.0f);
        java.lang.Object obj42 = defaultedMap23.remove((java.lang.Object) defaultedMap33);
        int i43 = defaultedMap23.size();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        defaultedMap45.clear();
        boolean b50 = defaultedMap23.containsValue((java.lang.Object) defaultedMap45);
        java.util.Collection collection51 = defaultedMap45.values();
        boolean b52 = defaultedMap9.equals((java.lang.Object) defaultedMap45);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(i29 == 1);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(i39 == 1);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue(i43 == 1);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue(b52 == true);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Map map10 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) 2);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj17 = defaultedMap12.get((java.lang.Object) '4');
        int i18 = defaultedMap12.size();
        java.util.Set set19 = defaultedMap12.keySet();
        java.lang.Object obj21 = defaultedMap12.get((java.lang.Object) 10.0d);
        java.lang.Object obj24 = defaultedMap12.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        int i32 = defaultedMap26.size();
        java.util.Set set33 = defaultedMap26.keySet();
        java.lang.Object obj35 = defaultedMap26.get((java.lang.Object) 10.0d);
        java.lang.Object obj38 = defaultedMap26.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        defaultedMap12.putAll((java.util.Map) defaultedMap26);
        boolean b40 = defaultedMap1.equals((java.lang.Object) defaultedMap26);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        boolean b48 = defaultedMap42.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b57 = defaultedMap50.containsKey((java.lang.Object) (byte) 0);
        boolean b58 = defaultedMap42.equals((java.lang.Object) defaultedMap50);
        java.util.Collection collection59 = defaultedMap50.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap50);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj67 = defaultedMap62.get((java.lang.Object) '4');
        boolean b68 = defaultedMap62.isEmpty();
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj73 = defaultedMap70.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj75 = defaultedMap70.get((java.lang.Object) '4');
        boolean b77 = defaultedMap70.containsKey((java.lang.Object) (byte) 0);
        boolean b78 = defaultedMap62.equals((java.lang.Object) defaultedMap70);
        java.util.Collection collection79 = defaultedMap70.values();
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap70);
        defaultedMap50.putAll((java.util.Map) defaultedMap80);
        int i82 = defaultedMap80.size();
        java.util.Collection collection83 = defaultedMap80.values();
        boolean b84 = defaultedMap1.equals((java.lang.Object) collection83);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short) 1 + "'", obj17.equals((short) 1));
        org.junit.Assert.assertTrue(i18 == 1);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(i32 == 1);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (short) 1 + "'", obj67.equals((short) 1));
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + (short) 1 + "'", obj75.equals((short) 1));
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertNotNull(collection79);
        org.junit.Assert.assertTrue(i82 == 0);
        org.junit.Assert.assertNotNull(collection83);
        org.junit.Assert.assertTrue(b84 == false);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.util.Set set25 = defaultedMap1.keySet();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) 100.0f);
        java.util.Set set28 = defaultedMap1.entrySet();
        collections.Factory factory29 = null;
        try {
            java.util.Map map30 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(set28);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        java.util.Collection collection10 = defaultedMap1.values();
        java.util.Collection collection11 = defaultedMap1.values();
        java.util.Set set12 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b20 = defaultedMap14.isEmpty();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b29 = defaultedMap22.containsKey((java.lang.Object) (byte) 0);
        boolean b30 = defaultedMap14.equals((java.lang.Object) defaultedMap22);
        boolean b31 = defaultedMap22.isEmpty();
        defaultedMap22.clear();
        defaultedMap22.clear();
        defaultedMap1.putAll((java.util.Map) defaultedMap22);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj41 = defaultedMap36.get((java.lang.Object) '4');
        int i42 = defaultedMap36.size();
        java.lang.Object obj44 = defaultedMap36.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        boolean b53 = defaultedMap46.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set54 = defaultedMap46.entrySet();
        java.lang.Object obj56 = defaultedMap46.get((java.lang.Object) 0.0d);
        defaultedMap36.putAll((java.util.Map) defaultedMap46);
        java.lang.Object obj59 = defaultedMap36.remove((java.lang.Object) (short) 100);
        java.util.Set set60 = defaultedMap36.keySet();
        java.util.Set set61 = defaultedMap36.entrySet();
        java.lang.Object obj62 = defaultedMap22.get((java.lang.Object) set61);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNotNull(set12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (short) 1 + "'", obj41.equals((short) 1));
        org.junit.Assert.assertTrue(i42 == 1);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (short) 1 + "'", obj56.equals((short) 1));
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertNotNull(set61);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.lang.String str18 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        int i26 = defaultedMap20.size();
        java.lang.Object obj28 = defaultedMap20.remove((java.lang.Object) 10.0f);
        java.lang.Object obj30 = defaultedMap20.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap41.get((java.lang.Object) '4');
        int i47 = defaultedMap41.size();
        java.util.Set set48 = defaultedMap41.keySet();
        java.lang.Object obj50 = defaultedMap41.get((java.lang.Object) 10.0d);
        java.lang.Object obj51 = defaultedMap20.put((java.lang.Object) defaultedMap32, (java.lang.Object) 10.0d);
        java.util.Set set52 = defaultedMap20.keySet();
        collections.PredicateUtils predicateUtils53 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils53);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b62 = defaultedMap56.isEmpty();
        defaultedMap56.clear();
        java.lang.Object obj64 = defaultedMap54.remove((java.lang.Object) defaultedMap56);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap56);
        java.lang.Object obj66 = defaultedMap1.put((java.lang.Object) defaultedMap20, (java.lang.Object) defaultedMap65);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj71 = defaultedMap68.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj73 = defaultedMap68.get((java.lang.Object) '4');
        boolean b75 = defaultedMap68.containsKey((java.lang.Object) (byte) 0);
        java.lang.String str76 = defaultedMap68.toString();
        java.lang.Object obj77 = defaultedMap20.get((java.lang.Object) str76);
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap20);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{1=a}" + "'", str18.equals("{1=a}"));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(i26 == 1);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertTrue(i47 == 1);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (short) 1 + "'", obj73.equals((short) 1));
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "{1=a}" + "'", str76.equals("{1=a}"));
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short) 1 + "'", obj77.equals((short) 1));
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.util.Map map11 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) (byte) -1);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap1.get(obj12);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj20 = defaultedMap15.get((java.lang.Object) '4');
        boolean b22 = defaultedMap15.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap15.entrySet();
        java.util.Map map25 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap15, (java.lang.Object) (byte) -1);
        java.util.Map map27 = collections.map.DefaultedMap.decorate(map25, (java.lang.Object) "{[]=1, 1=a}");
        java.util.Map map28 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) "{[]=1, 1=a}");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + (short) 1 + "'", obj13.equals((short) 1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 1 + "'", obj20.equals((short) 1));
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertNotNull(map27);
        org.junit.Assert.assertNotNull(map28);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b19 = defaultedMap9.containsKey((java.lang.Object) 10);
        java.lang.Object obj21 = defaultedMap9.get((java.lang.Object) (byte) 1);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b29 = defaultedMap23.isEmpty();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap23.equals((java.lang.Object) defaultedMap31);
        boolean b40 = defaultedMap31.isEmpty();
        defaultedMap31.clear();
        collections.Predicate predicate42 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj49 = defaultedMap44.get((java.lang.Object) '4');
        boolean b50 = defaultedMap44.isEmpty();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj55 = defaultedMap52.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj57 = defaultedMap52.get((java.lang.Object) '4');
        boolean b59 = defaultedMap52.containsKey((java.lang.Object) (byte) 0);
        boolean b60 = defaultedMap44.equals((java.lang.Object) defaultedMap52);
        boolean b61 = defaultedMap52.isEmpty();
        collections.Predicate predicate62 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate63 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map64 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap52, predicate62, predicate63);
        java.util.Map map65 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap31, predicate42, predicate62);
        java.lang.Object obj66 = defaultedMap9.get((java.lang.Object) defaultedMap31);
        defaultedMap9.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(predicate42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj57 + "' != '" + (short) 1 + "'", obj57.equals((short) 1));
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(predicate62);
        org.junit.Assert.assertNotNull(predicate63);
        org.junit.Assert.assertNotNull(map64);
        org.junit.Assert.assertNotNull(map65);
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (short) 1 + "'", obj66.equals((short) 1));
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj17 = defaultedMap12.get((java.lang.Object) '4');
        int i18 = defaultedMap12.size();
        java.lang.Object obj20 = defaultedMap12.remove((java.lang.Object) 10.0f);
        java.lang.Object obj22 = defaultedMap12.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        boolean b31 = defaultedMap24.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        int i39 = defaultedMap33.size();
        java.util.Set set40 = defaultedMap33.keySet();
        java.lang.Object obj42 = defaultedMap33.get((java.lang.Object) 10.0d);
        java.lang.Object obj43 = defaultedMap12.put((java.lang.Object) defaultedMap24, (java.lang.Object) 10.0d);
        java.util.Set set44 = defaultedMap12.keySet();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        int i52 = defaultedMap46.size();
        java.lang.Object obj54 = defaultedMap46.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b63 = defaultedMap56.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set64 = defaultedMap56.entrySet();
        java.lang.Object obj66 = defaultedMap56.get((java.lang.Object) 0.0d);
        defaultedMap46.putAll((java.util.Map) defaultedMap56);
        java.lang.Object obj69 = defaultedMap46.remove((java.lang.Object) (short) 100);
        boolean b70 = defaultedMap12.equals((java.lang.Object) (short) 100);
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj75 = defaultedMap72.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj77 = defaultedMap72.get((java.lang.Object) '4');
        int i78 = defaultedMap72.size();
        java.util.Set set79 = defaultedMap72.keySet();
        java.lang.Object obj81 = defaultedMap72.get((java.lang.Object) 10.0d);
        java.util.Collection collection82 = defaultedMap72.values();
        java.lang.Object obj83 = defaultedMap12.remove((java.lang.Object) collection82);
        java.util.Map map84 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, obj83);
        boolean b85 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short) 1 + "'", obj17.equals((short) 1));
        org.junit.Assert.assertTrue(i18 == 1);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(i39 == 1);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (short) 1 + "'", obj42.equals((short) 1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(i52 == 1);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNotNull(set64);
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (short) 1 + "'", obj66.equals((short) 1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short) 1 + "'", obj77.equals((short) 1));
        org.junit.Assert.assertTrue(i78 == 1);
        org.junit.Assert.assertNotNull(set79);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (short) 1 + "'", obj81.equals((short) 1));
        org.junit.Assert.assertNotNull(collection82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(map84);
        org.junit.Assert.assertTrue(b85 == false);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap6.get((java.lang.Object) '4');
        int i12 = defaultedMap6.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        int i14 = defaultedMap6.size();
        boolean b15 = defaultedMap6.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertTrue(i12 == 1);
        org.junit.Assert.assertTrue(i14 == 1);
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = defaultedMap13.get(obj20);
        collections.PredicateUtils predicateUtils22 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) defaultedMap25);
        boolean b34 = defaultedMap25.isEmpty();
        java.lang.Object obj35 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        boolean b36 = defaultedMap1.containsValue((java.lang.Object) defaultedMap13);
        java.util.Collection collection37 = defaultedMap1.values();
        boolean b38 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap41.get((java.lang.Object) '4');
        int i47 = defaultedMap41.size();
        java.util.Set set48 = defaultedMap41.keySet();
        java.lang.Object obj50 = defaultedMap41.get((java.lang.Object) 10.0d);
        int i51 = defaultedMap41.size();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set54 = defaultedMap53.entrySet();
        java.util.Set set55 = defaultedMap53.entrySet();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj60 = defaultedMap57.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj62 = defaultedMap57.get((java.lang.Object) '4');
        java.util.Collection collection63 = defaultedMap57.values();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap57);
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj69 = defaultedMap66.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj71 = defaultedMap66.get((java.lang.Object) '4');
        boolean b73 = defaultedMap66.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set74 = defaultedMap66.entrySet();
        java.lang.Object obj75 = defaultedMap53.put((java.lang.Object) defaultedMap64, (java.lang.Object) defaultedMap66);
        java.lang.Object obj76 = defaultedMap41.get(obj75);
        java.lang.Object obj77 = defaultedMap1.put((java.lang.Object) (byte) 0, obj75);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertTrue(i47 == 1);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(i51 == 1);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + obj71 + "' != '" + (short) 1 + "'", obj71.equals((short) 1));
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertNotNull(set74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + obj76 + "' != '" + (short) 1 + "'", obj76.equals((short) 1));
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        boolean b19 = defaultedMap3.equals((java.lang.Object) defaultedMap11);
        boolean b20 = defaultedMap11.isEmpty();
        java.lang.Object obj21 = defaultedMap1.get((java.lang.Object) b20);
        java.util.Collection collection22 = defaultedMap1.values();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNotNull(collection22);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        int i30 = defaultedMap24.size();
        java.lang.Object obj32 = defaultedMap24.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap34.entrySet();
        java.lang.Object obj44 = defaultedMap34.get((java.lang.Object) 0.0d);
        defaultedMap24.putAll((java.util.Map) defaultedMap34);
        collections.Predicate predicate46 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate47 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap34, predicate46, predicate47);
        java.lang.Object obj49 = defaultedMap1.get((java.lang.Object) map48);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap(obj49);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj55 = defaultedMap52.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj57 = defaultedMap52.get((java.lang.Object) '4');
        boolean b58 = defaultedMap52.isEmpty();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj63 = defaultedMap60.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj65 = defaultedMap60.get((java.lang.Object) '4');
        boolean b67 = defaultedMap60.containsKey((java.lang.Object) (byte) 0);
        boolean b68 = defaultedMap52.equals((java.lang.Object) defaultedMap60);
        java.lang.String str69 = defaultedMap52.toString();
        boolean b71 = defaultedMap52.containsValue((java.lang.Object) (byte) 100);
        boolean b72 = defaultedMap50.containsValue((java.lang.Object) (byte) 100);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(i30 == 1);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate46);
        org.junit.Assert.assertNotNull(predicate47);
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj57 + "' != '" + (short) 1 + "'", obj57.equals((short) 1));
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "{1=a}" + "'", str69.equals("{1=a}"));
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(b72 == false);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.util.Set set25 = defaultedMap1.keySet();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set37 = defaultedMap29.entrySet();
        java.lang.Object obj39 = defaultedMap29.get((java.lang.Object) 0.0d);
        java.lang.Object obj40 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.Predicate predicate41 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj48 = defaultedMap43.get((java.lang.Object) '4');
        boolean b49 = defaultedMap43.isEmpty();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj54 = defaultedMap51.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap51.get((java.lang.Object) '4');
        boolean b58 = defaultedMap51.containsKey((java.lang.Object) (byte) 0);
        boolean b59 = defaultedMap43.equals((java.lang.Object) defaultedMap51);
        boolean b60 = defaultedMap51.isEmpty();
        defaultedMap51.clear();
        collections.Predicate predicate62 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj69 = defaultedMap64.get((java.lang.Object) '4');
        boolean b70 = defaultedMap64.isEmpty();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj75 = defaultedMap72.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj77 = defaultedMap72.get((java.lang.Object) '4');
        boolean b79 = defaultedMap72.containsKey((java.lang.Object) (byte) 0);
        boolean b80 = defaultedMap64.equals((java.lang.Object) defaultedMap72);
        boolean b81 = defaultedMap72.isEmpty();
        collections.Predicate predicate82 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate83 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map84 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap72, predicate82, predicate83);
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap51, predicate62, predicate82);
        java.util.Map map86 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate41, predicate62);
        collections.map.DefaultedMap defaultedMap87 = new collections.map.DefaultedMap((java.lang.Object) map86);
        java.lang.String str88 = defaultedMap87.toString();
        java.util.Set set89 = defaultedMap87.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (short) 1 + "'", obj48.equals((short) 1));
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (short) 1 + "'", obj56.equals((short) 1));
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNotNull(predicate62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + obj69 + "' != '" + (short) 1 + "'", obj69.equals((short) 1));
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short) 1 + "'", obj77.equals((short) 1));
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertNotNull(predicate82);
        org.junit.Assert.assertNotNull(predicate83);
        org.junit.Assert.assertNotNull(map84);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertNotNull(map86);
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "{}" + "'", str88.equals("{}"));
        org.junit.Assert.assertNotNull(set89);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        java.lang.Object obj20 = defaultedMap12.get((java.lang.Object) '4');
        defaultedMap12.clear();
        int i22 = defaultedMap12.size();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue(i22 == 0);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        java.util.Map map25 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap13, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        int i33 = defaultedMap27.size();
        java.util.Set set34 = defaultedMap27.keySet();
        java.lang.Object obj36 = defaultedMap27.get((java.lang.Object) 10.0d);
        java.util.Collection collection37 = defaultedMap27.values();
        java.util.Set set38 = defaultedMap27.keySet();
        java.lang.Object obj39 = defaultedMap13.get((java.lang.Object) defaultedMap27);
        int i40 = defaultedMap27.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertTrue(i33 == 1);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(i40 == 1);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        collections.Predicate predicate20 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap30.isEmpty();
        collections.Predicate predicate40 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate41 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate40, predicate41);
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate20, predicate40);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        boolean b52 = defaultedMap46.isEmpty();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b61 = defaultedMap54.containsKey((java.lang.Object) (byte) 0);
        boolean b62 = defaultedMap46.equals((java.lang.Object) defaultedMap54);
        boolean b63 = defaultedMap54.isEmpty();
        collections.Predicate predicate64 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate65 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map66 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap54, predicate64, predicate65);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj71 = defaultedMap68.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj73 = defaultedMap68.get((java.lang.Object) '4');
        boolean b74 = defaultedMap68.isEmpty();
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj79 = defaultedMap76.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj81 = defaultedMap76.get((java.lang.Object) '4');
        boolean b83 = defaultedMap76.containsKey((java.lang.Object) (byte) 0);
        boolean b84 = defaultedMap68.equals((java.lang.Object) defaultedMap76);
        boolean b85 = defaultedMap76.isEmpty();
        collections.Predicate predicate86 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate87 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map88 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap76, predicate86, predicate87);
        java.util.Map map89 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate64, predicate87);
        collections.map.DefaultedMap defaultedMap90 = new collections.map.DefaultedMap((java.lang.Object) map89);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(predicate40);
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNotNull(predicate64);
        org.junit.Assert.assertNotNull(predicate65);
        org.junit.Assert.assertNotNull(map66);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (short) 1 + "'", obj73.equals((short) 1));
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (short) 1 + "'", obj81.equals((short) 1));
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertNotNull(predicate86);
        org.junit.Assert.assertNotNull(predicate87);
        org.junit.Assert.assertNotNull(map88);
        org.junit.Assert.assertNotNull(map89);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        collections.Predicate predicate20 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap30.isEmpty();
        collections.Predicate predicate40 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate41 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate40, predicate41);
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate20, predicate40);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        boolean b52 = defaultedMap46.isEmpty();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b61 = defaultedMap54.containsKey((java.lang.Object) (byte) 0);
        boolean b62 = defaultedMap46.equals((java.lang.Object) defaultedMap54);
        boolean b63 = defaultedMap54.isEmpty();
        boolean b64 = defaultedMap9.containsValue((java.lang.Object) defaultedMap54);
        java.lang.String str65 = defaultedMap9.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(predicate40);
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "{}" + "'", str65.equals("{}"));
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) 0.0d);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        java.util.Map map25 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap13, (java.lang.Object) 1);
        boolean b26 = defaultedMap13.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertTrue(b26 == true);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        int i24 = defaultedMap13.size();
        collections.Transformer transformer25 = null;
        try {
            java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap13, transformer25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertTrue(i24 == 0);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b27 = defaultedMap21.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap21.equals((java.lang.Object) defaultedMap29);
        java.util.Collection collection38 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        defaultedMap9.putAll((java.util.Map) defaultedMap39);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj47 = defaultedMap42.get((java.lang.Object) '4');
        boolean b48 = defaultedMap42.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b57 = defaultedMap50.containsKey((java.lang.Object) (byte) 0);
        boolean b58 = defaultedMap42.equals((java.lang.Object) defaultedMap50);
        java.util.Collection collection59 = defaultedMap50.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap50);
        boolean b61 = defaultedMap60.isEmpty();
        defaultedMap39.putAll((java.util.Map) defaultedMap60);
        boolean b63 = defaultedMap39.isEmpty();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj70 = defaultedMap65.get((java.lang.Object) '4');
        int i71 = defaultedMap65.size();
        java.lang.Object obj73 = defaultedMap65.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj78 = defaultedMap75.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj80 = defaultedMap75.get((java.lang.Object) '4');
        boolean b82 = defaultedMap75.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set83 = defaultedMap75.entrySet();
        java.lang.Object obj85 = defaultedMap75.get((java.lang.Object) 0.0d);
        defaultedMap65.putAll((java.util.Map) defaultedMap75);
        java.lang.Object obj88 = defaultedMap65.remove((java.lang.Object) (short) 100);
        java.util.Set set89 = defaultedMap65.keySet();
        boolean b90 = defaultedMap65.isEmpty();
        boolean b91 = defaultedMap39.containsKey((java.lang.Object) b90);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertTrue(i71 == 1);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + obj80 + "' != '" + (short) 1 + "'", obj80.equals((short) 1));
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNotNull(set83);
        org.junit.Assert.assertTrue("'" + obj85 + "' != '" + (short) 1 + "'", obj85.equals((short) 1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(set89);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(b91 == false);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        collections.Predicate predicate19 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate20 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map21 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate19, predicate20);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b29 = defaultedMap23.isEmpty();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap23.equals((java.lang.Object) defaultedMap31);
        boolean b40 = defaultedMap9.containsValue((java.lang.Object) b39);
        boolean b42 = defaultedMap9.containsValue((java.lang.Object) (byte) 10);
        java.util.Collection collection43 = defaultedMap9.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate19);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNotNull(map21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNotNull(collection43);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj15 = defaultedMap10.get((java.lang.Object) '4');
        boolean b16 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj23 = defaultedMap18.get((java.lang.Object) '4');
        boolean b25 = defaultedMap18.containsKey((java.lang.Object) (byte) 0);
        boolean b26 = defaultedMap10.equals((java.lang.Object) defaultedMap18);
        boolean b27 = defaultedMap18.isEmpty();
        collections.Predicate predicate28 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate29 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map30 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate28, predicate29);
        boolean b31 = defaultedMap1.containsValue((java.lang.Object) predicate28);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        java.util.Collection collection39 = defaultedMap33.values();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Object obj41 = defaultedMap33.get(obj40);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap48.get((java.lang.Object) '4');
        int i54 = defaultedMap48.size();
        defaultedMap43.putAll((java.util.Map) defaultedMap48);
        boolean b56 = defaultedMap33.containsKey((java.lang.Object) defaultedMap48);
        defaultedMap1.putAll((java.util.Map) defaultedMap48);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(predicate28);
        org.junit.Assert.assertNotNull(predicate29);
        org.junit.Assert.assertNotNull(map30);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertNotNull(collection39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (short) 1 + "'", obj41.equals((short) 1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertTrue(i54 == 1);
        org.junit.Assert.assertTrue(b56 == false);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        collections.Predicate predicate19 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate20 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map21 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate19, predicate20);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b29 = defaultedMap23.isEmpty();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap23.equals((java.lang.Object) defaultedMap31);
        boolean b40 = defaultedMap9.containsValue((java.lang.Object) b39);
        boolean b42 = defaultedMap9.containsValue((java.lang.Object) (byte) 10);
        java.util.Set set43 = defaultedMap9.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate19);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNotNull(map21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNotNull(set43);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set2 = defaultedMap1.entrySet();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj10 = defaultedMap5.get((java.lang.Object) '4');
        java.util.Collection collection11 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b21 = defaultedMap14.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap14.entrySet();
        java.lang.Object obj23 = defaultedMap1.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap14);
        java.lang.String str24 = defaultedMap14.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "{1=a}" + "'", str24.equals("{1=a}"));
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.String str23 = defaultedMap1.toString();
        java.util.Collection collection24 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        int i32 = defaultedMap26.size();
        java.lang.Object obj34 = defaultedMap26.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj41 = defaultedMap36.get((java.lang.Object) '4');
        boolean b43 = defaultedMap36.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap36.entrySet();
        java.lang.Object obj46 = defaultedMap36.get((java.lang.Object) 0.0d);
        defaultedMap26.putAll((java.util.Map) defaultedMap36);
        java.lang.Object obj49 = defaultedMap26.remove((java.lang.Object) (short) 100);
        java.util.Set set50 = defaultedMap26.keySet();
        boolean b51 = defaultedMap26.isEmpty();
        java.util.Map map52 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) b51);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        java.util.Collection collection60 = defaultedMap54.values();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Object obj62 = defaultedMap54.get(obj61);
        collections.PredicateUtils predicateUtils63 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils63);
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj69 = defaultedMap66.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj71 = defaultedMap66.get((java.lang.Object) '4');
        boolean b72 = defaultedMap66.isEmpty();
        defaultedMap66.clear();
        java.lang.Object obj74 = defaultedMap64.remove((java.lang.Object) defaultedMap66);
        boolean b75 = defaultedMap66.isEmpty();
        java.lang.Object obj76 = defaultedMap54.get((java.lang.Object) defaultedMap66);
        java.util.Map map78 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap66, (java.lang.Object) 1);
        defaultedMap1.putAll((java.util.Map) defaultedMap66);
        int i80 = defaultedMap66.size();
        java.util.Set set81 = defaultedMap66.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "{1=a}" + "'", str23.equals("{1=a}"));
        org.junit.Assert.assertNotNull(collection24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(i32 == 1);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (short) 1 + "'", obj41.equals((short) 1));
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(set50);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(map52);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertNotNull(collection60);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + obj71 + "' != '" + (short) 1 + "'", obj71.equals((short) 1));
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue("'" + obj76 + "' != '" + (short) 1 + "'", obj76.equals((short) 1));
        org.junit.Assert.assertNotNull(map78);
        org.junit.Assert.assertTrue(i80 == 0);
        org.junit.Assert.assertNotNull(set81);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj15 = defaultedMap10.get((java.lang.Object) '4');
        boolean b16 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj23 = defaultedMap18.get((java.lang.Object) '4');
        boolean b25 = defaultedMap18.containsKey((java.lang.Object) (byte) 0);
        boolean b26 = defaultedMap10.equals((java.lang.Object) defaultedMap18);
        boolean b27 = defaultedMap18.isEmpty();
        collections.Predicate predicate28 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate29 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map30 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate28, predicate29);
        boolean b31 = defaultedMap1.containsValue((java.lang.Object) predicate28);
        java.lang.String str32 = defaultedMap1.toString();
        int i33 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(predicate28);
        org.junit.Assert.assertNotNull(predicate29);
        org.junit.Assert.assertNotNull(map30);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "{}" + "'", str32.equals("{}"));
        org.junit.Assert.assertTrue(i33 == 0);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b40 = defaultedMap33.containsKey((java.lang.Object) (byte) 0);
        boolean b41 = defaultedMap25.equals((java.lang.Object) defaultedMap33);
        java.util.Collection collection42 = defaultedMap33.values();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj49 = defaultedMap44.get((java.lang.Object) '4');
        java.util.Collection collection50 = defaultedMap44.values();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Object obj52 = defaultedMap44.get(obj51);
        java.util.Map map53 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap33, obj51);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) map53);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b63 = defaultedMap56.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set64 = defaultedMap56.entrySet();
        java.util.Map map66 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap56, (java.lang.Object) (byte) -1);
        java.lang.Object obj67 = null;
        java.lang.Object obj68 = defaultedMap56.get(obj67);
        defaultedMap54.putAll((java.util.Map) defaultedMap56);
        defaultedMap56.clear();
        java.lang.Object obj71 = defaultedMap13.get((java.lang.Object) defaultedMap56);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNotNull(collection50);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertNotNull(map53);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNotNull(set64);
        org.junit.Assert.assertNotNull(map66);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (short) 1 + "'", obj68.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj71 + "' != '" + (short) 1 + "'", obj71.equals((short) 1));
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.lang.String str25 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "{1=a}" + "'", str25.equals("{1=a}"));
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.util.Collection collection11 = defaultedMap1.values();
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) 10);
        java.lang.Object obj15 = defaultedMap1.get((java.lang.Object) defaultedMap14);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.util.Set set25 = defaultedMap1.keySet();
        java.util.Set set26 = defaultedMap1.entrySet();
        defaultedMap1.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNotNull(set26);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        int i37 = defaultedMap31.size();
        defaultedMap26.putAll((java.util.Map) defaultedMap31);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set41 = defaultedMap40.entrySet();
        java.util.Set set42 = defaultedMap40.entrySet();
        java.lang.Object obj44 = defaultedMap31.put((java.lang.Object) set42, (java.lang.Object) (short) 1);
        java.util.Collection collection45 = defaultedMap31.values();
        java.lang.String str46 = defaultedMap31.toString();
        boolean b47 = defaultedMap24.containsKey((java.lang.Object) defaultedMap31);
        int i48 = defaultedMap24.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(i37 == 1);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "{[]=1, 1=a}" + "'", str46.equals("{[]=1, 1=a}"));
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(i48 == 0);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        java.util.Set set8 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj17 = defaultedMap12.get((java.lang.Object) '4');
        boolean b18 = defaultedMap12.isEmpty();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        boolean b27 = defaultedMap20.containsKey((java.lang.Object) (byte) 0);
        boolean b28 = defaultedMap12.equals((java.lang.Object) defaultedMap20);
        boolean b29 = defaultedMap20.isEmpty();
        java.lang.Object obj30 = defaultedMap10.get((java.lang.Object) b29);
        boolean b31 = defaultedMap1.containsKey((java.lang.Object) defaultedMap10);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short) 1 + "'", obj17.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.String str23 = defaultedMap1.toString();
        java.util.Collection collection24 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) collection24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        boolean b33 = defaultedMap27.isEmpty();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        boolean b42 = defaultedMap35.containsKey((java.lang.Object) (byte) 0);
        boolean b43 = defaultedMap27.equals((java.lang.Object) defaultedMap35);
        boolean b44 = defaultedMap35.isEmpty();
        defaultedMap35.clear();
        collections.Predicate predicate46 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap48.get((java.lang.Object) '4');
        boolean b54 = defaultedMap48.isEmpty();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b63 = defaultedMap56.containsKey((java.lang.Object) (byte) 0);
        boolean b64 = defaultedMap48.equals((java.lang.Object) defaultedMap56);
        boolean b65 = defaultedMap56.isEmpty();
        collections.Predicate predicate66 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate67 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map68 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap56, predicate66, predicate67);
        java.util.Map map69 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap35, predicate46, predicate66);
        defaultedMap25.putAll((java.util.Map) defaultedMap35);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "{1=a}" + "'", str23.equals("{1=a}"));
        org.junit.Assert.assertNotNull(collection24);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(predicate46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertNotNull(predicate66);
        org.junit.Assert.assertNotNull(predicate67);
        org.junit.Assert.assertNotNull(map68);
        org.junit.Assert.assertNotNull(map69);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        java.util.Collection collection19 = defaultedMap9.values();
        java.lang.String str20 = defaultedMap9.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "{1=a}" + "'", str20.equals("{1=a}"));
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        collections.PredicateUtils predicateUtils0 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        defaultedMap3.clear();
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) defaultedMap3);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b21 = defaultedMap14.containsKey((java.lang.Object) (byte) 0);
        java.lang.String str22 = defaultedMap14.toString();
        java.lang.Object obj23 = defaultedMap12.get((java.lang.Object) str22);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "{1=a}" + "'", str22.equals("{1=a}"));
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.util.Map map11 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) (byte) -1);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap1.get(obj12);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj20 = defaultedMap15.get((java.lang.Object) '4');
        int i21 = defaultedMap15.size();
        java.lang.Object obj23 = defaultedMap15.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b32 = defaultedMap25.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set33 = defaultedMap25.entrySet();
        java.lang.Object obj35 = defaultedMap25.get((java.lang.Object) 0.0d);
        defaultedMap15.putAll((java.util.Map) defaultedMap25);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        int i44 = defaultedMap38.size();
        java.lang.Object obj46 = defaultedMap38.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap48.get((java.lang.Object) '4');
        boolean b55 = defaultedMap48.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set56 = defaultedMap48.entrySet();
        java.lang.Object obj58 = defaultedMap48.get((java.lang.Object) 0.0d);
        defaultedMap38.putAll((java.util.Map) defaultedMap48);
        collections.Predicate predicate60 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate61 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map62 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap48, predicate60, predicate61);
        java.lang.Object obj63 = defaultedMap15.get((java.lang.Object) map62);
        collections.PredicateUtils predicateUtils64 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils64);
        boolean b66 = defaultedMap15.containsValue((java.lang.Object) defaultedMap65);
        defaultedMap1.putAll((java.util.Map) defaultedMap65);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.Factory factory69 = null;
        try {
            java.util.Map map70 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + (short) 1 + "'", obj13.equals((short) 1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 1 + "'", obj20.equals((short) 1));
        org.junit.Assert.assertTrue(i21 == 1);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertTrue(i44 == 1);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (short) 1 + "'", obj58.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate60);
        org.junit.Assert.assertNotNull(predicate61);
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertTrue(b66 == false);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set2 = defaultedMap1.entrySet();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj10 = defaultedMap5.get((java.lang.Object) '4');
        java.util.Collection collection11 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b21 = defaultedMap14.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap14.entrySet();
        java.lang.Object obj23 = defaultedMap1.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap14);
        java.util.Set set24 = defaultedMap12.entrySet();
        boolean b25 = defaultedMap12.isEmpty();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertTrue(b25 == true);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b28 = defaultedMap21.containsKey((java.lang.Object) (byte) 0);
        java.lang.String str29 = defaultedMap21.toString();
        java.lang.Object obj30 = defaultedMap19.get((java.lang.Object) str29);
        collections.Transformer transformer31 = null;
        try {
            java.util.Map map32 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap19, transformer31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "{1=a}" + "'", str29.equals("{1=a}"));
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set2 = defaultedMap1.entrySet();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj10 = defaultedMap5.get((java.lang.Object) '4');
        java.util.Collection collection11 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b21 = defaultedMap14.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap14.entrySet();
        java.lang.Object obj23 = defaultedMap1.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap14);
        java.util.Set set24 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        boolean b32 = defaultedMap26.isEmpty();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        boolean b42 = defaultedMap26.equals((java.lang.Object) defaultedMap34);
        boolean b43 = defaultedMap26.isEmpty();
        boolean b44 = defaultedMap1.containsValue((java.lang.Object) defaultedMap26);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(b44 == true);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.util.Collection collection8 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj15 = defaultedMap10.get((java.lang.Object) '4');
        int i16 = defaultedMap10.size();
        java.lang.Object obj18 = defaultedMap10.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        boolean b27 = defaultedMap20.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set28 = defaultedMap20.entrySet();
        java.lang.Object obj30 = defaultedMap20.get((java.lang.Object) 0.0d);
        defaultedMap10.putAll((java.util.Map) defaultedMap20);
        java.lang.String str32 = defaultedMap10.toString();
        java.util.Collection collection33 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        int i41 = defaultedMap35.size();
        java.lang.Object obj43 = defaultedMap35.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        boolean b52 = defaultedMap45.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set53 = defaultedMap45.entrySet();
        java.lang.Object obj55 = defaultedMap45.get((java.lang.Object) 0.0d);
        defaultedMap35.putAll((java.util.Map) defaultedMap45);
        java.lang.Object obj58 = defaultedMap35.remove((java.lang.Object) (short) 100);
        java.util.Set set59 = defaultedMap35.keySet();
        boolean b60 = defaultedMap35.isEmpty();
        java.util.Map map61 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap10, (java.lang.Object) b60);
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj66 = defaultedMap63.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj68 = defaultedMap63.get((java.lang.Object) '4');
        java.util.Collection collection69 = defaultedMap63.values();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Object obj71 = defaultedMap63.get(obj70);
        collections.PredicateUtils predicateUtils72 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils72);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj78 = defaultedMap75.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj80 = defaultedMap75.get((java.lang.Object) '4');
        boolean b81 = defaultedMap75.isEmpty();
        defaultedMap75.clear();
        java.lang.Object obj83 = defaultedMap73.remove((java.lang.Object) defaultedMap75);
        boolean b84 = defaultedMap75.isEmpty();
        java.lang.Object obj85 = defaultedMap63.get((java.lang.Object) defaultedMap75);
        java.util.Map map87 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap75, (java.lang.Object) 1);
        defaultedMap10.putAll((java.util.Map) defaultedMap75);
        int i89 = defaultedMap75.size();
        boolean b90 = defaultedMap1.containsKey((java.lang.Object) i89);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
        org.junit.Assert.assertTrue(i16 == 1);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "{1=a}" + "'", str32.equals("{1=a}"));
        org.junit.Assert.assertNotNull(collection33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(i41 == 1);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(set59);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNotNull(map61);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (short) 1 + "'", obj68.equals((short) 1));
        org.junit.Assert.assertNotNull(collection69);
        org.junit.Assert.assertTrue("'" + obj71 + "' != '" + (short) 1 + "'", obj71.equals((short) 1));
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + obj80 + "' != '" + (short) 1 + "'", obj80.equals((short) 1));
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue("'" + obj85 + "' != '" + (short) 1 + "'", obj85.equals((short) 1));
        org.junit.Assert.assertNotNull(map87);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(b90 == false);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        collections.Predicate predicate20 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap30.isEmpty();
        collections.Predicate predicate40 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate41 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate40, predicate41);
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate20, predicate40);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        boolean b52 = defaultedMap46.isEmpty();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b61 = defaultedMap54.containsKey((java.lang.Object) (byte) 0);
        boolean b62 = defaultedMap46.equals((java.lang.Object) defaultedMap54);
        boolean b63 = defaultedMap54.isEmpty();
        boolean b64 = defaultedMap9.containsValue((java.lang.Object) defaultedMap54);
        java.util.Set set65 = defaultedMap9.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(predicate40);
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNotNull(set65);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = defaultedMap13.get(obj20);
        collections.PredicateUtils predicateUtils22 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) defaultedMap25);
        boolean b34 = defaultedMap25.isEmpty();
        java.lang.Object obj35 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        boolean b36 = defaultedMap1.containsValue((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap13);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        int i32 = defaultedMap26.size();
        java.lang.Object obj34 = defaultedMap26.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj41 = defaultedMap36.get((java.lang.Object) '4');
        int i42 = defaultedMap36.size();
        java.lang.Object obj44 = defaultedMap36.remove((java.lang.Object) 10.0f);
        java.lang.Object obj45 = defaultedMap26.remove((java.lang.Object) defaultedMap36);
        int i46 = defaultedMap26.size();
        java.lang.String str47 = defaultedMap26.toString();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj52 = defaultedMap49.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj54 = defaultedMap49.get((java.lang.Object) '4');
        int i55 = defaultedMap49.size();
        java.lang.Object obj57 = defaultedMap49.remove((java.lang.Object) 10.0f);
        java.lang.Object obj58 = defaultedMap1.put((java.lang.Object) defaultedMap26, obj57);
        boolean b59 = defaultedMap26.isEmpty();
        defaultedMap26.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(i32 == 1);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (short) 1 + "'", obj41.equals((short) 1));
        org.junit.Assert.assertTrue(i42 == 1);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue(i46 == 1);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "{1=a}" + "'", str47.equals("{1=a}"));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (short) 1 + "'", obj54.equals((short) 1));
        org.junit.Assert.assertTrue(i55 == 1);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b59 == false);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj26 = defaultedMap21.get((java.lang.Object) '4');
        boolean b27 = defaultedMap21.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap21.equals((java.lang.Object) defaultedMap29);
        java.util.Collection collection38 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        defaultedMap9.putAll((java.util.Map) defaultedMap39);
        int i41 = defaultedMap39.size();
        boolean b42 = defaultedMap39.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short) 1 + "'", obj26.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertTrue(b42 == true);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Object obj9 = defaultedMap1.get(obj8);
        collections.PredicateUtils predicateUtils10 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b19 = defaultedMap13.isEmpty();
        defaultedMap13.clear();
        java.lang.Object obj21 = defaultedMap11.remove((java.lang.Object) defaultedMap13);
        boolean b22 = defaultedMap13.isEmpty();
        java.lang.Object obj23 = defaultedMap1.get((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        boolean b40 = defaultedMap33.containsKey((java.lang.Object) (byte) 0);
        boolean b41 = defaultedMap25.equals((java.lang.Object) defaultedMap33);
        java.util.Collection collection42 = defaultedMap33.values();
        boolean b43 = defaultedMap13.equals((java.lang.Object) defaultedMap33);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        int i51 = defaultedMap45.size();
        java.util.Set set52 = defaultedMap45.keySet();
        java.lang.Object obj54 = defaultedMap45.get((java.lang.Object) 10.0d);
        java.util.Collection collection55 = defaultedMap45.values();
        java.util.Set set56 = defaultedMap45.keySet();
        collections.PredicateUtils predicateUtils57 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils57);
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj63 = defaultedMap60.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj65 = defaultedMap60.get((java.lang.Object) '4');
        boolean b66 = defaultedMap60.isEmpty();
        defaultedMap60.clear();
        java.lang.Object obj68 = defaultedMap58.remove((java.lang.Object) defaultedMap60);
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj73 = defaultedMap70.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj75 = defaultedMap70.get((java.lang.Object) '4');
        int i76 = defaultedMap70.size();
        java.lang.Object obj78 = defaultedMap70.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj83 = defaultedMap80.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj85 = defaultedMap80.get((java.lang.Object) '4');
        boolean b87 = defaultedMap80.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set88 = defaultedMap80.entrySet();
        java.lang.Object obj90 = defaultedMap80.get((java.lang.Object) 0.0d);
        defaultedMap70.putAll((java.util.Map) defaultedMap80);
        java.lang.String str92 = defaultedMap70.toString();
        java.lang.Object obj93 = defaultedMap58.get((java.lang.Object) str92);
        java.util.Map map94 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap45, (java.lang.Object) defaultedMap58);
        boolean b95 = defaultedMap13.containsValue((java.lang.Object) defaultedMap58);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (short) 1 + "'", obj9.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(i51 == 1);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (short) 1 + "'", obj54.equals((short) 1));
        org.junit.Assert.assertNotNull(collection55);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + (short) 1 + "'", obj75.equals((short) 1));
        org.junit.Assert.assertTrue(i76 == 1);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + obj85 + "' != '" + (short) 1 + "'", obj85.equals((short) 1));
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertNotNull(set88);
        org.junit.Assert.assertTrue("'" + obj90 + "' != '" + (short) 1 + "'", obj90.equals((short) 1));
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "{1=a}" + "'", str92.equals("{1=a}"));
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(map94);
        org.junit.Assert.assertTrue(b95 == false);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap6.get((java.lang.Object) '4');
        int i12 = defaultedMap6.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set16 = defaultedMap15.entrySet();
        java.util.Set set17 = defaultedMap15.entrySet();
        java.lang.Object obj19 = defaultedMap6.put((java.lang.Object) set17, (java.lang.Object) (short) 1);
        java.util.Collection collection20 = defaultedMap6.values();
        java.lang.String str21 = defaultedMap6.toString();
        boolean b22 = defaultedMap6.isEmpty();
        java.lang.String str23 = defaultedMap6.toString();
        java.util.Collection collection24 = defaultedMap6.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertTrue(i12 == 1);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(collection20);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "{[]=1, 1=a}" + "'", str21.equals("{[]=1, 1=a}"));
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "{[]=1, 1=a}" + "'", str23.equals("{[]=1, 1=a}"));
        org.junit.Assert.assertNotNull(collection24);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap6.get((java.lang.Object) '4');
        int i12 = defaultedMap6.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set16 = defaultedMap15.entrySet();
        java.util.Set set17 = defaultedMap15.entrySet();
        java.lang.Object obj19 = defaultedMap6.put((java.lang.Object) set17, (java.lang.Object) (short) 1);
        boolean b20 = defaultedMap6.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertTrue(i12 == 1);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b20 == false);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.util.Set set25 = defaultedMap1.keySet();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj34 = defaultedMap29.get((java.lang.Object) '4');
        boolean b36 = defaultedMap29.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set37 = defaultedMap29.entrySet();
        java.lang.Object obj39 = defaultedMap29.get((java.lang.Object) 0.0d);
        java.lang.Object obj40 = defaultedMap1.get((java.lang.Object) 0.0d);
        java.util.Collection collection41 = defaultedMap1.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short) 1 + "'", obj34.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertNotNull(collection41);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = defaultedMap13.get(obj20);
        collections.PredicateUtils predicateUtils22 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) defaultedMap25);
        boolean b34 = defaultedMap25.isEmpty();
        java.lang.Object obj35 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        boolean b36 = defaultedMap1.containsValue((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        java.util.Collection collection44 = defaultedMap38.values();
        java.util.Collection collection45 = defaultedMap38.values();
        java.util.Map map46 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap13, (java.lang.Object) defaultedMap38);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertNotNull(map46);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set2 = defaultedMap1.entrySet();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj10 = defaultedMap5.get((java.lang.Object) '4');
        java.util.Collection collection11 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b21 = defaultedMap14.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap14.entrySet();
        java.lang.Object obj23 = defaultedMap1.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap14);
        java.util.Set set24 = defaultedMap12.entrySet();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        int i32 = defaultedMap26.size();
        java.util.Set set33 = defaultedMap26.keySet();
        java.lang.Object obj35 = defaultedMap26.get((java.lang.Object) 10.0d);
        java.lang.Object obj38 = defaultedMap26.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        int i39 = defaultedMap26.size();
        boolean b40 = defaultedMap12.containsValue((java.lang.Object) i39);
        int i41 = defaultedMap12.size();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(i32 == 1);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(i41 == 0);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        collections.Predicate predicate19 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate20 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map21 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate19, predicate20);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b29 = defaultedMap23.isEmpty();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap23.equals((java.lang.Object) defaultedMap31);
        boolean b40 = defaultedMap9.containsValue((java.lang.Object) b39);
        java.lang.Object obj42 = defaultedMap9.get((java.lang.Object) 100.0f);
        java.util.Set set43 = defaultedMap9.keySet();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        int i51 = defaultedMap45.size();
        java.lang.Object obj53 = defaultedMap45.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj58 = defaultedMap55.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj60 = defaultedMap55.get((java.lang.Object) '4');
        boolean b62 = defaultedMap55.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set63 = defaultedMap55.entrySet();
        java.lang.Object obj65 = defaultedMap55.get((java.lang.Object) 0.0d);
        defaultedMap45.putAll((java.util.Map) defaultedMap55);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj71 = defaultedMap68.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj73 = defaultedMap68.get((java.lang.Object) '4');
        int i74 = defaultedMap68.size();
        java.lang.Object obj76 = defaultedMap68.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj81 = defaultedMap78.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj83 = defaultedMap78.get((java.lang.Object) '4');
        boolean b85 = defaultedMap78.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set86 = defaultedMap78.entrySet();
        java.lang.Object obj88 = defaultedMap78.get((java.lang.Object) 0.0d);
        defaultedMap68.putAll((java.util.Map) defaultedMap78);
        collections.Predicate predicate90 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate91 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map92 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap78, predicate90, predicate91);
        java.lang.Object obj93 = defaultedMap45.get((java.lang.Object) map92);
        collections.map.DefaultedMap defaultedMap94 = new collections.map.DefaultedMap(obj93);
        boolean b95 = defaultedMap9.equals((java.lang.Object) defaultedMap94);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate19);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNotNull(map21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (short) 1 + "'", obj42.equals((short) 1));
        org.junit.Assert.assertNotNull(set43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(i51 == 1);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (short) 1 + "'", obj73.equals((short) 1));
        org.junit.Assert.assertTrue(i74 == 1);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + obj83 + "' != '" + (short) 1 + "'", obj83.equals((short) 1));
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertNotNull(set86);
        org.junit.Assert.assertTrue("'" + obj88 + "' != '" + (short) 1 + "'", obj88.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate90);
        org.junit.Assert.assertNotNull(predicate91);
        org.junit.Assert.assertNotNull(map92);
        org.junit.Assert.assertTrue("'" + obj93 + "' != '" + (short) 1 + "'", obj93.equals((short) 1));
        org.junit.Assert.assertTrue(b95 == false);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b19 = defaultedMap9.containsKey((java.lang.Object) 10);
        boolean b21 = defaultedMap9.equals((java.lang.Object) '#');
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b29 = defaultedMap23.isEmpty();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap31.get((java.lang.Object) '4');
        boolean b38 = defaultedMap31.containsKey((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap23.equals((java.lang.Object) defaultedMap31);
        boolean b41 = defaultedMap31.containsKey((java.lang.Object) 10);
        java.lang.Object obj43 = defaultedMap31.get((java.lang.Object) (byte) 1);
        boolean b44 = defaultedMap9.containsKey(obj43);
        java.util.Set set45 = defaultedMap9.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short) 1 + "'", obj36.equals((short) 1));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertNotNull(set45);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        defaultedMap1.clear();
        java.util.Set set9 = defaultedMap1.keySet();
        java.util.Collection collection10 = defaultedMap1.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        collections.Predicate predicate20 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        boolean b28 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj35 = defaultedMap30.get((java.lang.Object) '4');
        boolean b37 = defaultedMap30.containsKey((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap22.equals((java.lang.Object) defaultedMap30);
        boolean b39 = defaultedMap30.isEmpty();
        collections.Predicate predicate40 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate41 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate40, predicate41);
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate20, predicate40);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        boolean b52 = defaultedMap46.isEmpty();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b61 = defaultedMap54.containsKey((java.lang.Object) (byte) 0);
        boolean b62 = defaultedMap46.equals((java.lang.Object) defaultedMap54);
        boolean b63 = defaultedMap54.isEmpty();
        collections.Predicate predicate64 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate65 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map66 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap54, predicate64, predicate65);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj71 = defaultedMap68.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj73 = defaultedMap68.get((java.lang.Object) '4');
        boolean b74 = defaultedMap68.isEmpty();
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj79 = defaultedMap76.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj81 = defaultedMap76.get((java.lang.Object) '4');
        boolean b83 = defaultedMap76.containsKey((java.lang.Object) (byte) 0);
        boolean b84 = defaultedMap68.equals((java.lang.Object) defaultedMap76);
        boolean b85 = defaultedMap76.isEmpty();
        collections.Predicate predicate86 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate87 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map88 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap76, predicate86, predicate87);
        java.util.Map map89 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate64, predicate87);
        collections.map.DefaultedMap defaultedMap90 = new collections.map.DefaultedMap((java.lang.Object) predicate87);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(predicate20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(predicate40);
        org.junit.Assert.assertNotNull(predicate41);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNotNull(predicate64);
        org.junit.Assert.assertNotNull(predicate65);
        org.junit.Assert.assertNotNull(map66);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (short) 1 + "'", obj73.equals((short) 1));
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (short) 1 + "'", obj81.equals((short) 1));
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertNotNull(predicate86);
        org.junit.Assert.assertNotNull(predicate87);
        org.junit.Assert.assertNotNull(map88);
        org.junit.Assert.assertNotNull(map89);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        java.lang.Object obj11 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        boolean b20 = defaultedMap13.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        int i28 = defaultedMap22.size();
        java.util.Set set29 = defaultedMap22.keySet();
        java.lang.Object obj31 = defaultedMap22.get((java.lang.Object) 10.0d);
        java.lang.Object obj32 = defaultedMap1.put((java.lang.Object) defaultedMap13, (java.lang.Object) 10.0d);
        java.util.Set set33 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        int i41 = defaultedMap35.size();
        java.lang.Object obj43 = defaultedMap35.remove((java.lang.Object) 10.0f);
        java.lang.Object obj45 = defaultedMap35.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj50 = defaultedMap47.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj52 = defaultedMap47.get((java.lang.Object) '4');
        boolean b54 = defaultedMap47.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        int i62 = defaultedMap56.size();
        java.util.Set set63 = defaultedMap56.keySet();
        java.lang.Object obj65 = defaultedMap56.get((java.lang.Object) 10.0d);
        java.lang.Object obj66 = defaultedMap35.put((java.lang.Object) defaultedMap47, (java.lang.Object) 10.0d);
        java.util.Set set67 = defaultedMap35.keySet();
        java.lang.Object obj68 = defaultedMap1.remove((java.lang.Object) defaultedMap35);
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj73 = defaultedMap70.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj75 = defaultedMap70.get((java.lang.Object) '4');
        int i76 = defaultedMap70.size();
        boolean b77 = defaultedMap70.isEmpty();
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) b77);
        boolean b79 = defaultedMap35.containsKey((java.lang.Object) b77);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(i41 == 1);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(i62 == 1);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + (short) 1 + "'", obj75.equals((short) 1));
        org.junit.Assert.assertTrue(i76 == 1);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b79 == false);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        java.util.Collection collection26 = defaultedMap20.values();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Object obj28 = defaultedMap20.get(obj27);
        java.util.Map map29 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, obj27);
        int i30 = defaultedMap9.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertNotNull(map29);
        org.junit.Assert.assertTrue(i30 == 1);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj15 = defaultedMap10.get((java.lang.Object) '4');
        int i16 = defaultedMap10.size();
        java.lang.Object obj18 = defaultedMap10.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        boolean b27 = defaultedMap20.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set28 = defaultedMap20.entrySet();
        java.lang.Object obj30 = defaultedMap20.get((java.lang.Object) 0.0d);
        defaultedMap10.putAll((java.util.Map) defaultedMap20);
        java.lang.Object obj33 = defaultedMap10.remove((java.lang.Object) (short) 100);
        java.util.Set set34 = defaultedMap10.keySet();
        java.lang.Object obj36 = defaultedMap10.remove((java.lang.Object) 100.0f);
        int i37 = defaultedMap10.size();
        java.lang.Object obj38 = defaultedMap8.remove((java.lang.Object) defaultedMap10);
        java.util.Set set39 = defaultedMap8.entrySet();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap41.get((java.lang.Object) '4');
        java.util.Set set47 = defaultedMap41.keySet();
        boolean b48 = defaultedMap8.containsValue((java.lang.Object) defaultedMap41);
        int i49 = defaultedMap8.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
        org.junit.Assert.assertTrue(i16 == 1);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue(i37 == 1);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(i49 == 0);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        collections.Predicate predicate8 = collections.PredicateUtils.notNullPredicate();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) predicate8);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(predicate8);
        org.junit.Assert.assertNull(obj9);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj31 = defaultedMap26.get((java.lang.Object) '4');
        boolean b32 = defaultedMap26.isEmpty();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        boolean b42 = defaultedMap26.equals((java.lang.Object) defaultedMap34);
        java.lang.Object obj43 = defaultedMap1.get((java.lang.Object) defaultedMap26);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        boolean b51 = defaultedMap45.isEmpty();
        defaultedMap45.clear();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        boolean b60 = defaultedMap54.isEmpty();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj67 = defaultedMap62.get((java.lang.Object) '4');
        boolean b69 = defaultedMap62.containsKey((java.lang.Object) (byte) 0);
        boolean b70 = defaultedMap54.equals((java.lang.Object) defaultedMap62);
        boolean b71 = defaultedMap62.isEmpty();
        collections.Predicate predicate72 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate73 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map74 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap62, predicate72, predicate73);
        boolean b75 = defaultedMap45.containsValue((java.lang.Object) predicate72);
        java.lang.Object obj76 = defaultedMap1.remove((java.lang.Object) defaultedMap45);
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short) 1 + "'", obj31.equals((short) 1));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (short) 1 + "'", obj67.equals((short) 1));
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNotNull(predicate72);
        org.junit.Assert.assertNotNull(predicate73);
        org.junit.Assert.assertNotNull(map74);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.util.Map map11 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) (byte) -1);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap1.get(obj12);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj20 = defaultedMap15.get((java.lang.Object) '4');
        int i21 = defaultedMap15.size();
        java.lang.Object obj23 = defaultedMap15.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b32 = defaultedMap25.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set33 = defaultedMap25.entrySet();
        java.lang.Object obj35 = defaultedMap25.get((java.lang.Object) 0.0d);
        defaultedMap15.putAll((java.util.Map) defaultedMap25);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        int i44 = defaultedMap38.size();
        java.lang.Object obj46 = defaultedMap38.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap48.get((java.lang.Object) '4');
        boolean b55 = defaultedMap48.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set56 = defaultedMap48.entrySet();
        java.lang.Object obj58 = defaultedMap48.get((java.lang.Object) 0.0d);
        defaultedMap38.putAll((java.util.Map) defaultedMap48);
        collections.Predicate predicate60 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate61 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map62 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap48, predicate60, predicate61);
        java.lang.Object obj63 = defaultedMap15.get((java.lang.Object) map62);
        collections.PredicateUtils predicateUtils64 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils64);
        boolean b66 = defaultedMap15.containsValue((java.lang.Object) defaultedMap65);
        defaultedMap1.putAll((java.util.Map) defaultedMap65);
        collections.Factory factory68 = null;
        try {
            java.util.Map map69 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + (short) 1 + "'", obj13.equals((short) 1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 1 + "'", obj20.equals((short) 1));
        org.junit.Assert.assertTrue(i21 == 1);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertTrue(i44 == 1);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (short) 1 + "'", obj58.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate60);
        org.junit.Assert.assertNotNull(predicate61);
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertTrue(b66 == false);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj15 = defaultedMap10.get((java.lang.Object) '4');
        int i16 = defaultedMap10.size();
        java.lang.Object obj18 = defaultedMap10.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap20.get((java.lang.Object) '4');
        boolean b27 = defaultedMap20.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set28 = defaultedMap20.entrySet();
        java.lang.Object obj30 = defaultedMap20.get((java.lang.Object) 0.0d);
        defaultedMap10.putAll((java.util.Map) defaultedMap20);
        java.lang.Object obj33 = defaultedMap10.remove((java.lang.Object) (short) 100);
        java.util.Set set34 = defaultedMap10.keySet();
        java.lang.Object obj36 = defaultedMap10.remove((java.lang.Object) 100.0f);
        int i37 = defaultedMap10.size();
        java.lang.Object obj38 = defaultedMap8.remove((java.lang.Object) defaultedMap10);
        java.util.Set set39 = defaultedMap8.entrySet();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap41.get((java.lang.Object) '4');
        java.util.Set set47 = defaultedMap41.keySet();
        boolean b48 = defaultedMap8.containsValue((java.lang.Object) defaultedMap41);
        java.lang.String str49 = defaultedMap8.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
        org.junit.Assert.assertTrue(i16 == 1);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short) 1 + "'", obj25.equals((short) 1));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue(i37 == 1);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "{}" + "'", str49.equals("{}"));
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = defaultedMap13.get(obj20);
        collections.PredicateUtils predicateUtils22 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) defaultedMap25);
        boolean b34 = defaultedMap25.isEmpty();
        java.lang.Object obj35 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        boolean b36 = defaultedMap1.containsValue((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        java.util.Collection collection44 = defaultedMap38.values();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Object obj46 = defaultedMap38.get(obj45);
        collections.PredicateUtils predicateUtils47 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils47);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b56 = defaultedMap50.isEmpty();
        defaultedMap50.clear();
        java.lang.Object obj58 = defaultedMap48.remove((java.lang.Object) defaultedMap50);
        boolean b59 = defaultedMap50.isEmpty();
        java.lang.Object obj60 = defaultedMap38.get((java.lang.Object) defaultedMap50);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap50, (java.lang.Object) 1);
        java.lang.Object obj63 = defaultedMap1.get((java.lang.Object) map62);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj70 = defaultedMap65.get((java.lang.Object) '4');
        int i71 = defaultedMap65.size();
        java.lang.Object obj72 = defaultedMap1.get((java.lang.Object) defaultedMap65);
        int i73 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertTrue(i71 == 1);
        org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (short) 1 + "'", obj72.equals((short) 1));
        org.junit.Assert.assertTrue(i73 == 1);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set2 = defaultedMap1.entrySet();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj10 = defaultedMap5.get((java.lang.Object) '4');
        java.util.Collection collection11 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap14.get((java.lang.Object) '4');
        boolean b21 = defaultedMap14.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap14.entrySet();
        java.lang.Object obj23 = defaultedMap1.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap14);
        java.util.Set set24 = defaultedMap12.entrySet();
        java.util.Collection collection25 = defaultedMap12.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short) 1 + "'", obj19.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNotNull(collection25);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = defaultedMap13.get(obj20);
        collections.PredicateUtils predicateUtils22 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) defaultedMap25);
        boolean b34 = defaultedMap25.isEmpty();
        java.lang.Object obj35 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        boolean b36 = defaultedMap1.containsValue((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        java.util.Collection collection44 = defaultedMap38.values();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Object obj46 = defaultedMap38.get(obj45);
        collections.PredicateUtils predicateUtils47 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils47);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b56 = defaultedMap50.isEmpty();
        defaultedMap50.clear();
        java.lang.Object obj58 = defaultedMap48.remove((java.lang.Object) defaultedMap50);
        boolean b59 = defaultedMap50.isEmpty();
        java.lang.Object obj60 = defaultedMap38.get((java.lang.Object) defaultedMap50);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap50, (java.lang.Object) 1);
        java.lang.Object obj63 = defaultedMap1.get((java.lang.Object) map62);
        java.util.Set set64 = defaultedMap1.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertNotNull(set64);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.util.Collection collection11 = defaultedMap1.values();
        java.util.Set set12 = defaultedMap1.keySet();
        java.util.Set set13 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj20 = defaultedMap15.get((java.lang.Object) '4');
        boolean b21 = defaultedMap15.isEmpty();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj28 = defaultedMap23.get((java.lang.Object) '4');
        boolean b30 = defaultedMap23.containsKey((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap15.equals((java.lang.Object) defaultedMap23);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj38 = defaultedMap33.get((java.lang.Object) '4');
        int i39 = defaultedMap33.size();
        java.lang.Object obj41 = defaultedMap33.remove((java.lang.Object) 10.0f);
        java.lang.Object obj43 = defaultedMap33.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        boolean b52 = defaultedMap45.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj59 = defaultedMap54.get((java.lang.Object) '4');
        int i60 = defaultedMap54.size();
        java.util.Set set61 = defaultedMap54.keySet();
        java.lang.Object obj63 = defaultedMap54.get((java.lang.Object) 10.0d);
        java.lang.Object obj64 = defaultedMap33.put((java.lang.Object) defaultedMap45, (java.lang.Object) 10.0d);
        java.util.Set set65 = defaultedMap33.keySet();
        java.lang.Object obj66 = defaultedMap23.get((java.lang.Object) defaultedMap33);
        java.util.Set set67 = defaultedMap23.entrySet();
        java.lang.Object obj68 = defaultedMap1.remove((java.lang.Object) defaultedMap23);
        java.lang.String str69 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNotNull(set12);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 1 + "'", obj20.equals((short) 1));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (short) 1 + "'", obj28.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (short) 1 + "'", obj38.equals((short) 1));
        org.junit.Assert.assertTrue(i39 == 1);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (short) 1 + "'", obj59.equals((short) 1));
        org.junit.Assert.assertTrue(i60 == 1);
        org.junit.Assert.assertNotNull(set61);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (short) 1 + "'", obj66.equals((short) 1));
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "{1=a}" + "'", str69.equals("{1=a}"));
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set2 = defaultedMap1.entrySet();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj15 = defaultedMap10.get((java.lang.Object) '4');
        int i16 = defaultedMap10.size();
        defaultedMap5.putAll((java.util.Map) defaultedMap10);
        int i18 = defaultedMap10.size();
        boolean b19 = defaultedMap1.equals((java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set22 = defaultedMap21.entrySet();
        java.util.Set set23 = defaultedMap21.entrySet();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        java.util.Collection collection31 = defaultedMap25.values();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap25);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap34.entrySet();
        java.lang.Object obj43 = defaultedMap21.put((java.lang.Object) defaultedMap32, (java.lang.Object) defaultedMap34);
        java.util.Set set44 = defaultedMap32.entrySet();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj51 = defaultedMap46.get((java.lang.Object) '4');
        int i52 = defaultedMap46.size();
        java.util.Set set53 = defaultedMap46.keySet();
        java.lang.Object obj55 = defaultedMap46.get((java.lang.Object) 10.0d);
        java.lang.Object obj58 = defaultedMap46.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        int i59 = defaultedMap46.size();
        boolean b60 = defaultedMap32.containsValue((java.lang.Object) i59);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj67 = defaultedMap62.get((java.lang.Object) '4');
        boolean b68 = defaultedMap62.isEmpty();
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj73 = defaultedMap70.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj75 = defaultedMap70.get((java.lang.Object) '4');
        boolean b77 = defaultedMap70.containsKey((java.lang.Object) (byte) 0);
        boolean b78 = defaultedMap62.equals((java.lang.Object) defaultedMap70);
        java.lang.Object obj79 = defaultedMap32.remove((java.lang.Object) defaultedMap62);
        java.lang.Object obj81 = defaultedMap1.put((java.lang.Object) defaultedMap62, (java.lang.Object) (byte) 100);
        java.util.Set set82 = defaultedMap1.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
        org.junit.Assert.assertTrue(i16 == 1);
        org.junit.Assert.assertTrue(i18 == 1);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (short) 1 + "'", obj51.equals((short) 1));
        org.junit.Assert.assertTrue(i52 == 1);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(i59 == 2);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (short) 1 + "'", obj67.equals((short) 1));
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + (short) 1 + "'", obj75.equals((short) 1));
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(set82);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) (short) 100);
        java.util.Set set25 = defaultedMap1.keySet();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) 100.0f);
        int i28 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        int i41 = defaultedMap35.size();
        defaultedMap30.putAll((java.util.Map) defaultedMap35);
        boolean b43 = defaultedMap30.isEmpty();
        java.lang.Object obj44 = defaultedMap1.remove((java.lang.Object) b43);
        java.lang.String str45 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj50 = defaultedMap47.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj52 = defaultedMap47.get((java.lang.Object) '4');
        int i53 = defaultedMap47.size();
        boolean b54 = defaultedMap47.isEmpty();
        java.lang.Object obj55 = defaultedMap1.remove((java.lang.Object) b54);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj60 = defaultedMap57.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj62 = defaultedMap57.get((java.lang.Object) '4');
        java.util.Collection collection63 = defaultedMap57.values();
        java.util.Collection collection64 = defaultedMap57.values();
        java.lang.Object obj65 = defaultedMap1.get((java.lang.Object) defaultedMap57);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(i41 == 1);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "{1=a}" + "'", str45.equals("{1=a}"));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (short) 1 + "'", obj52.equals((short) 1));
        org.junit.Assert.assertTrue(i53 == 1);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertNotNull(collection64);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (short) 1 + "'", obj65.equals((short) 1));
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        boolean b18 = defaultedMap9.isEmpty();
        defaultedMap9.clear();
        defaultedMap9.clear();
        java.util.Set set21 = defaultedMap9.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set21);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        boolean b30 = defaultedMap24.isEmpty();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        boolean b40 = defaultedMap24.equals((java.lang.Object) defaultedMap32);
        java.lang.String str41 = defaultedMap24.toString();
        boolean b43 = defaultedMap24.containsValue((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        boolean b51 = defaultedMap45.isEmpty();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj56 = defaultedMap53.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj58 = defaultedMap53.get((java.lang.Object) '4');
        boolean b60 = defaultedMap53.containsKey((java.lang.Object) (byte) 0);
        boolean b61 = defaultedMap45.equals((java.lang.Object) defaultedMap53);
        boolean b63 = defaultedMap53.containsKey((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj70 = defaultedMap65.get((java.lang.Object) '4');
        boolean b71 = defaultedMap65.isEmpty();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj76 = defaultedMap73.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj78 = defaultedMap73.get((java.lang.Object) '4');
        boolean b80 = defaultedMap73.containsKey((java.lang.Object) (byte) 0);
        boolean b81 = defaultedMap65.equals((java.lang.Object) defaultedMap73);
        boolean b82 = defaultedMap73.isEmpty();
        collections.Predicate predicate83 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate84 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap73, predicate83, predicate84);
        java.lang.Object obj86 = defaultedMap24.put((java.lang.Object) 10, (java.lang.Object) predicate83);
        collections.map.DefaultedMap defaultedMap87 = new collections.map.DefaultedMap((java.lang.Object) predicate83);
        boolean b88 = defaultedMap1.containsValue((java.lang.Object) defaultedMap87);
        java.lang.Object obj89 = null;
        collections.map.DefaultedMap defaultedMap91 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj94 = defaultedMap91.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj96 = defaultedMap91.get((java.lang.Object) '4');
        int i97 = defaultedMap91.size();
        java.lang.Object obj98 = defaultedMap87.put(obj89, (java.lang.Object) defaultedMap91);
        java.util.Set set99 = defaultedMap87.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "{1=a}" + "'", str41.equals("{1=a}"));
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (short) 1 + "'", obj58.equals((short) 1));
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (short) 1 + "'", obj78.equals((short) 1));
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNotNull(predicate83);
        org.junit.Assert.assertNotNull(predicate84);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + obj96 + "' != '" + (short) 1 + "'", obj96.equals((short) 1));
        org.junit.Assert.assertTrue(i97 == 1);
        org.junit.Assert.assertNull(obj98);
        org.junit.Assert.assertNotNull(set99);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 0.0d);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap13.get((java.lang.Object) '4');
        java.util.Collection collection19 = defaultedMap13.values();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = defaultedMap13.get(obj20);
        collections.PredicateUtils predicateUtils22 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj30 = defaultedMap25.get((java.lang.Object) '4');
        boolean b31 = defaultedMap25.isEmpty();
        defaultedMap25.clear();
        java.lang.Object obj33 = defaultedMap23.remove((java.lang.Object) defaultedMap25);
        boolean b34 = defaultedMap25.isEmpty();
        java.lang.Object obj35 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        boolean b36 = defaultedMap1.containsValue((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap38.get((java.lang.Object) '4');
        java.util.Collection collection44 = defaultedMap38.values();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Object obj46 = defaultedMap38.get(obj45);
        collections.PredicateUtils predicateUtils47 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils47);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b56 = defaultedMap50.isEmpty();
        defaultedMap50.clear();
        java.lang.Object obj58 = defaultedMap48.remove((java.lang.Object) defaultedMap50);
        boolean b59 = defaultedMap50.isEmpty();
        java.lang.Object obj60 = defaultedMap38.get((java.lang.Object) defaultedMap50);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap50, (java.lang.Object) 1);
        java.lang.Object obj63 = defaultedMap1.get((java.lang.Object) map62);
        java.lang.Object obj64 = null;
        java.util.Map map65 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, obj64);
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap(obj64);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 1 + "'", obj18.equals((short) 1));
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short) 1 + "'", obj30.equals((short) 1));
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short) 1 + "'", obj35.equals((short) 1));
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (short) 1 + "'", obj43.equals((short) 1));
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short) 1 + "'", obj46.equals((short) 1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (short) 1 + "'", obj63.equals((short) 1));
        org.junit.Assert.assertNotNull(map65);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        int i17 = defaultedMap11.size();
        java.lang.Object obj19 = defaultedMap11.remove((java.lang.Object) 10.0f);
        java.lang.Object obj20 = defaultedMap1.remove((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        int i33 = defaultedMap27.size();
        defaultedMap22.putAll((java.util.Map) defaultedMap27);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set37 = defaultedMap36.entrySet();
        java.util.Set set38 = defaultedMap36.entrySet();
        java.lang.Object obj40 = defaultedMap27.put((java.lang.Object) set38, (java.lang.Object) (short) 1);
        java.util.Collection collection41 = defaultedMap27.values();
        java.lang.String str42 = defaultedMap27.toString();
        boolean b43 = defaultedMap27.isEmpty();
        collections.Predicate predicate44 = collections.PredicateUtils.truePredicate();
        collections.Predicate predicate45 = null;
        java.util.Map map46 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap27, predicate44, predicate45);
        java.lang.Object obj47 = defaultedMap11.get((java.lang.Object) map46);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(i17 == 1);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertTrue(i33 == 1);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(collection41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "{[]=1, 1=a}" + "'", str42.equals("{[]=1, 1=a}"));
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(predicate44);
        org.junit.Assert.assertNotNull(map46);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short) 1 + "'", obj47.equals((short) 1));
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.lang.String str9 = defaultedMap1.toString();
        int i10 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj17 = defaultedMap12.get((java.lang.Object) '4');
        java.util.Collection collection18 = defaultedMap12.values();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Object obj20 = defaultedMap12.get(obj19);
        java.util.Collection collection21 = defaultedMap12.values();
        java.util.Collection collection22 = defaultedMap12.values();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap12);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "{1=a}" + "'", str9.equals("{1=a}"));
        org.junit.Assert.assertTrue(i10 == 1);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short) 1 + "'", obj17.equals((short) 1));
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 1 + "'", obj20.equals((short) 1));
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertNotNull(collection22);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) "");
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 100.0f, (java.lang.Object) '#');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap6.get((java.lang.Object) '4');
        int i12 = defaultedMap6.size();
        java.lang.Object obj14 = defaultedMap6.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj21 = defaultedMap16.get((java.lang.Object) '4');
        int i22 = defaultedMap16.size();
        java.lang.Object obj24 = defaultedMap16.remove((java.lang.Object) 10.0f);
        java.lang.Object obj25 = defaultedMap6.remove((java.lang.Object) defaultedMap16);
        java.lang.Object obj26 = defaultedMap1.get(obj25);
        defaultedMap1.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertTrue(i12 == 1);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertTrue(i22 == 1);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + "" + "'", obj26.equals(""));
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.util.Collection collection18 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap19);
        java.util.Collection collection21 = defaultedMap19.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNotNull(collection21);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.Factory factory23 = null;
        try {
            java.util.Map map24 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        java.util.Collection collection7 = defaultedMap1.values();
        java.util.Collection collection8 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj15 = defaultedMap10.get((java.lang.Object) '4');
        boolean b16 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj23 = defaultedMap18.get((java.lang.Object) '4');
        boolean b25 = defaultedMap18.containsKey((java.lang.Object) (byte) 0);
        boolean b26 = defaultedMap10.equals((java.lang.Object) defaultedMap18);
        boolean b27 = defaultedMap1.equals((java.lang.Object) b26);
        collections.Transformer transformer28 = null;
        try {
            java.util.Map map29 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (short) 1 + "'", obj15.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short) 1 + "'", obj23.equals((short) 1));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b27 == false);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        boolean b30 = defaultedMap24.isEmpty();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        boolean b40 = defaultedMap24.equals((java.lang.Object) defaultedMap32);
        java.lang.String str41 = defaultedMap24.toString();
        boolean b43 = defaultedMap24.containsValue((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj50 = defaultedMap45.get((java.lang.Object) '4');
        boolean b51 = defaultedMap45.isEmpty();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj56 = defaultedMap53.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj58 = defaultedMap53.get((java.lang.Object) '4');
        boolean b60 = defaultedMap53.containsKey((java.lang.Object) (byte) 0);
        boolean b61 = defaultedMap45.equals((java.lang.Object) defaultedMap53);
        boolean b63 = defaultedMap53.containsKey((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj70 = defaultedMap65.get((java.lang.Object) '4');
        boolean b71 = defaultedMap65.isEmpty();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj76 = defaultedMap73.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj78 = defaultedMap73.get((java.lang.Object) '4');
        boolean b80 = defaultedMap73.containsKey((java.lang.Object) (byte) 0);
        boolean b81 = defaultedMap65.equals((java.lang.Object) defaultedMap73);
        boolean b82 = defaultedMap73.isEmpty();
        collections.Predicate predicate83 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate84 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap73, predicate83, predicate84);
        java.lang.Object obj86 = defaultedMap24.put((java.lang.Object) 10, (java.lang.Object) predicate83);
        collections.map.DefaultedMap defaultedMap87 = new collections.map.DefaultedMap((java.lang.Object) predicate83);
        boolean b88 = defaultedMap1.containsValue((java.lang.Object) defaultedMap87);
        java.util.Collection collection89 = defaultedMap87.values();
        boolean b91 = defaultedMap87.containsKey((java.lang.Object) "{1=a}");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "{1=a}" + "'", str41.equals("{1=a}"));
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short) 1 + "'", obj50.equals((short) 1));
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (short) 1 + "'", obj58.equals((short) 1));
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (short) 1 + "'", obj70.equals((short) 1));
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (short) 1 + "'", obj78.equals((short) 1));
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNotNull(predicate83);
        org.junit.Assert.assertNotNull(predicate84);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertNotNull(collection89);
        org.junit.Assert.assertTrue(b91 == false);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap9.get((java.lang.Object) '4');
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap1.equals((java.lang.Object) defaultedMap9);
        java.lang.String str18 = defaultedMap1.toString();
        boolean b20 = defaultedMap1.containsValue((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj27 = defaultedMap22.get((java.lang.Object) '4');
        int i28 = defaultedMap22.size();
        java.lang.Object obj30 = defaultedMap22.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set40 = defaultedMap32.entrySet();
        java.lang.Object obj42 = defaultedMap32.get((java.lang.Object) 0.0d);
        defaultedMap22.putAll((java.util.Map) defaultedMap32);
        java.lang.Object obj45 = defaultedMap22.remove((java.lang.Object) (short) 100);
        java.util.Set set46 = defaultedMap22.keySet();
        java.lang.Object obj48 = defaultedMap22.remove((java.lang.Object) 100.0f);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj55 = defaultedMap50.get((java.lang.Object) '4');
        boolean b57 = defaultedMap50.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set58 = defaultedMap50.entrySet();
        java.lang.Object obj60 = defaultedMap50.get((java.lang.Object) 0.0d);
        java.lang.Object obj61 = defaultedMap22.get((java.lang.Object) 0.0d);
        java.lang.Object obj62 = defaultedMap1.remove((java.lang.Object) defaultedMap22);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj69 = defaultedMap64.get((java.lang.Object) '4');
        java.util.Collection collection70 = defaultedMap64.values();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Object obj72 = defaultedMap64.get(obj71);
        collections.PredicateUtils predicateUtils73 = new collections.PredicateUtils();
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) predicateUtils73);
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj79 = defaultedMap76.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj81 = defaultedMap76.get((java.lang.Object) '4');
        boolean b82 = defaultedMap76.isEmpty();
        defaultedMap76.clear();
        java.lang.Object obj84 = defaultedMap74.remove((java.lang.Object) defaultedMap76);
        boolean b85 = defaultedMap76.isEmpty();
        java.lang.Object obj86 = defaultedMap64.get((java.lang.Object) defaultedMap76);
        int i87 = defaultedMap76.size();
        java.util.Map map88 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap76);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 1 + "'", obj14.equals((short) 1));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{1=a}" + "'", str18.equals("{1=a}"));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short) 1 + "'", obj27.equals((short) 1));
        org.junit.Assert.assertTrue(i28 == 1);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (short) 1 + "'", obj42.equals((short) 1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short) 1 + "'", obj55.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(set58);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (short) 1 + "'", obj60.equals((short) 1));
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + obj69 + "' != '" + (short) 1 + "'", obj69.equals((short) 1));
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (short) 1 + "'", obj72.equals((short) 1));
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (short) 1 + "'", obj81.equals((short) 1));
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertTrue("'" + obj86 + "' != '" + (short) 1 + "'", obj86.equals((short) 1));
        org.junit.Assert.assertTrue(i87 == 0);
        org.junit.Assert.assertNotNull(map88);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.util.Set set8 = defaultedMap1.keySet();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.lang.Object obj13 = defaultedMap1.put((java.lang.Object) (-1.0f), (java.lang.Object) '4');
        boolean b14 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 1 + "'", obj10.equals((short) 1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b14 == false);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 1);
        int i2 = defaultedMap1.size();
        org.junit.Assert.assertTrue(i2 == 0);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        int i17 = defaultedMap11.size();
        java.lang.Object obj19 = defaultedMap11.remove((java.lang.Object) 10.0f);
        java.lang.Object obj20 = defaultedMap1.remove((java.lang.Object) defaultedMap11);
        int i21 = defaultedMap1.size();
        java.lang.String str22 = defaultedMap1.toString();
        boolean b23 = defaultedMap1.isEmpty();
        boolean b24 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(i17 == 1);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue(i21 == 1);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "{1=a}" + "'", str22.equals("{1=a}"));
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b24 == false);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) -1);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj6 = defaultedMap3.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj8 = defaultedMap3.get((java.lang.Object) '4');
        boolean b9 = defaultedMap3.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        boolean b19 = defaultedMap3.equals((java.lang.Object) defaultedMap11);
        boolean b20 = defaultedMap11.isEmpty();
        defaultedMap11.clear();
        collections.Predicate predicate22 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        boolean b30 = defaultedMap24.isEmpty();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj37 = defaultedMap32.get((java.lang.Object) '4');
        boolean b39 = defaultedMap32.containsKey((java.lang.Object) (byte) 0);
        boolean b40 = defaultedMap24.equals((java.lang.Object) defaultedMap32);
        boolean b41 = defaultedMap32.isEmpty();
        collections.Predicate predicate42 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate43 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map44 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap32, predicate42, predicate43);
        java.util.Map map45 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap11, predicate22, predicate42);
        java.util.Collection collection46 = defaultedMap11.values();
        boolean b47 = defaultedMap1.containsKey((java.lang.Object) collection46);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj52 = defaultedMap49.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj54 = defaultedMap49.get((java.lang.Object) '4');
        boolean b55 = defaultedMap49.isEmpty();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj60 = defaultedMap57.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj62 = defaultedMap57.get((java.lang.Object) '4');
        boolean b64 = defaultedMap57.containsKey((java.lang.Object) (byte) 0);
        boolean b65 = defaultedMap49.equals((java.lang.Object) defaultedMap57);
        java.lang.String str66 = defaultedMap57.toString();
        java.util.Set set67 = defaultedMap57.keySet();
        java.lang.Object obj68 = defaultedMap1.remove((java.lang.Object) defaultedMap57);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 1 + "'", obj8.equals((short) 1));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(predicate22);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 1 + "'", obj37.equals((short) 1));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(predicate42);
        org.junit.Assert.assertNotNull(predicate43);
        org.junit.Assert.assertNotNull(map44);
        org.junit.Assert.assertNotNull(map45);
        org.junit.Assert.assertNotNull(collection46);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (short) 1 + "'", obj54.equals((short) 1));
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (short) 1 + "'", obj62.equals((short) 1));
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "{1=a}" + "'", str66.equals("{1=a}"));
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj6 = defaultedMap1.get((java.lang.Object) '4');
        int i7 = defaultedMap1.size();
        java.lang.Object obj9 = defaultedMap1.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap11.get((java.lang.Object) '4');
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj21 = defaultedMap11.get((java.lang.Object) 0.0d);
        defaultedMap1.putAll((java.util.Map) defaultedMap11);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj29 = defaultedMap24.get((java.lang.Object) '4');
        int i30 = defaultedMap24.size();
        java.lang.Object obj32 = defaultedMap24.remove((java.lang.Object) 10.0f);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap34.get((java.lang.Object) '4');
        boolean b41 = defaultedMap34.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap34.entrySet();
        java.lang.Object obj44 = defaultedMap34.get((java.lang.Object) 0.0d);
        defaultedMap24.putAll((java.util.Map) defaultedMap34);
        collections.Predicate predicate46 = collections.PredicateUtils.notNullPredicate();
        collections.Predicate predicate47 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap34, predicate46, predicate47);
        java.lang.Object obj49 = defaultedMap1.get((java.lang.Object) map48);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj54 = defaultedMap51.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap51.get((java.lang.Object) '4');
        boolean b57 = defaultedMap51.isEmpty();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj62 = defaultedMap59.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj64 = defaultedMap59.get((java.lang.Object) '4');
        boolean b66 = defaultedMap59.containsKey((java.lang.Object) (byte) 0);
        boolean b67 = defaultedMap51.equals((java.lang.Object) defaultedMap59);
        boolean b68 = defaultedMap59.isEmpty();
        collections.Predicate predicate69 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate70 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map71 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap59, predicate69, predicate70);
        java.util.Map map72 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) predicate69);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (short) 1 + "'", obj6.equals((short) 1));
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short) 1 + "'", obj16.equals((short) 1));
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 1 + "'", obj29.equals((short) 1));
        org.junit.Assert.assertTrue(i30 == 1);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short) 1 + "'", obj39.equals((short) 1));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (short) 1 + "'", obj44.equals((short) 1));
        org.junit.Assert.assertNotNull(predicate46);
        org.junit.Assert.assertNotNull(predicate47);
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 1 + "'", obj49.equals((short) 1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (short) 1 + "'", obj56.equals((short) 1));
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + obj64 + "' != '" + (short) 1 + "'", obj64.equals((short) 1));
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNotNull(predicate69);
        org.junit.Assert.assertNotNull(predicate70);
        org.junit.Assert.assertNotNull(map71);
        org.junit.Assert.assertNotNull(map72);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap6.get((java.lang.Object) '4');
        int i12 = defaultedMap6.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        boolean b14 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj21 = defaultedMap16.get((java.lang.Object) '4');
        java.util.Collection collection22 = defaultedMap16.values();
        java.util.Collection collection23 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap27.get((java.lang.Object) '4');
        boolean b33 = defaultedMap27.isEmpty();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj40 = defaultedMap35.get((java.lang.Object) '4');
        boolean b42 = defaultedMap35.containsKey((java.lang.Object) (byte) 0);
        boolean b43 = defaultedMap27.equals((java.lang.Object) defaultedMap35);
        boolean b44 = defaultedMap35.isEmpty();
        defaultedMap35.clear();
        collections.Predicate predicate46 = collections.PredicateUtils.uniquePredicate();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap48.get((java.lang.Object) '4');
        boolean b54 = defaultedMap48.isEmpty();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap56.get((java.lang.Object) '4');
        boolean b63 = defaultedMap56.containsKey((java.lang.Object) (byte) 0);
        boolean b64 = defaultedMap48.equals((java.lang.Object) defaultedMap56);
        boolean b65 = defaultedMap56.isEmpty();
        collections.Predicate predicate66 = collections.PredicateUtils.uniquePredicate();
        collections.Predicate predicate67 = collections.PredicateUtils.notNullPredicate();
        java.util.Map map68 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap56, predicate66, predicate67);
        java.util.Map map69 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap35, predicate46, predicate66);
        boolean b70 = defaultedMap25.equals((java.lang.Object) predicate46);
        java.util.Map map71 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap16, (java.lang.Object) predicate46);
        boolean b72 = defaultedMap1.containsValue((java.lang.Object) defaultedMap16);
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.util.Set set75 = defaultedMap74.entrySet();
        java.util.Set set76 = defaultedMap74.entrySet();
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj81 = defaultedMap78.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj83 = defaultedMap78.get((java.lang.Object) '4');
        java.util.Collection collection84 = defaultedMap78.values();
        collections.map.DefaultedMap defaultedMap85 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap78);
        collections.map.DefaultedMap defaultedMap87 = new collections.map.DefaultedMap((java.lang.Object) (short) 1);
        java.lang.Object obj90 = defaultedMap87.put((java.lang.Object) (short) 1, (java.lang.Object) 'a');
        java.lang.Object obj92 = defaultedMap87.get((java.lang.Object) '4');
        boolean b94 = defaultedMap87.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set95 = defaultedMap87.entrySet();
        java.lang.Object obj96 = defaultedMap74.put((java.lang.Object) defaultedMap85, (java.lang.Object) defaultedMap87);
        java.lang.Object obj97 = defaultedMap16.get((java.lang.Object) defaultedMap74);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 1 + "'", obj11.equals((short) 1));
        org.junit.Assert.assertTrue(i12 == 1);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 1 + "'", obj21.equals((short) 1));
        org.junit.Assert.assertNotNull(collection22);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short) 1 + "'", obj32.equals((short) 1));
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short) 1 + "'", obj40.equals((short) 1));
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(predicate46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (short) 1 + "'", obj53.equals((short) 1));
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short) 1 + "'", obj61.equals((short) 1));
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertNotNull(predicate66);
        org.junit.Assert.assertNotNull(predicate67);
        org.junit.Assert.assertNotNull(map68);
        org.junit.Assert.assertNotNull(map69);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertNotNull(map71);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(set75);
        org.junit.Assert.assertNotNull(set76);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + obj83 + "' != '" + (short) 1 + "'", obj83.equals((short) 1));
        org.junit.Assert.assertNotNull(collection84);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + obj92 + "' != '" + (short) 1 + "'", obj92.equals((short) 1));
        org.junit.Assert.assertTrue(b94 == false);
        org.junit.Assert.assertNotNull(set95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertTrue("'" + obj97 + "' != '" + (short) 1 + "'", obj97.equals((short) 1));
    }
}

